{"version":3,"sources":["assets/logo1.svg","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","components/CustomMarketDialog.jsx","components/layout/FloatingElement.jsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/DeprecatedMarketsInstructions.js","components/LinkAddress.tsx","utils/useInterval.tsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradingView/saveLoadAdapter.tsx","charting_library/charting_library.esm.js","utils/Datafeed.tsx","components/TradingView/index.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","utils/preferences.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","includes","split","length","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","quoteToken","getTokenByMintAddress","referrer","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","signTransaction","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signAllTransactions","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","TOKEN_MINTS","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","mintAddress","NATIVE_SOL","cloneDeep","token","TOKENS","symbol","WSOL","BTC","ETH","USDT","WUSDT","USDC","WUSDC","YFI","LINK","XRP","SUSHI","ALEPH","SXP","HGET","CREAM","UBXT","HNT","FRONT","AKRO","HXRO","UNI","SRM","FTT","MSRM","TOMO","KARMA","LUA","MATH","KEEP","SWAG","FIDA","KIN","MAPS","OXY","RAY","COPE","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","_MARKETS","deprecated","MARKETS","USE_MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","setMarketName","then","catch","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","Text","CustomMarketDialog","visible","onAddCustomMarket","onClose","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","title","onOk","okText","onCancel","okButtonProps","disabled","marginBottom","placeholder","onChange","suffix","LoadingOutlined","marginTop","gutter","Wrapper","styled","FloatingElement","stretchVertical","height","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","onSettleFunds","rowItem","setRowItem","dataIndex","render","textAlign","ghost","marginRight","onClick","fontSize","paddingBottom","overflowX","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","cancel","orderId","orderInfos","text","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","LinkAddress","icon","LinkOutlined","useInterval","delay","savedCallback","setInterval","clearInterval","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","borderTop","borderBottom","paddingRight","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DepositDialog","coinMint","depositCoin","baseOrQuote","paddingTop","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","code","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","align","src","logo1","alt","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chart","saveChart","chartData","content","timestamp","splice","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","assign","o","arguments","n","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","bind","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","getLanguage","setSymbol","changeSymbol","window","removeEventListener","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","addEventListener","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","encodeURIComponent","timeframe","toolbar_bg","replace","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","X","A","F","apiGet","N","tVDWs","d","Qeeef","B","_lodash","method","M","j","f","TextEncoder","crypto","Uint8Array","w","DSQWA","H","K","rlUik","MtwRi","cPLzc","FyLkI","l","makeDataFeed","subscriptions","onReady","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","getBars","symbolInfo","onHistoryCallback","onErrorCallback","firstDataRequest","ceil","convertResolution","parseCandles","nodeData","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","candle","reduceTs","lastCandle","time","close","c","open","high","h","low","volume","v","unsubscribeBars","ts","resolutionTv","candles","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageUrl","chartsStorageApiVersion","clientId","userId","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","className","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","flexDirection","border","background","fontStyle","fontWeight","defaultValue","bordered","left","top","borderRadius","onSetQuoteSize","tipFormatter","marks","paddingLeft","checked","block","toUpperCase","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","overflowY","toLocaleTimeString","FillsTable","fills","fill","useFills","liquidity","feeCost","FeesTable","balance","feeTier","marginLeft","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","Paragraph","Tabs","TabPane","Index","activeKeyStr","setActiveKeyStr","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","newMarKets","newCustomMarkets","MarketSelector","onDeleteCustomMarket","trigger","InfoCircleOutlined","PlusCircleOutlined","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","DeleteOutlined","stopPropagation","nativeEvent","stopImmediatePropagation","arr","addList","reList","uniqueArray","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","connect","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","defaultActiveKey","tab","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","addonBefore","SwapOutlined","ConvertPage","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","wrap","overlay","Item","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","options","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","onSubmit","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","Group","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3957a5cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.30b8e744.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3cdaf3a1.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport BN from 'bn.js';\r\n\r\nexport function isValidPublicKey(key) {\r\n  if (!key) {\r\n    return false;\r\n  }\r\n  try {\r\n    new PublicKey(key);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const percentFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function floorToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals\r\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\r\n    : Math.floor(value);\r\n}\r\n\r\nexport function roundToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function getDecimalCount(value): number {\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('.')\r\n  )\r\n    return value.toString().split('.')[1].length || 0;\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('e')\r\n  )\r\n    return parseInt(value.toString().split('e-')[1] || '0');\r\n  return 0;\r\n}\r\n\r\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\r\n  const quotient = numerator.div(denominator).toNumber();\r\n  const rem = numerator.umod(denominator);\r\n  const gcd = rem.gcd(denominator);\r\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\r\n}\r\n\r\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\r\n  return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nconst localStorageListeners = {};\r\n\r\nexport function useLocalStorageStringState(\r\n  key: string,\r\n  defaultState: string | null = null,\r\n): [string | null, (newState: string | null) => void] {\r\n  const state = localStorage.getItem(key) || defaultState;\r\n\r\n  const [, notify] = useState(key + '\\n' + state);\r\n\r\n  useEffect(() => {\r\n    if (!localStorageListeners[key]) {\r\n      localStorageListeners[key] = [];\r\n    }\r\n    localStorageListeners[key].push(notify);\r\n    return () => {\r\n      localStorageListeners[key] = localStorageListeners[key].filter(\r\n        (listener) => listener !== notify,\r\n      );\r\n      if (localStorageListeners[key].length === 0) {\r\n        delete localStorageListeners[key];\r\n      }\r\n    };\r\n  }, [key]);\r\n\r\n  const setState = useCallback<(newState: string | null) => void>(\r\n    (newState) => {\r\n      const changed = state !== newState;\r\n      if (!changed) {\r\n        return;\r\n      }\r\n\r\n      if (newState === null) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newState);\r\n      }\r\n      localStorageListeners[key].forEach((listener) =>\r\n        listener(key + '\\n' + newState),\r\n      );\r\n    },\r\n    [state, key],\r\n  );\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport function useLocalStorageState<T = any>(\r\n  key: string,\r\n  defaultState: T | null = null,\r\n): [T, (newState: T) => void] {\r\n  let [stringState, setStringState] = useLocalStorageStringState(\r\n    key,\r\n    JSON.stringify(defaultState),\r\n  );\r\n  return [\r\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\r\n    (newState) => setStringState(JSON.stringify(newState)),\r\n  ];\r\n}\r\n\r\nexport function useEffectAfterTimeout(effect, timeout) {\r\n  useEffect(() => {\r\n    const handle = setTimeout(effect, timeout);\r\n    return () => clearTimeout(handle);\r\n  });\r\n}\r\n\r\nexport function useListener(emitter, eventName) {\r\n  const [, forceUpdate] = useState(0);\r\n  useEffect(() => {\r\n    const listener = () => forceUpdate((i) => i + 1);\r\n    emitter.on(eventName, listener);\r\n    return () => emitter.removeListener(eventName, listener);\r\n  }, [emitter, eventName]);\r\n}\r\n\r\nexport function abbreviateAddress(address: PublicKey, size = 4) {\r\n  const base58 = address.toBase58();\r\n  return base58.slice(0, size) + '…' + base58.slice(-size);\r\n}\r\n\r\nexport function isEqual(obj1, obj2, keys) {\r\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n    return false;\r\n  }\r\n  keys = keys || Object.keys(obj1);\r\n  for (const k of keys) {\r\n    if (obj1[k] !== obj2[k]) {\r\n      // shallow comparison\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function flatten(obj, { prefix = '', restrictTo }) {\r\n  let restrict = restrictTo;\r\n  if (restrict) {\r\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\r\n  }\r\n  const result = {};\r\n  (function recurse(obj, current, keys) {\r\n    (keys || Object.keys(obj)).forEach((key) => {\r\n      const value = obj[key];\r\n      const newKey = current ? current + '.' + key : key; // joined key with dot\r\n      if (value && typeof value === 'object') {\r\n        // @ts-ignore\r\n        recurse(value, newKey); // nested object\r\n      } else {\r\n        result[newKey] = value;\r\n      }\r\n    });\r\n  })(obj, prefix, restrict);\r\n  return result;\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nimport assert from 'assert';\r\n\r\nconst pageLoadTime = new Date();\r\n\r\nconst globalCache: Map<any, any> = new Map();\r\n\r\nclass FetchLoopListener<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  refreshInterval: number;\r\n  refreshIntervalOnError: number | null;\r\n  callback: () => void;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(\r\n    cacheKey: any,\r\n    fn: () => Promise<T>,\r\n    refreshInterval: number,\r\n    refreshIntervalOnError: number | null,\r\n    callback: () => void,\r\n    cacheNullValues: Boolean,\r\n  ) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.refreshInterval = refreshInterval;\r\n    this.refreshIntervalOnError = refreshIntervalOnError;\r\n    this.callback = callback;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n}\r\n\r\nclass FetchLoopInternal<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  timeoutId: null | any;\r\n  listeners: Set<FetchLoopListener<T>>;\r\n  errors: number;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.timeoutId = null;\r\n    this.listeners = new Set();\r\n    this.errors = 0;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n\r\n  get refreshInterval(): number {\r\n    return Math.min(\r\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\r\n    );\r\n  }\r\n\r\n  get refreshIntervalOnError(): number | null {\r\n    const refreshIntervalsOnError: number[] = [...this.listeners]\r\n      .map((listener) => listener.refreshIntervalOnError)\r\n      .filter((x): x is number => x !== null);\r\n    if (refreshIntervalsOnError.length === 0) {\r\n      return null;\r\n    }\r\n    return Math.min(...refreshIntervalsOnError);\r\n  }\r\n\r\n  get stopped(): boolean {\r\n    return this.listeners.size === 0;\r\n  }\r\n\r\n  addListener(listener: FetchLoopListener<T>): void {\r\n    const previousRefreshInterval = this.refreshInterval;\r\n    this.listeners.add(listener);\r\n    if (this.refreshInterval < previousRefreshInterval) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  removeListener(listener: FetchLoopListener<T>): void {\r\n    assert(this.listeners.delete(listener));\r\n    if (this.stopped) {\r\n      if (this.timeoutId) {\r\n        clearTimeout(this.timeoutId);\r\n        this.timeoutId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener.callback());\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    let errored = false;\r\n    try {\r\n      const data = await this.fn();\r\n      if (!this.cacheNullValues && data === null) {\r\n        console.log(`Not caching null value for ${this.cacheKey}`);\r\n        // cached data has not changed so no need to re-render\r\n        this.errors = 0;\r\n        return data;\r\n      } else {\r\n        globalCache.set(this.cacheKey, data);\r\n        this.errors = 0;\r\n        this.notifyListeners();\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      ++this.errors;\r\n      console.warn(error);\r\n      errored = true;\r\n    } finally {\r\n      if (!this.timeoutId && !this.stopped) {\r\n        let waitTime = this.refreshInterval;\r\n        if (\r\n          errored &&\r\n          this.refreshIntervalOnError &&\r\n          this.refreshIntervalOnError > 0\r\n        ) {\r\n          waitTime = this.refreshIntervalOnError;\r\n        }\r\n\r\n        // Back off on errors.\r\n        if (this.errors > 0) {\r\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\r\n        }\r\n\r\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\r\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\r\n        if (timeSincePageLoad < 5000) {\r\n          waitTime += 5000 - timeSincePageLoad / 2;\r\n        }\r\n\r\n        // Refresh background pages slowly.\r\n        if (document.visibilityState === 'hidden') {\r\n          waitTime = 60000;\r\n        } else if (!document.hasFocus()) {\r\n          waitTime *= 1.5;\r\n        }\r\n\r\n        // Add jitter so we don't send all requests at the same time.\r\n        waitTime *= 0.8 + 0.4 * Math.random();\r\n\r\n        this.timeoutId = setTimeout(this.refresh, waitTime);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass FetchLoops {\r\n  loops = new Map();\r\n\r\n  addListener<T>(listener: FetchLoopListener<T>) {\r\n    if (!this.loops.has(listener.cacheKey)) {\r\n      this.loops.set(\r\n        listener.cacheKey,\r\n        new FetchLoopInternal<T>(\r\n          listener.cacheKey,\r\n          listener.fn,\r\n          listener.cacheNullValues,\r\n        ),\r\n      );\r\n    }\r\n    this.loops.get(listener.cacheKey).addListener(listener);\r\n  }\r\n\r\n  removeListener<T>(listener: FetchLoopListener<T>) {\r\n    const loop = this.loops.get(listener.cacheKey);\r\n    loop.removeListener(listener);\r\n    if (loop.stopped) {\r\n      this.loops.delete(listener.cacheKey);\r\n      globalCache.delete(listener.cacheKey);\r\n    }\r\n  }\r\n\r\n  refresh(cacheKey) {\r\n    if (this.loops.has(cacheKey)) {\r\n      this.loops.get(cacheKey).refresh();\r\n    }\r\n  }\r\n\r\n  refreshAll() {\r\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\r\n  }\r\n}\r\nconst globalLoops = new FetchLoops();\r\n\r\nexport function useAsyncData<T = any>(\r\n  asyncFn: () => Promise<T>,\r\n  cacheKey: any,\r\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\r\n  cacheNullValues: Boolean = true,\r\n): [null | undefined | T, boolean] {\r\n  const [, rerender] = useReducer((i) => i + 1, 0);\r\n\r\n  useEffect(() => {\r\n    if (!cacheKey) {\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      return () => {};\r\n    }\r\n    const listener = new FetchLoopListener<T>(\r\n      cacheKey,\r\n      asyncFn,\r\n      refreshInterval,\r\n      refreshIntervalOnError,\r\n      rerender,\r\n      cacheNullValues,\r\n    );\r\n    globalLoops.addListener(listener);\r\n    return () => globalLoops.removeListener(listener);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey, refreshInterval]);\r\n\r\n  if (!cacheKey) {\r\n    return [null, false];\r\n  }\r\n\r\n  const loaded = globalCache.has(cacheKey);\r\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\r\n  return [data, loaded];\r\n}\r\n\r\nexport function refreshCache(cacheKey: any, clearCache = false): void {\r\n  if (clearCache) {\r\n    globalCache.delete(cacheKey);\r\n  }\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.refresh();\r\n    if (clearCache) {\r\n      loop.notifyListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport function refreshAllCaches(): void {\r\n  for (const loop of globalLoops.loops.values()) {\r\n    loop.refresh();\r\n  }\r\n}\r\n\r\nexport function setCache(\r\n  cacheKey: any,\r\n  value: any,\r\n  { initializeOnly = false } = {},\r\n): void {\r\n  if (initializeOnly && globalCache.has(cacheKey)) {\r\n    return;\r\n  }\r\n  globalCache.set(cacheKey, value);\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.notifyListeners();\r\n  }\r\n}\r\n","import { useLocalStorageState } from './utils';\r\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport { setCache, useAsyncData } from './fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\nimport { ConnectionContextValues, EndpointInfo } from './types';\r\n\r\nexport const ENDPOINTS: EndpointInfo[] = [\r\n  {\r\n    name: 'mainnet-beta',\r\n    endpoint: 'https://solana-api.projectserum.com',\r\n    custom: false,\r\n  },\r\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\r\n];\r\n\r\nconst accountListenerCount = new Map();\r\n\r\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\r\n  null,\r\n);\r\n\r\nexport function ConnectionProvider({ children }) {\r\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\r\n    'connectionEndpts',\r\n    ENDPOINTS[0].endpoint,\r\n  );\r\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\r\n    EndpointInfo[]\r\n  >('customConnectionEndpoints', []);\r\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\r\n\r\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n\r\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\r\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\r\n  // This is a hack to prevent the list from every getting empty\r\n  useEffect(() => {\r\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\r\n    return () => {\r\n      connection.removeAccountChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = connection.onSlotChange(() => null);\r\n    return () => {\r\n      connection.removeSlotChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onAccountChange(\r\n      new Account().publicKey,\r\n      () => {},\r\n    );\r\n    return () => {\r\n      sendConnection.removeAccountChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onSlotChange(() => null);\r\n    return () => {\r\n      sendConnection.removeSlotChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  return (\r\n    <ConnectionContext.Provider\r\n      value={{\r\n        endpoint,\r\n        setEndpoint,\r\n        connection,\r\n        sendConnection,\r\n        availableEndpoints,\r\n        setCustomEndpoints,\r\n      }}\r\n    >\r\n      {children}\r\n    </ConnectionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.connection;\r\n}\r\n\r\nexport function useSendConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.sendConnection;\r\n}\r\n\r\nexport function useConnectionConfig() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return {\r\n    endpoint: context.endpoint,\r\n    endpointInfo: context.availableEndpoints.find(\r\n      (info) => info.endpoint === context.endpoint,\r\n    ),\r\n    setEndpoint: context.setEndpoint,\r\n    availableEndpoints: context.availableEndpoints,\r\n    setCustomEndpoints: context.setCustomEndpoints,\r\n  };\r\n}\r\n\r\nexport function useAccountInfo(\r\n  publicKey: PublicKey | undefined | null,\r\n): [AccountInfo<Buffer> | null | undefined, boolean] {\r\n  const connection = useConnection();\r\n  const cacheKey = tuple(connection, publicKey?.toBase58());\r\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\r\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\r\n    cacheKey,\r\n    { refreshInterval: 60_000 },\r\n  );\r\n  useEffect(() => {\r\n    if (!publicKey) {\r\n      return;\r\n    }\r\n    if (accountListenerCount.has(cacheKey)) {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      ++currentItem.count;\r\n    } else {\r\n      let previousInfo: AccountInfo<Buffer> | null = null;\r\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\r\n        if (\r\n          !previousInfo ||\r\n          !previousInfo.data.equals(info.data) ||\r\n          previousInfo.lamports !== info.lamports\r\n        ) {\r\n          previousInfo = info;\r\n          setCache(cacheKey, info);\r\n        }\r\n      });\r\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\r\n    }\r\n    return () => {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      let nextCount = currentItem.count - 1;\r\n      if (nextCount <= 0) {\r\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\r\n        accountListenerCount.delete(cacheKey);\r\n      } else {\r\n        --currentItem.count;\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey]);\r\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\r\n  if (\r\n    !accountInfo ||\r\n    !previousInfoRef.current ||\r\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\r\n    previousInfoRef.current.lamports !== accountInfo.lamports\r\n  ) {\r\n    previousInfoRef.current = accountInfo;\r\n  }\r\n  return [previousInfoRef.current, loaded];\r\n}\r\n\r\nexport function useAccountData(publicKey) {\r\n  const [accountInfo] = useAccountInfo(publicKey);\r\n  return accountInfo && accountInfo.data;\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function Link({ external = false, ...props }) {\r\n  let { to, children, ...rest } = props;\r\n  if (external) {\r\n    return (\r\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  return (\r\n    <RouterLink to={to} {...rest}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Link from '../components/Link';\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n  txid,\r\n  type = 'info',\r\n  placement = 'bottomLeft',\r\n}: {\r\n  message: string;\r\n  description?: string | JSX.Element;\r\n  txid?: string;\r\n  type?: string;\r\n  placement?: string;\r\n}) {\r\n  if (txid) {\r\n    description = (\r\n      <Link\r\n        external\r\n        to={'https://explorer.solana.com/tx/' + txid}\r\n        style={{ color: '#0000ff' }}\r\n      >\r\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\r\n      </Link>\r\n    );\r\n  }\r\n  notification[type]({\r\n    message: <span style={{ color: 'black' }}>{message}</span>,\r\n    description: (\r\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\r\n    ),\r\n    placement,\r\n    style: {\r\n      backgroundColor: 'white',\r\n    },\r\n  });\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport { WalletContextValues } from './types';\r\n\r\nexport const WALLET_PROVIDERS = [\r\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\r\n    'walletProvider',\r\n    'https://www.sollet.io',\r\n  );\r\n  let providerUrl;\r\n  if (!savedProviderUrl) {\r\n    providerUrl = 'https://www.sollet.io';\r\n  } else {\r\n    providerUrl = savedProviderUrl;\r\n  }\r\n\r\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\r\n    providerUrl,\r\n    endpoint,\r\n  ]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('trying to connect');\r\n    wallet.on('connect', () => {\r\n      console.log('connected');\r\n      localStorage.removeItem('feeDiscountKey')\r\n      setConnected(true);\r\n      let walletPublicKey = wallet.publicKey.toBase58();\r\n      let keyToDisplay =\r\n        walletPublicKey.length > 20\r\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\r\n              walletPublicKey.length - 7,\r\n              walletPublicKey.length,\r\n            )}`\r\n          : walletPublicKey;\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Connected to wallet ' + keyToDisplay,\r\n      });\r\n    });\r\n    wallet.on('disconnect', () => {\r\n      setConnected(false);\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Disconnected from wallet',\r\n      });\r\n      localStorage.removeItem('feeDiscountKey')\r\n    });\r\n    return () => {\r\n      wallet.disconnect();\r\n      setConnected(false);\r\n    };\r\n  }, [wallet]);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n  return {\r\n    connected: context.connected,\r\n    wallet: context.wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n  };\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml,body{\r\n  background: RGB(15,20,41,1);\r\n}\r\ninput[type=number]::-webkit-inner-spin-button {\r\n  opacity: 0;\r\n}\r\ninput[type=number]:hover::-webkit-inner-spin-button,\r\ninput[type=number]:focus::-webkit-inner-spin-button {\r\n  opacity: 0.25;\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n}\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2d313c;\r\n}\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #5b5f67;\r\n}\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #5b5f67;\r\n}\r\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-track,\r\n.ant-slider ant-slider-track:hover {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-dot-active,\r\n.ant-slider-handle,\r\n.ant-slider-handle-click-focused,\r\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\r\n  border: 2px solid #2abdd2; \r\n}\r\n.ant-table-tbody > tr.ant-table-row:hover > td {\r\n  background: #273043;\r\n}\r\n.ant-table-tbody > tr > td {\r\n  border-bottom: 8px solid #1A2029;\r\n}\r\n.ant-table-container table > thead > tr:first-child th {\r\n  border-bottom: none;\r\n}\r\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\r\n  border-top: 1px solid #434a59 !important;\r\n}\r\n.ant-layout {\r\n    background: #0F1429\r\n  }\r\n  .ant-table {\r\n    background: #212734;\r\n  }\r\n  .ant-table-thead > tr > th {\r\n    background: #1A2029;\r\n  }\r\n.ant-select-item-option-content {\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n}\r\n.ant-modal-content {\r\n  background-color: #212734;\r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-moz-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n.flash {\r\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\r\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\r\n  animation: highlight 0.5s ease 0s 1 alternate;\r\n}`;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Title level={2}>Something went wrong.</Title>\r\n            <Title level={4}>Please try again later.</Title>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import {\r\n  Account,\r\n  AccountInfo,\r\n  Commitment,\r\n  Connection,\r\n  PublicKey,\r\n  RpcResponseAndContext,\r\n  SimulatedTransactionResponse,\r\n  SystemProgram,\r\n  Transaction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport {\r\n  DexInstructions,\r\n  Market,\r\n  OpenOrders,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport { SelectedTokenAccounts, TokenAccount } from './types';\r\nimport { getDecimalCount, sleep } from './utils';\r\n\r\nimport BN from 'bn.js';\r\nimport { Buffer } from 'buffer';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport assert from 'assert';\r\nimport { getSelectedTokenAccountForMint } from './markets';\r\nimport { getTokenByMintAddress } from './tokens'\r\nimport { notify } from './notifications';\r\nimport { struct } from 'superstruct';\r\n\r\nexport async function createTokenAccountTransaction({\r\n  connection,\r\n  wallet,\r\n  mintPublicKey,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  mintPublicKey: PublicKey;\r\n}): Promise<{\r\n  transaction: Transaction;\r\n  signer: Account;\r\n  newAccountPubkey: PublicKey;\r\n}> {\r\n  const newAccount = new Account();\r\n  const transaction = new Transaction();\r\n  const instruction = SystemProgram.createAccount({\r\n    fromPubkey: wallet.publicKey,\r\n    newAccountPubkey: newAccount.publicKey,\r\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n    space: 165,\r\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n  });\r\n  transaction.add(instruction);\r\n  transaction.add(\r\n    TokenInstructions.initializeAccount({\r\n      account: newAccount.publicKey,\r\n      mint: mintPublicKey,\r\n      owner: wallet.publicKey,\r\n    }),\r\n  );\r\n  return {\r\n    transaction,\r\n    signer: newAccount,\r\n    newAccountPubkey: newAccount.publicKey,\r\n  };\r\n}\r\n\r\nexport async function settleFunds({\r\n  market,\r\n  openOrders,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n}: {\r\n  market: Market;\r\n  openOrders: OpenOrders;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: TokenAccount;\r\n  quoteCurrencyAccount: TokenAccount;\r\n}): Promise<string | undefined> {\r\n  if (\r\n    !market ||\r\n    !wallet ||\r\n    !connection ||\r\n    !openOrders ||\r\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\r\n  ) {\r\n    notify({ message: 'Not connected' });\r\n    return;\r\n  }\r\n\r\n  let createAccountTransaction: Transaction | undefined;\r\n  let createAccountSigner: Account | undefined;\r\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\r\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\r\n\r\n  if (!baseCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  if (!quoteCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  let referrerQuoteWallet: PublicKey | null = null\r\n  if (market.supportsReferralFees) {\r\n    const quoteToken = getTokenByMintAddress(market.quoteMintAddress.toBase58())\r\n    if (quoteToken?.referrer) {\r\n      referrerQuoteWallet = new PublicKey(quoteToken?.referrer)\r\n    }\r\n  }\r\n\r\n  const {\r\n    transaction: settleFundsTransaction,\r\n    signers: settleFundsSigners,\r\n  } = await market.makeSettleFundsTransaction(\r\n    connection,\r\n    openOrders,\r\n    baseCurrencyAccountPubkey,\r\n    quoteCurrencyAccountPubkey,\r\n    referrerQuoteWallet,\r\n  );\r\n\r\n  let transaction = mergeTransactions([\r\n    createAccountTransaction,\r\n    settleFundsTransaction,\r\n  ]);\r\n  let signers = createAccountSigner\r\n    ? [...settleFundsSigners, createAccountSigner]\r\n    : settleFundsSigners;\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Settling funds...',\r\n  });\r\n}\r\n\r\nexport async function settleAllFunds({\r\n  connection,\r\n  wallet,\r\n  tokenAccounts,\r\n  markets,\r\n  selectedTokenAccounts,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  tokenAccounts: TokenAccount[];\r\n  markets: Market[];\r\n  selectedTokenAccounts?: SelectedTokenAccounts;\r\n}) {\r\n  if (!markets || !wallet || !connection || !tokenAccounts) {\r\n    return;\r\n  }\r\n\r\n  const programIds: PublicKey[] = [];\r\n  markets\r\n    .reduce((cumulative, m) => {\r\n      // @ts-ignore\r\n      cumulative.push(m._programId);\r\n      return cumulative;\r\n    }, [])\r\n    .forEach((programId) => {\r\n      if (!programIds.find((p) => p.equals(programId))) {\r\n        programIds.push(programId);\r\n      }\r\n    });\r\n\r\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\r\n    const openOrdersAccounts = await OpenOrders.findForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n      programId,\r\n    );\r\n    return openOrdersAccounts.filter(\r\n      (openOrders) =>\r\n        openOrders.baseTokenFree.toNumber() ||\r\n        openOrders.quoteTokenFree.toNumber(),\r\n    );\r\n  };\r\n\r\n  const openOrdersAccountsForProgramIds = await Promise.all(\r\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\r\n  );\r\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\r\n    (accounts, current) => accounts.concat(current),\r\n    [],\r\n  );\r\n\r\n  const settleTransactions = (\r\n    await Promise.all(\r\n      openOrdersAccounts.map((openOrdersAccount) => {\r\n        const market = markets.find((m) =>\r\n          // @ts-ignore\r\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\r\n        );\r\n        const baseMint = market?.baseMintAddress;\r\n        const quoteMint = market?.quoteMintAddress;\r\n\r\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          baseMint,\r\n          baseMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[baseMint.toBase58()],\r\n        )?.pubkey;\r\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          quoteMint,\r\n          quoteMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[quoteMint.toBase58()],\r\n        )?.pubkey;\r\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          market &&\r\n          market.makeSettleFundsTransaction(\r\n            connection,\r\n            openOrdersAccount,\r\n            selectedBaseTokenAccount,\r\n            selectedQuoteTokenAccount,\r\n          )\r\n        );\r\n      }),\r\n    )\r\n  ).filter(\r\n    (\r\n      x,\r\n    ): x is {\r\n      signers: Account[];\r\n      transaction: Transaction;\r\n      payer: PublicKey;\r\n    } => !!x,\r\n  );\r\n  if (!settleTransactions || settleTransactions.length === 0) return;\r\n\r\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\r\n  const signers: Array<Account> = [];\r\n  settleTransactions\r\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\r\n    .forEach((signer) => {\r\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\r\n        signers.push(signer);\r\n      }\r\n    });\r\n\r\n  const transaction = mergeTransactions(transactions);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n  });\r\n}\r\n\r\nexport async function cancelOrder(params: {\r\n  market: Market;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  order: Order;\r\n}) {\r\n  return cancelOrders({ ...params, orders: [params.order] });\r\n}\r\n\r\nexport async function cancelOrders({\r\n  market,\r\n  wallet,\r\n  connection,\r\n  orders,\r\n}: {\r\n  market: Market;\r\n  wallet: Wallet;\r\n  connection: Connection;\r\n  orders: Order[];\r\n}) {\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  orders.forEach((order) => {\r\n    transaction.add(\r\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\r\n    );\r\n  });\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Sending cancel...',\r\n  });\r\n}\r\n\r\nexport async function placeOrder({\r\n  side,\r\n  price,\r\n  size,\r\n  orderType,\r\n  market,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n  feeDiscountPubkey = undefined,\r\n}: {\r\n  side: 'buy' | 'sell';\r\n  price: number;\r\n  size: number;\r\n  orderType: 'ioc' | 'postOnly' | 'limit';\r\n  market: Market | undefined | null;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: PublicKey | undefined;\r\n  quoteCurrencyAccount: PublicKey | undefined;\r\n  feeDiscountPubkey: PublicKey | undefined;\r\n}) {\r\n  let formattedMinOrderSize =\r\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\r\n    market?.minOrderSize;\r\n  let formattedTickSize =\r\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\r\n    market?.tickSize;\r\n  const isIncrement = (num, step) =>\r\n    Math.abs((num / step) % 1) < 1e-5 ||\r\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\r\n  if (isNaN(price)) {\r\n    notify({ message: 'Invalid price', type: 'error' });\r\n    return;\r\n  }\r\n  if (isNaN(size)) {\r\n    notify({ message: 'Invalid size', type: 'error' });\r\n    return;\r\n  }\r\n  if (!wallet || !wallet.publicKey) {\r\n    notify({ message: 'Connect wallet', type: 'error' });\r\n    return;\r\n  }\r\n  if (!market) {\r\n    notify({ message: 'Invalid  market', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(size, market.minOrderSize)) {\r\n    notify({\r\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (size < market.minOrderSize) {\r\n    notify({ message: 'Size too small', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(price, market.tickSize)) {\r\n    notify({\r\n      message: `Price must be an increment of ${formattedTickSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (price < market.tickSize) {\r\n    notify({ message: 'Price under tick size', type: 'error' });\r\n    return;\r\n  }\r\n  const owner = wallet.publicKey;\r\n  const transaction = new Transaction();\r\n  const signers: Account[] = [];\r\n\r\n  if (!baseCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    baseCurrencyAccount = newAccountPubkey;\r\n  }\r\n  if (!quoteCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    quoteCurrencyAccount = newAccountPubkey;\r\n  }\r\n\r\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\r\n  if (!payer) {\r\n    notify({\r\n      message: 'Need an SPL token account for cost currency',\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  const params = {\r\n    owner,\r\n    payer,\r\n    side,\r\n    price,\r\n    size,\r\n    orderType,\r\n    feeDiscountPubkey: feeDiscountPubkey || null,\r\n  };\r\n  console.log(params);\r\n\r\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\r\n  transaction.add(matchOrderstransaction);\r\n  const startTime = getUnixTs();\r\n  let {\r\n    transaction: placeOrderTx,\r\n    signers: placeOrderSigners,\r\n  } = await market.makePlaceOrderTransaction(\r\n    connection,\r\n    params,\r\n    120_000,\r\n    120_000,\r\n  );\r\n  const endTime = getUnixTs();\r\n  console.log(`Creating order transaction took ${endTime - startTime}`);\r\n  transaction.add(placeOrderTx);\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  signers.push(...placeOrderSigners);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    signers,\r\n    sendingMessage: 'Sending order...',\r\n  });\r\n}\r\n\r\nexport async function listMarket({\r\n  connection,\r\n  wallet,\r\n  baseMint,\r\n  quoteMint,\r\n  baseLotSize,\r\n  quoteLotSize,\r\n  dexProgramId,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  baseLotSize: number;\r\n  quoteLotSize: number;\r\n  dexProgramId: PublicKey;\r\n}) {\r\n  const market = new Account();\r\n  const requestQueue = new Account();\r\n  const eventQueue = new Account();\r\n  const bids = new Account();\r\n  const asks = new Account();\r\n  const baseVault = new Account();\r\n  const quoteVault = new Account();\r\n  const feeRateBps = 0;\r\n  const quoteDustThreshold = new BN(100);\r\n\r\n  async function getVaultOwnerAndNonce() {\r\n    const nonce = new BN(0);\r\n    while (true) {\r\n      try {\r\n        const vaultOwner = await PublicKey.createProgramAddress(\r\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\r\n          dexProgramId,\r\n        );\r\n        return [vaultOwner, nonce];\r\n      } catch (e) {\r\n        nonce.iaddn(1);\r\n      }\r\n    }\r\n  }\r\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\r\n\r\n  const tx1 = new Transaction();\r\n  tx1.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: baseVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: quoteVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: baseVault.publicKey,\r\n      mint: baseMint,\r\n      owner: vaultOwner,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: quoteVault.publicKey,\r\n      mint: quoteMint,\r\n      owner: vaultOwner,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: market.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(\r\n        Market.getLayout(dexProgramId).span,\r\n      ),\r\n      space: Market.getLayout(dexProgramId).span,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: requestQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\r\n      space: 5120 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: eventQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\r\n      space: 262144 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: bids.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: asks.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    DexInstructions.initializeMarket({\r\n      market: market.publicKey,\r\n      requestQueue: requestQueue.publicKey,\r\n      eventQueue: eventQueue.publicKey,\r\n      bids: bids.publicKey,\r\n      asks: asks.publicKey,\r\n      baseVault: baseVault.publicKey,\r\n      quoteVault: quoteVault.publicKey,\r\n      baseMint,\r\n      quoteMint,\r\n      baseLotSize: new BN(baseLotSize),\r\n      quoteLotSize: new BN(quoteLotSize),\r\n      feeRateBps,\r\n      vaultSignerNonce,\r\n      quoteDustThreshold,\r\n      programId: dexProgramId,\r\n    }),\r\n  );\r\n\r\n  const signedTransactions = await signTransactions({\r\n    transactionsAndSigners: [\r\n      { transaction: tx1, signers: [baseVault, quoteVault] },\r\n      {\r\n        transaction: tx2,\r\n        signers: [market, requestQueue, eventQueue, bids, asks],\r\n      },\r\n    ],\r\n    wallet,\r\n    connection,\r\n  });\r\n  for (let signedTransaction of signedTransactions) {\r\n    await sendSignedTransaction({\r\n      signedTransaction,\r\n      connection,\r\n    });\r\n  }\r\n\r\n  return market.publicKey;\r\n}\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}) {\r\n  const signedTransaction = await signTransaction({\r\n    transaction,\r\n    wallet,\r\n    signers,\r\n    connection,\r\n  });\r\n  return await sendSignedTransaction({\r\n    signedTransaction,\r\n    connection,\r\n    sendingMessage,\r\n    sentMessage,\r\n    successMessage,\r\n    timeout,\r\n  });\r\n}\r\n\r\nexport async function signTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n}) {\r\n  transaction.recentBlockhash = (\r\n    await connection.getRecentBlockhash('max')\r\n  ).blockhash;\r\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  return await wallet.signTransaction(transaction);\r\n}\r\n\r\nexport async function signTransactions({\r\n  transactionsAndSigners,\r\n  wallet,\r\n  connection,\r\n}: {\r\n  transactionsAndSigners: {\r\n    transaction: Transaction;\r\n    signers?: Array<Account>;\r\n  }[];\r\n  wallet: Wallet;\r\n  connection: Connection;\r\n}) {\r\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\r\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\r\n    transaction.recentBlockhash = blockhash;\r\n    transaction.setSigners(\r\n      wallet.publicKey,\r\n      ...signers.map((s) => s.publicKey),\r\n    );\r\n    if (signers?.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n  });\r\n  return await wallet.signAllTransactions(\r\n    transactionsAndSigners.map(({ transaction }) => transaction),\r\n  );\r\n}\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<string> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  notify({ message: sendingMessage });\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n  notify({ message: sentMessage, type: 'success', txid });\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(300);\r\n    }\r\n  })();\r\n  try {\r\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\r\n  } catch (err) {\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n  notify({ message: successMessage, type: 'success', txid });\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return txid;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n) {\r\n  let done = false;\r\n  const result = await new Promise((resolve, reject) => {\r\n    (async () => {\r\n      setTimeout(() => {\r\n        if (done) {\r\n          return;\r\n        }\r\n        done = true;\r\n        console.log('Timed out for txid', txid);\r\n        reject({ timeout: true });\r\n      }, timeout);\r\n      try {\r\n        connection.onSignature(\r\n          txid,\r\n          (result) => {\r\n            console.log('WS confirmed', txid, result);\r\n            done = true;\r\n            if (result.err) {\r\n              reject(result.err);\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          'recent',\r\n        );\r\n        console.log('Set up WS connection', txid);\r\n      } catch (e) {\r\n        done = true;\r\n        console.log('WS error in setup', txid, e);\r\n      }\r\n      while (!done) {\r\n        // eslint-disable-next-line no-loop-func\r\n        (async () => {\r\n          try {\r\n            const signatureStatuses = await connection.getSignatureStatuses([\r\n              txid,\r\n            ]);\r\n            const result = signatureStatuses && signatureStatuses.value[0];\r\n            if (!done) {\r\n              if (!result) {\r\n                console.log('REST null result for', txid, result);\r\n              } else if (result.err) {\r\n                console.log('REST error for', txid, result);\r\n                done = true;\r\n                reject(result.err);\r\n              } else if (!result.confirmations) {\r\n                console.log('REST no confirmations for', txid, result);\r\n              } else {\r\n                console.log('REST confirmation for', txid, result);\r\n                done = true;\r\n                resolve(result);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!done) {\r\n              console.log('REST connection error: txid', txid, e);\r\n            }\r\n          }\r\n        })();\r\n        await sleep(300);\r\n      }\r\n    })();\r\n  });\r\n  done = true;\r\n  return result;\r\n}\r\n\r\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\r\n  const transaction = new Transaction();\r\n  transactions\r\n    .filter((t): t is Transaction => t !== undefined)\r\n    .forEach((t) => {\r\n      transaction.add(t);\r\n    });\r\n  return transaction;\r\n}\r\n\r\nfunction jsonRpcResult(resultDescription: any) {\r\n  const jsonRpcVersion = struct.literal('2.0');\r\n  return struct.union([\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'any',\r\n    }),\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'null?',\r\n      result: resultDescription,\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction jsonRpcResultAndContext(resultDescription: any) {\r\n  return jsonRpcResult({\r\n    context: struct({\r\n      slot: 'number',\r\n    }),\r\n    value: resultDescription,\r\n  });\r\n}\r\n\r\nconst AccountInfoResult = struct({\r\n  executable: 'boolean',\r\n  owner: 'string',\r\n  lamports: 'number',\r\n  data: 'any',\r\n  rentEpoch: 'number?',\r\n});\r\n\r\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\r\n  struct.array([struct.union(['null', AccountInfoResult])]),\r\n);\r\n\r\nexport async function getMultipleSolanaAccounts(\r\n  connection: Connection,\r\n  publicKeys: PublicKey[],\r\n): Promise<\r\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\r\n> {\r\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\r\n  // @ts-ignore\r\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\r\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\r\n  if (res.error) {\r\n    throw new Error(\r\n      'failed to get info about accounts ' +\r\n        publicKeys.map((k) => k.toBase58()).join(', ') +\r\n        ': ' +\r\n        res.error.message,\r\n    );\r\n  }\r\n  assert(typeof res.result !== 'undefined');\r\n  const accounts: Array<{\r\n    executable: any;\r\n    owner: PublicKey;\r\n    lamports: any;\r\n    data: Buffer;\r\n  } | null> = [];\r\n  for (const account of res.result.value) {\r\n    let value: {\r\n      executable: any;\r\n      owner: PublicKey;\r\n      lamports: any;\r\n      data: Buffer;\r\n    } | null = null;\r\n    if (res.result.value) {\r\n      const { executable, owner, lamports, data } = account;\r\n      assert(data[1] === 'base64');\r\n      value = {\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n        data: Buffer.from(data[0], 'base64'),\r\n      };\r\n    }\r\n    accounts.push(value);\r\n  }\r\n  return {\r\n    context: {\r\n      slot: res.result.context.slot,\r\n    },\r\n    value: Object.fromEntries(\r\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\r\n    ),\r\n  };\r\n}\r\n\r\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n","import * as BufferLayout from 'buffer-layout';\r\n\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\r\n\r\nimport BN from 'bn.js';\r\nimport { TOKEN_MINTS } from '@project-serum/serum';\r\nimport { TokenAccount } from './types';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport bs58 from 'bs58';\r\nimport { cloneDeep } from 'lodash-es'\r\nimport { getMultipleSolanaAccounts } from './send';\r\nimport tuple from 'immutable-tuple';\r\nimport { useAsyncData } from './fetch-loop';\r\nimport { useConnection } from './connection';\r\nimport { useMemo } from 'react';\r\n\r\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(32, 'mint'),\r\n  BufferLayout.blob(32, 'owner'),\r\n  BufferLayout.nu64('amount'),\r\n  BufferLayout.blob(93),\r\n]);\r\n\r\nexport const MINT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(36),\r\n  BufferLayout.blob(8, 'supply'),\r\n  BufferLayout.u8('decimals'),\r\n  BufferLayout.u8('initialized'),\r\n  BufferLayout.blob(36),\r\n]);\r\n\r\nexport function parseTokenAccountData(\r\n  data: Buffer,\r\n): { mint: PublicKey; owner: PublicKey; amount: number } {\r\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\r\n  return {\r\n    mint: new PublicKey(mint),\r\n    owner: new PublicKey(owner),\r\n    amount,\r\n  };\r\n}\r\n\r\nexport interface MintInfo {\r\n  decimals: number;\r\n  initialized: boolean;\r\n  supply: BN;\r\n}\r\n\r\nexport function parseTokenMintData(data): MintInfo {\r\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\r\n  return {\r\n    decimals,\r\n    initialized: !!initialized,\r\n    supply: new BN(supply, 10, 'le'),\r\n  };\r\n}\r\n\r\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\r\n  return [\r\n    {\r\n      memcmp: {\r\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\r\n        bytes: publicKey.toBase58(),\r\n      },\r\n    },\r\n    {\r\n      dataSize: ACCOUNT_LAYOUT.span,\r\n    },\r\n  ];\r\n}\r\n\r\nexport const TOKEN_PROGRAM_ID = new PublicKey(\r\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\r\n);\r\n\r\nexport async function getOwnedTokenAccounts(\r\n  connection: Connection,\r\n  publicKey: PublicKey,\r\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\r\n  let filters = getOwnedAccountsFilters(publicKey);\r\n  // @ts-ignore\r\n  let resp = await connection._rpcRequest('getProgramAccounts', [\r\n    TOKEN_PROGRAM_ID.toBase58(),\r\n    {\r\n      commitment: connection.commitment,\r\n      filters,\r\n    },\r\n  ]);\r\n  if (resp.error) {\r\n    throw new Error(\r\n      'failed to get token accounts owned by ' +\r\n        publicKey.toBase58() +\r\n        ': ' +\r\n        resp.error.message,\r\n    );\r\n  }\r\n  return resp.result\r\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\r\n      publicKey: new PublicKey(pubkey),\r\n      accountInfo: {\r\n        data: bs58.decode(data),\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n      },\r\n    }))\r\n    .filter(({ accountInfo }) => {\r\n      // TODO: remove this check once mainnet is updated\r\n      return filters.every((filter) => {\r\n        if (filter.dataSize) {\r\n          return accountInfo.data.length === filter.dataSize;\r\n        } else if (filter.memcmp) {\r\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\r\n          return accountInfo.data\r\n            .slice(\r\n              filter.memcmp.offset,\r\n              filter.memcmp.offset + filterBytes.length,\r\n            )\r\n            .equals(filterBytes);\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n}\r\n\r\nexport async function getTokenAccountInfo(\r\n  connection: Connection,\r\n  ownerAddress: PublicKey,\r\n) {\r\n  let [splAccounts, account] = await Promise.all([\r\n    getOwnedTokenAccounts(connection, ownerAddress),\r\n    connection.getAccountInfo(ownerAddress),\r\n  ]);\r\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\r\n    ({ publicKey, accountInfo }) => {\r\n      return {\r\n        pubkey: publicKey,\r\n        account: accountInfo,\r\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\r\n      };\r\n    },\r\n  );\r\n  return parsedSplAccounts.concat({\r\n    pubkey: ownerAddress,\r\n    account,\r\n    effectiveMint: WRAPPED_SOL_MINT,\r\n  });\r\n}\r\n\r\nexport function useMintToTickers(): { [mint: string]: string } {\r\n  const { customMarkets } = useCustomMarkets();\r\n  const [markets] = useAllMarkets();\r\n  return useMemo(() => {\r\n    const mintsToTickers = Object.fromEntries(\r\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\r\n    );\r\n    for (let market of markets || []) {\r\n      const customMarketInfo = customMarkets.find(\r\n        (customMarket) =>\r\n          customMarket.address === market.market.address.toBase58(),\r\n      );\r\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\r\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\r\n        }\r\n      }\r\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\r\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\r\n        }\r\n      }\r\n    }\r\n    return mintsToTickers;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [markets?.length, customMarkets.length]);\r\n}\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\nexport function useMintInfos(): [\r\n  (\r\n    | {\r\n        [mintAddress: string]: {\r\n          decimals: number;\r\n          initialized: boolean;\r\n        } | null;\r\n      }\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const connection = useConnection();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [allMarkets] = useAllMarkets();\r\n\r\n  const allMints = (tokenAccounts || [])\r\n    .map((account) => account.effectiveMint)\r\n    .concat(\r\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\r\n    )\r\n    .concat(\r\n      (allMarkets || []).map(\r\n        (marketInfo) => marketInfo.market.quoteMintAddress,\r\n      ),\r\n    );\r\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\r\n    (stringMint) => new PublicKey(stringMint),\r\n  );\r\n\r\n  const getAllMintInfo = async () => {\r\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\r\n    return Object.fromEntries(\r\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\r\n        key,\r\n        accountInfo && parseTokenMintData(accountInfo.data),\r\n      ]),\r\n    );\r\n  };\r\n\r\n  return useAsyncData(\r\n    getAllMintInfo,\r\n    tuple(\r\n      'getAllMintInfo',\r\n      connection,\r\n      (tokenAccounts || []).length,\r\n      (allMarkets || []).length,\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\ninterface Tokens {\r\n  [key: string]: any\r\n  [index: number]: any\r\n}\r\n\r\nexport interface TokenInfo {\r\n  symbol: string\r\n  name: string\r\n\r\n  mintAddress: string\r\n  decimals: number\r\n\r\n  referrer?: string\r\n}\r\n\r\n\r\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\r\n  if (mintAddress === NATIVE_SOL.mintAddress) {\r\n    return cloneDeep(NATIVE_SOL)\r\n  }\r\n\r\n  let token = null\r\n\r\n  for (const symbol of Object.keys(TOKENS)) {\r\n    const info = cloneDeep(TOKENS[symbol])\r\n\r\n    if (info.mintAddress === mintAddress) {\r\n      token = info\r\n    }\r\n  }\r\n\r\n  return token\r\n}\r\n\r\nexport const NATIVE_SOL: TokenInfo = {\r\n  symbol: 'SOL',\r\n  name: 'Native Solana',\r\n  mintAddress: '11111111111111111111111111111111',\r\n  decimals: 9\r\n}\r\n\r\n\r\nexport const TOKENS: Tokens = {\r\n  WSOL: {\r\n    symbol: 'WSOL',\r\n    name: 'Wrapped Solana',\r\n    mintAddress: 'So11111111111111111111111111111111111111112',\r\n    decimals: 9,\r\n    referrer: 'HTcarLHe7WRxBQCWvhVB8AP56pnEtJUV2jDGvcpY3xo5'\r\n  },\r\n  BTC: {\r\n    symbol: 'BTC',\r\n    name: 'Wrapped Bitcoin',\r\n    mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\r\n    decimals: 6,\r\n    referrer: 'GZpS8cY8Nt8HuqxzJh6PXTdSxc38vFUjBmi7eEUkkQtG'\r\n  },\r\n  ETH: {\r\n    symbol: 'ETH',\r\n    name: 'Wrapped Ethereum',\r\n    mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\r\n    decimals: 6,\r\n    referrer: 'CXPTcSxxh4AT38gtv3SPbLS7oZVgXzLbMb83o4ziXjjN'\r\n  },\r\n  USDT: {\r\n    symbol: 'USDT',\r\n    name: 'USDT',\r\n    mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\r\n    decimals: 6,\r\n    referrer: '8DwwDNagph8SdwMUdcXS5L9YAyutTyDJmK6cTKrmNFk3'\r\n  },\r\n  WUSDT: {\r\n    symbol: 'WUSDT',\r\n    name: 'Wrapped USDT',\r\n    mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\r\n    decimals: 6,\r\n    referrer: 'CA98hYunCLKgBuD6N8MJSgq1GbW9CXdksLf5mw736tS3'\r\n  },\r\n  USDC: {\r\n    symbol: 'USDC',\r\n    name: 'USDC',\r\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\r\n    decimals: 6,\r\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg'\r\n  },\r\n  WUSDC: {\r\n    symbol: 'WUSDC',\r\n    name: 'Wrapped USDC',\r\n    mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\r\n    decimals: 6\r\n  },\r\n  YFI: {\r\n    symbol: 'YFI',\r\n    name: 'Wrapped YFI',\r\n    mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\r\n    decimals: 6,\r\n    referrer: 'DZjgzKfYzZBBSTo5vytMYvGdNF933DvuX8TftDMrThrb'\r\n  },\r\n  LINK: {\r\n    symbol: 'LINK',\r\n    name: 'Wrapped Chainlink',\r\n    mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\r\n    decimals: 6,\r\n    referrer: 'DRSKKsYZaPEFkRgGywo7KWBGZikf71R9aDr8tjtpr41V'\r\n  },\r\n  XRP: {\r\n    symbol: 'XRP',\r\n    name: 'Wrapped XRP',\r\n    mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\r\n    decimals: 6,\r\n    referrer: '6NeHPXG142tAE2Ej3gHgT2N66i1KH6PFR6PBZw6RyrwH'\r\n  },\r\n  SUSHI: {\r\n    symbol: 'SUSHI',\r\n    name: 'Wrapped SUSHI',\r\n    mintAddress: 'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',\r\n    decimals: 6,\r\n    referrer: '59QxHeHgb28tDc3gStnrW8FNKC9qWuRmRZHBaAqCerJX'\r\n  },\r\n  ALEPH: {\r\n    symbol: 'ALEPH',\r\n    name: 'Wrapped ALEPH',\r\n    mintAddress: 'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',\r\n    decimals: 6,\r\n    referrer: '8FKAKrenJMDd7V6cxnM5BsymHTjqxgodtHbLwZReMnWW'\r\n  },\r\n  SXP: {\r\n    symbol: 'SXP',\r\n    name: 'Wrapped SXP',\r\n    mintAddress: 'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',\r\n    decimals: 6,\r\n    referrer: '97Vyotr284UM2Fyq9gbfQ3azMYtgf7cjnsf8pN1PFfY9'\r\n  },\r\n  HGET: {\r\n    symbol: 'HGET',\r\n    name: 'Wrapped HGET',\r\n    mintAddress: 'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',\r\n    decimals: 6,\r\n    referrer: 'AGY2wy1ANzLM2jJLSkVxPUYAY5iAYXYsLMQkoQsAhucj'\r\n  },\r\n  CREAM: {\r\n    symbol: 'CREAM',\r\n    name: 'Wrapped CREAM',\r\n    mintAddress: '5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',\r\n    decimals: 6,\r\n    referrer: '7WPzEiozJ69MQe8bfbss1t2unR6bHR4S7FimiUVRgu7P'\r\n  },\r\n  UBXT: {\r\n    symbol: 'UBXT',\r\n    name: 'Wrapped UBXT',\r\n    mintAddress: '873KLxCbz7s9Kc4ZzgYRtNmhfkQrhfyWGZJBmyCbC3ei',\r\n    decimals: 6,\r\n    referrer: '9aocFzNkSVj9TCS6cJk2uYyuzEpXPWT7xoBBF9JcZ879'\r\n  },\r\n  HNT: {\r\n    symbol: 'HNT',\r\n    name: 'Wrapped HNT',\r\n    mintAddress: 'HqB7uswoVg4suaQiDP3wjxob1G5WdZ144zhdStwMCq7e',\r\n    decimals: 6,\r\n    referrer: 'B61oHrGCFh8P75Z2cRDiw2nbEwbMyhVfZhMWiwxU2qCV'\r\n  },\r\n  FRONT: {\r\n    symbol: 'FRONT',\r\n    name: 'Wrapped FRONT',\r\n    mintAddress: '9S4t2NEAiJVMvPdRYKVrfJpBafPBLtvbvyS3DecojQHw',\r\n    decimals: 6,\r\n    referrer: 'FnasnCc7c43hd2nanSmRjh9Sf9Cgz6aEvNj6wpDznS5h'\r\n  },\r\n  AKRO: {\r\n    symbol: 'AKRO',\r\n    name: 'Wrapped AKRO',\r\n    mintAddress: '6WNVCuxCGJzNjmMZoKyhZJwvJ5tYpsLyAtagzYASqBoF',\r\n    decimals: 6,\r\n    referrer: 'FihBmWJbiLSEvq4QZpPPdjokdMgxqq6pESZ7oMkE1qJH'\r\n  },\r\n  HXRO: {\r\n    symbol: 'HXRO',\r\n    name: 'Wrapped HXRO',\r\n    mintAddress: 'DJafV9qemGp7mLMEn5wrfqaFwxsbLgUsGVS16zKRk9kc',\r\n    decimals: 6,\r\n    referrer: '4NgrGZDRCzyqiwYvKPEePTKfQXtWzKmSDBoZJjRw6wNC'\r\n  },\r\n  UNI: {\r\n    symbol: 'UNI',\r\n    name: 'Wrapped UNI',\r\n    mintAddress: 'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',\r\n    decimals: 6,\r\n    referrer: '4ntxDv95ajBbXfZyGy3UhcQDx8xmH1yJ6eKvuNNH466x'\r\n  },\r\n  SRM: {\r\n    symbol: 'SRM',\r\n    name: 'Serum',\r\n    mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\r\n    decimals: 6,\r\n    referrer: 'HYxa4Ea1dz7ya17Cx18rEGUA1WbCvKjXjFKrnu8CwugH'\r\n  },\r\n  FTT: {\r\n    symbol: 'FTT',\r\n    name: 'Wrapped FTT',\r\n    mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\r\n    decimals: 6,\r\n    referrer: 'CafpgSh8KGL2GPTjdXfctD3vXngNZDJ3Q92FTfV71Hmt'\r\n  },\r\n  MSRM: {\r\n    symbol: 'MSRM',\r\n    name: 'MegaSerum',\r\n    mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\r\n    decimals: 0,\r\n    referrer: 'Ge5q9x8gDUNYqqLA1MdnCzWNJGsbj3M15Yxse2cDbw9z'\r\n  },\r\n  TOMO: {\r\n    symbol: 'TOMO',\r\n    name: 'Wrapped TOMO',\r\n    mintAddress: 'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',\r\n    decimals: 6,\r\n    referrer: '9fexfN3eZomF5gfenG5L9ydbKRQkPhq6x74rb5iLrvXP'\r\n  },\r\n  KARMA: {\r\n    symbol: 'KARMA',\r\n    name: 'Wrapped KARMA',\r\n    mintAddress: 'EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX',\r\n    decimals: 4\r\n  },\r\n  LUA: {\r\n    symbol: 'LUA',\r\n    name: 'Wrapped LUA',\r\n    mintAddress: 'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',\r\n    decimals: 6,\r\n    referrer: 'HuZwNApjVFuFSDgrwZA8GP2JD7WMby4qt6rkWDnaMo7j'\r\n  },\r\n  MATH: {\r\n    symbol: 'MATH',\r\n    name: 'Wrapped MATH',\r\n    mintAddress: 'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',\r\n    decimals: 6,\r\n    referrer: 'C9K1M8sJX8WMdsnFT7DuzdiHHunEj79EsLuz4DixQYGm'\r\n  },\r\n  KEEP: {\r\n    symbol: 'KEEP',\r\n    name: 'Wrapped KEEP',\r\n    mintAddress: 'GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht',\r\n    decimals: 6\r\n  },\r\n  SWAG: {\r\n    symbol: 'SWAG',\r\n    name: 'Wrapped SWAG',\r\n    mintAddress: '9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy',\r\n    decimals: 6\r\n  },\r\n  FIDA: {\r\n    symbol: 'FIDA',\r\n    name: 'Bonfida',\r\n    mintAddress: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\r\n    decimals: 6,\r\n    referrer: 'AeAsG75UmyPDB271c6NHonHxXAPXfkvhcf2xjfJhReS8'\r\n  },\r\n  KIN: {\r\n    symbol: 'KIN',\r\n    name: 'KIN',\r\n    mintAddress: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\r\n    decimals: 5,\r\n    referrer: 'AevFXmApVxN2yk1iemSxXc6Wy7Z1udUEfST11kuYKmr9'\r\n  },\r\n  MAPS: {\r\n    symbol: 'MAPS',\r\n    name: 'MAPS',\r\n    mintAddress: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\r\n    decimals: 6\r\n  },\r\n  OXY: {\r\n    symbol: 'OXY',\r\n    name: 'OXY',\r\n    mintAddress: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\r\n    decimals: 6\r\n  },\r\n  RAY: {\r\n    symbol: 'RAY',\r\n    name: 'Raydium',\r\n    mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\r\n    decimals: 6,\r\n    referrer: 'EzKxGKPF9wF5uKDzCMQnkHmqaBhHiS22372pCLvxfmtQ'\r\n  },\r\n  COPE: {\r\n    symbol: 'COPE',\r\n    name: 'COPE',\r\n    mintAddress: '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',\r\n    decimals: 0,\r\n    referrer: '8DTehuES4tfnd2SrqcjN52XofxWXGjiLZRgM12U9pB6f'\r\n  }\r\n}","import { BonfidaTrade } from './types';\r\n\r\nexport default class BonfidaApi {\r\n  static URL: string = 'https://serum-api.bonfida.com/';\r\n\r\n  static async get(path: string) {\r\n    try {\r\n      const response = await fetch(this.URL + path);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success ? responseJson.data : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static async getRecentTrades(\r\n    marketAddress: string,\r\n  ): Promise<BonfidaTrade[] | null> {\r\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\r\n  }\r\n}\r\n\r\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\r\n","import {\r\n  Balances,\r\n  CustomMarketInfo,\r\n  DeprecatedOpenOrdersBalances,\r\n  FullMarketInfo,\r\n  MarketContextValues,\r\n  MarketInfo,\r\n  OrderWithMarketAndMarketName,\r\n  SelectedTokenAccounts,\r\n  TokenAccount,\r\n  Trade,\r\n} from './types';\r\nimport {\r\n  MARKETS,\r\n  Market,\r\n  OpenOrders,\r\n  Orderbook,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n  decodeEventQueue,\r\n} from '@project-serum/serum';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  divideBnToNumber,\r\n  floorToDecimal,\r\n  getTokenMultiplierFromDecimals,\r\n  useLocalStorageState,\r\n} from './utils';\r\nimport {\r\n  getTokenAccountInfo,\r\n  parseTokenAccountData,\r\n  useMintInfos,\r\n} from './tokens';\r\nimport { refreshCache, useAsyncData } from './fetch-loop';\r\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\r\n\r\nimport BN from 'bn.js';\r\nimport BonfidaApi from './bonfidaConnector';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { notify } from './notifications';\r\nimport { sleep } from './utils';\r\nimport tuple from 'immutable-tuple';\r\nimport { useWallet } from './wallet';\r\n\r\n// Used in debugging, should be false in production\r\nconst _IGNORE_DEPRECATED = false;\r\n\r\nconst _MARKETS = [\r\n  {\r\n    name: 'RAY/WUSDT',\r\n    deprecated: false,\r\n    address: new PublicKey('C4z32zw9WKaGPhNuU54ohzrV4CE1Uau3cFx6T8RLjxYC'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/SRM',\r\n    deprecated: false,\r\n    address: new PublicKey('Cm4MmknScg7qbKqytb1mM92xgDxv3TNXos4tKbBqTDy7'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/SOL',\r\n    deprecated: false,\r\n    address: new PublicKey('C6tp2RVZnxBPFbnAsfTjis8BN9tycESAT4SgDQgbbrsA'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/ETH',\r\n    deprecated: false,\r\n    address: new PublicKey('6jx6aoNFbmorwyncVP5V5ESKfuFc9oUYebob1iF6tgN4'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'RAY/USDT-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('HZyhLoyAnfQ72irTdqPdWo2oFL9zzXaBmAqN72iF3sdX'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'RAY/USDC-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('Bgz8EEMBjejAGSn6FdtKJkSGtvg4cuJUuRwaCBp28S3U'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'RAY/SRM-V2',\r\n    deprecated: true,\r\n    address: new PublicKey('HSGuveQDXtvYR432xjpKPgHfzWQxnb3T8FNuAAvaBbsU'),\r\n    programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'),\r\n  },\r\n  {\r\n    name: 'OXY/WUSDT',\r\n    deprecated: true,\r\n    address: new PublicKey('HdBhZrnrxpje39ggXnTb6WuTWVvj5YKcSHwYGQCRsVj'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'OXY/USDC',\r\n    deprecated: true,\r\n    address: new PublicKey('GZ3WBFsqntmERPwumFEYgrX2B7J7G11MzNZAy7Hje27X'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'FIDA/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('9wH4Krv8Vim3op3JAu5NGZQdGxU8HLGAHZh3K77CemxC'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'OXY/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('HcVjkXmvA1815Es3pSiibsRaFw8r9Gy7BhyzZX83Zhjx'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'MAPS/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('7Q4hee42y8ZGguqKmwLhpFNqVTjeVNNBqhx8nt32VF85'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'KIN/RAY',\r\n    deprecated: false,\r\n    address: new PublicKey('Fcxy8qYgs8MZqiLx2pijjay6LHsSUqXW47pwMGysa3i9'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  {\r\n    name: 'COPE/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('7MpMwArporUHEGW7quUpkPZp5L5cHPs9eKUfKCdaPHq2'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  },\r\n  ...MARKETS,\r\n];\r\n\r\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\r\n  ? _MARKETS.map((m) => ({ ...m, deprecated: false }))\r\n  : _MARKETS;\r\n\r\nexport function useMarketsList() {\r\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\r\n}\r\n\r\nexport function useAllMarkets() {\r\n  const connection = useConnection();\r\n  const { customMarkets } = useCustomMarkets();\r\n\r\n  const getAllMarkets = async () => {\r\n    const markets: Array<{\r\n      market: Market;\r\n      marketName: string;\r\n      programId: PublicKey;\r\n    } | null> = await Promise.all(\r\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\r\n        try {\r\n          const market = await Market.load(\r\n            connection,\r\n            marketInfo.address,\r\n            {},\r\n            marketInfo.programId,\r\n          );\r\n          return {\r\n            market,\r\n            marketName: marketInfo.name,\r\n            programId: marketInfo.programId,\r\n          };\r\n        } catch (e) {\r\n          notify({\r\n            message: 'Error loading all market',\r\n            description: e.message,\r\n            type: 'error',\r\n          });\r\n          return null;\r\n        }\r\n      }),\r\n    );\r\n    return markets.filter(\r\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\r\n        !!m,\r\n    );\r\n  };\r\n  return useAsyncData(\r\n    getAllMarkets,\r\n    tuple('getAllMarkets', customMarkets.length, connection),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useUnmigratedOpenOrdersAccounts() {\r\n  const connection = useConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\r\n    if (!wallet || !connection || !wallet.publicKey) {\r\n      return [];\r\n    }\r\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\r\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\r\n    const deprecatedProgramIds = Array.from(\r\n      new Set(\r\n        USE_MARKETS.filter(\r\n          ({ deprecated }) => deprecated,\r\n        ).map(({ programId }) => programId.toBase58()),\r\n      ),\r\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\r\n    let programId: PublicKey;\r\n    for (programId of deprecatedProgramIds) {\r\n      try {\r\n        const openOrdersAccounts = await OpenOrders.findForOwner(\r\n          connection,\r\n          wallet.publicKey,\r\n          programId,\r\n        );\r\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\r\n          openOrdersAccounts\r\n            .filter(\r\n              (openOrders) =>\r\n                openOrders.baseTokenTotal.toNumber() ||\r\n                openOrders.quoteTokenTotal.toNumber(),\r\n            )\r\n            .filter((openOrders) =>\r\n              USE_MARKETS.some(\r\n                (market) =>\r\n                  market.deprecated && market.address.equals(openOrders.market),\r\n              ),\r\n            ),\r\n        );\r\n      } catch (e) {\r\n        console.log(\r\n          'Error loading deprecated markets',\r\n          programId?.toBase58(),\r\n          e.message,\r\n        );\r\n      }\r\n    }\r\n    // Maybe sort\r\n    return deprecatedOpenOrdersAccounts;\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getUnmigratedOpenOrdersAccounts',\r\n    connection,\r\n    wallet?.publicKey?.toBase58(),\r\n  );\r\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n\r\n  return {\r\n    accounts,\r\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\r\n  };\r\n}\r\n\r\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\r\n  null,\r\n);\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\n// For things that don't really change\r\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\r\n\r\n// For things that change frequently\r\nconst _FAST_REFRESH_INTERVAL = 1000;\r\n\r\nexport const DEFAULT_MARKET = USE_MARKETS.find(\r\n  ({ name, deprecated }) => name === 'RAY/USDT' && !deprecated,\r\n);\r\n\r\nexport function getMarketDetails(\r\n  market: Market | undefined | null,\r\n  customMarkets: CustomMarketInfo[],\r\n): FullMarketInfo {\r\n  if (!market) {\r\n    return {};\r\n  }\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo = marketInfos.find((otherMarket) =>\r\n    otherMarket.address.equals(market.address),\r\n  );\r\n\r\n  // add new token here\r\n  // TOKEN_MINTS.push({\r\n  //   address: new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),\r\n  //   name: 'RAY',\r\n  // });\r\n  TOKEN_MINTS.push({\r\n    address: new PublicKey('3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE'),\r\n    name: 'COPE',\r\n  });\r\n\r\n  const baseCurrency =\r\n    (market?.baseMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\r\n    'UNKNOWN';\r\n  const quoteCurrency =\r\n    (market?.quoteMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\r\n    'UNKNOWN';\r\n  return {\r\n    ...marketInfo,\r\n    marketName: marketInfo?.name,\r\n    baseCurrency,\r\n    quoteCurrency,\r\n    marketInfo,\r\n  };\r\n}\r\n\r\nexport function useCustomMarkets() {\r\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\r\n    CustomMarketInfo[]\r\n  >('customMarkets', []);\r\n  return { customMarkets, setCustomMarkets };\r\n}\r\n\r\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\r\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\r\n\r\n  const address = marketAddress && new PublicKey(marketAddress);\r\n  const connection = useConnection();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo =\r\n    address && marketInfos.find((market) => market.address.equals(address));\r\n\r\n  const [market, setMarket] = useState<Market | null>();\r\n\r\n  const [marketName, setMarketName] = useState('RAY/USDT');\r\n\r\n  // Replace existing market with a non-deprecated one on first load\r\n  useEffect(() => {\r\n    if (marketInfo) {\r\n      if (marketInfo.deprecated) {\r\n        console.log('Switching markets from deprecated', marketInfo);\r\n        if (DEFAULT_MARKET) {\r\n          // setMarketAddress(DEFAULT_MARKET.address.toBase58());\r\n          setMarketAddress('C4z32zw9WKaGPhNuU54ohzrV4CE1Uau3cFx6T8RLjxYC');\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      market &&\r\n      marketInfo &&\r\n      // @ts-ignore\r\n      market._decoded.ownAddress?.equals(marketInfo?.address)\r\n    ) {\r\n      return;\r\n    }\r\n    setMarket(null);\r\n\r\n    if (!marketInfo || !marketInfo.address) {\r\n      notify({\r\n        message: 'Error loading market',\r\n        description: 'Please select a market from the dropdown',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else {\r\n      setMarketName(marketInfo.name);\r\n    }\r\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\r\n      .then(setMarket)\r\n      .catch((e) =>\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        }),\r\n      );\r\n    // eslint-disable-next-line\r\n  }, [connection, marketInfo]);\r\n\r\n  return (\r\n    <MarketContext.Provider\r\n      value={{\r\n        market,\r\n        ...getMarketDetails(market, customMarkets),\r\n        setMarketAddress,\r\n        customMarkets,\r\n        setCustomMarkets,\r\n        marketName,\r\n      }}\r\n    >\r\n      {children}\r\n    </MarketContext.Provider>\r\n  );\r\n}\r\n\r\nexport function getTradePageUrl(marketAddress?: string) {\r\n  if (!marketAddress) {\r\n    const saved = localStorage.getItem('marketAddress');\r\n    if (saved) {\r\n      marketAddress = JSON.parse(saved);\r\n    }\r\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\r\n  }\r\n  return `/market/${marketAddress}`;\r\n}\r\n\r\nexport function useSelectedTokenAccounts(): [\r\n  SelectedTokenAccounts,\r\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\r\n] {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\r\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\r\n}\r\n\r\nexport function useMarket() {\r\n  const context = useContext(MarketContext);\r\n  if (!context) {\r\n    throw new Error('Missing market context');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useMarkPrice() {\r\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\r\n\r\n  const [orderbook] = useOrderbook();\r\n  const trades = useTrades();\r\n\r\n  useEffect(() => {\r\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\r\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\r\n    let last = trades && trades.length > 0 && trades[0].price;\r\n\r\n    let markPrice =\r\n      bb && ba\r\n        ? last\r\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\r\n          : (bb + ba) / 2\r\n        : null;\r\n\r\n    setMarkPrice(markPrice);\r\n  }, [orderbook, trades]);\r\n\r\n  return markPrice;\r\n}\r\n\r\nexport function _useUnfilteredTrades(limit = 10000) {\r\n  const { market } = useMarket();\r\n  const connection = useConnection();\r\n  async function getUnfilteredTrades(): Promise<any[] | null> {\r\n    if (!market || !connection) {\r\n      return null;\r\n    }\r\n    return await market.loadFills(connection, limit);\r\n  }\r\n  const [trades] = useAsyncData(\r\n    getUnfilteredTrades,\r\n    tuple('getUnfilteredTrades', market, connection),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n  return trades;\r\n  // NOTE: For now, websocket is too expensive since the event queue is large\r\n  // and updates very frequently\r\n\r\n  // let data = useAccountData(market && market._decoded.eventQueue);\r\n  // if (!data) {\r\n  //   return null;\r\n  // }\r\n  // const events = decodeEventQueue(data, limit);\r\n  // return events\r\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\r\n  //   .map(market.parseFillEvent.bind(market));\r\n}\r\n\r\nexport function useBonfidaTrades() {\r\n  const { market } = useMarket();\r\n  const marketAddress = market?.address.toBase58();\r\n\r\n  async function getBonfidaTrades() {\r\n    if (!marketAddress) {\r\n      return null;\r\n    }\r\n    return await BonfidaApi.getRecentTrades(marketAddress);\r\n  }\r\n\r\n  return useAsyncData(\r\n    getBonfidaTrades,\r\n    tuple('getBonfidaTrades', marketAddress),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n    false,\r\n  );\r\n}\r\n\r\nexport function useOrderbookAccounts() {\r\n  const { market } = useMarket();\r\n  // @ts-ignore\r\n  let bidData = useAccountData(market && market._decoded.bids);\r\n  // @ts-ignore\r\n  let askData = useAccountData(market && market._decoded.asks);\r\n  return {\r\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\r\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\r\n  };\r\n}\r\n\r\nexport function useOrderbook(\r\n  depth = 20,\r\n): [{ bids: number[][]; asks: number[][] }, boolean] {\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  const { market } = useMarket();\r\n  const bids =\r\n    !bidOrderbook || !market\r\n      ? []\r\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  const asks =\r\n    !askOrderbook || !market\r\n      ? []\r\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  return [{ bids, asks }, !!bids || !!asks];\r\n}\r\n\r\n// Want the balances table to be fast-updating, dont want open orders to flicker\r\n// TODO: Update to use websocket\r\nexport function useOpenOrdersAccounts(fast = false) {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getOpenOrdersAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n  }\r\n  return useAsyncData(\r\n    getOpenOrdersAccounts,\r\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\r\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useSelectedOpenOrdersAccount(fast = false) {\r\n  const [accounts] = useOpenOrdersAccounts(fast);\r\n  if (!accounts) {\r\n    return null;\r\n  }\r\n  return accounts[0];\r\n}\r\n\r\nexport function useTokenAccounts(): [\r\n  TokenAccount[] | null | undefined,\r\n  boolean,\r\n] {\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getTokenAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    return await getTokenAccountInfo(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getTokenAccounts,\r\n    tuple('getTokenAccounts', wallet, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function getSelectedTokenAccountForMint(\r\n  accounts: TokenAccount[] | undefined | null,\r\n  mint: PublicKey | undefined,\r\n  selectedPubKey?: string | PublicKey | null,\r\n) {\r\n  if (!accounts || !mint) {\r\n    return null;\r\n  }\r\n  const filtered = accounts.filter(\r\n    ({ effectiveMint, pubkey }) =>\r\n      mint.equals(effectiveMint) &&\r\n      (!selectedPubKey ||\r\n        (typeof selectedPubKey === 'string'\r\n          ? selectedPubKey\r\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\r\n  );\r\n  return filtered && filtered[0];\r\n}\r\n\r\nexport function useSelectedQuoteCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.quoteMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\nexport function useSelectedBaseCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.baseMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedQuoteCurrencyBalances() {\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\r\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.quoteSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedBaseCurrencyBalances() {\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\r\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.baseSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\nexport function useOpenOrders() {\r\n  const { market, marketName } = useMarket();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\r\n    return null;\r\n  }\r\n  return market\r\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\r\n    .map((order) => ({ ...order, marketName, market }));\r\n}\r\n\r\nexport function useTrades(limit = 100) {\r\n  const trades = _useUnfilteredTrades(limit);\r\n  if (!trades) {\r\n    return null;\r\n  }\r\n  // Until partial fills are each given their own fill, use maker fills\r\n  return trades\r\n    .filter(({ eventFlags }) => eventFlags.maker)\r\n    .map((trade) => ({\r\n      ...trade,\r\n      side: trade.side === 'buy' ? 'sell' : 'buy',\r\n    }));\r\n}\r\n\r\nexport function useLocallyStoredFeeDiscountKey(): {\r\n  storedFeeDiscountKey: PublicKey | undefined;\r\n  setStoredFeeDiscountKey: (key: string) => void;\r\n} {\r\n  const [\r\n    storedFeeDiscountKey,\r\n    setStoredFeeDiscountKey,\r\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\r\n  return {\r\n    storedFeeDiscountKey: storedFeeDiscountKey\r\n      ? new PublicKey(storedFeeDiscountKey)\r\n      : undefined,\r\n    setStoredFeeDiscountKey,\r\n  };\r\n}\r\n\r\nexport function useFeeDiscountKeys(): [\r\n  (\r\n    | {\r\n        pubkey: PublicKey;\r\n        feeTier: number;\r\n        balance: number;\r\n        mint: PublicKey;\r\n      }[]\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n  let getFeeDiscountKeys = async () => {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    const feeDiscountKey = await market.findFeeDiscountKeys(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n    if (feeDiscountKey) {\r\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\r\n    }\r\n    return feeDiscountKey;\r\n  };\r\n  return useAsyncData(\r\n    getFeeDiscountKeys,\r\n    tuple('getFeeDiscountKeys', wallet, market, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useFills(limit = 100) {\r\n  const { marketName } = useMarket();\r\n  const fills = _useUnfilteredTrades(limit);\r\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\r\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\r\n    return null;\r\n  }\r\n  if (!fills) {\r\n    return null;\r\n  }\r\n  return fills\r\n    .filter((fill) =>\r\n      openOrdersAccounts.some((openOrdersAccount) =>\r\n        fill.openOrders.equals(openOrdersAccount.publicKey),\r\n      ),\r\n    )\r\n    .map((fill) => ({ ...fill, marketName }));\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useFillsForAllMarkets(limit = 100) {\r\n  const { connected, wallet } = useWallet();\r\n\r\n  const connection = useConnection();\r\n  const allMarkets = useAllMarkets();\r\n\r\n  async function getFillsForAllMarkets() {\r\n    let fills: Trade[] = [];\r\n    if (!connected) {\r\n      return fills;\r\n    }\r\n\r\n    let marketData;\r\n    for (marketData of allMarkets) {\r\n      const { market, marketName } = marketData;\r\n      if (!market) {\r\n        return fills;\r\n      }\r\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\r\n        connection,\r\n        wallet.publicKey,\r\n      );\r\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\r\n      if (!openOrdersAccount) {\r\n        return fills;\r\n      }\r\n      const eventQueueData = await connection.getAccountInfo(\r\n        market && market._decoded.eventQueue,\r\n      );\r\n      let data = eventQueueData?.data;\r\n      if (!data) {\r\n        return fills;\r\n      }\r\n      const events = decodeEventQueue(data, limit);\r\n      const fillsForMarket: Trade[] = events\r\n        .filter(\r\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\r\n        )\r\n        .map(market.parseFillEvent.bind(market));\r\n      const ownFillsForMarket = fillsForMarket\r\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\r\n        .map((fill) => ({ ...fill, marketName }));\r\n      fills = fills.concat(ownFillsForMarket);\r\n    }\r\n\r\n    console.log(JSON.stringify(fills));\r\n    return fills;\r\n  }\r\n\r\n  return useAsyncData(\r\n    getFillsForAllMarkets,\r\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\r\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersAccounts() {\r\n  const { wallet, connected } = useWallet();\r\n  const connection = useConnection();\r\n  const marketInfos = useMarketInfos();\r\n  const programIds = [\r\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\r\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\r\n\r\n  const getAllOpenOrdersAccounts = async () => {\r\n    if (!connected) {\r\n      return [];\r\n    }\r\n    return (\r\n      await Promise.all(\r\n        programIds.map((programId) =>\r\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\r\n        ),\r\n      )\r\n    ).flat();\r\n  };\r\n  return useAsyncData(\r\n    getAllOpenOrdersAccounts,\r\n    tuple(\r\n      'getAllOpenOrdersAccounts',\r\n      connection,\r\n      connected,\r\n      wallet?.publicKey?.toBase58(),\r\n      marketInfos.length,\r\n      (programIds || []).length,\r\n    ),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersBalances() {\r\n  const [\r\n    openOrdersAccounts,\r\n    loadedOpenOrdersAccounts,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n  const [allMarkets] = useAllMarkets();\r\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\r\n    return {};\r\n  }\r\n\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\r\n  );\r\n  const openOrdersBalances: {\r\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketInfo = marketsByAddress[account.market.toBase58()];\r\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\r\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\r\n    if (!(baseMint in openOrdersBalances)) {\r\n      openOrdersBalances[baseMint] = [];\r\n    }\r\n    if (!(quoteMint in openOrdersBalances)) {\r\n      openOrdersBalances[quoteMint] = [];\r\n    }\r\n\r\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\r\n    const baseFree = divideBnToNumber(\r\n      new BN(account.baseTokenFree),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const baseTotal = divideBnToNumber(\r\n      new BN(account.baseTokenTotal),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\r\n    const quoteFree = divideBnToNumber(\r\n      new BN(account.quoteTokenFree),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n    const quoteTotal = divideBnToNumber(\r\n      new BN(account.quoteTokenTotal),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n\r\n    openOrdersBalances[baseMint].push({\r\n      market: account.market,\r\n      free: baseFree,\r\n      total: baseTotal,\r\n    });\r\n    openOrdersBalances[quoteMint].push({\r\n      market: account.market,\r\n      free: quoteFree,\r\n      total: quoteTotal,\r\n    });\r\n  }\r\n  return openOrdersBalances;\r\n}\r\n\r\nexport const useAllOpenOrders = (): {\r\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} => {\r\n  const connection = useConnection();\r\n  const { connected, wallet } = useWallet();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [refresh, setRefresh] = useState(0);\r\n  const [openOrders, setOpenOrders] = useState<\r\n    { orders: Order[]; marketAddress: string }[] | null | undefined\r\n  >(null);\r\n  const [lastRefresh, setLastRefresh] = useState(0);\r\n\r\n  const refreshOpenOrders = () => {\r\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\r\n      setRefresh((prev) => prev + 1);\r\n    } else {\r\n      console.log('not refreshing');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      const getAllOpenOrders = async () => {\r\n        setLoaded(false);\r\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\r\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\r\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\r\n          try {\r\n            const market = await Market.load(\r\n              connection,\r\n              marketInfo.address,\r\n              undefined,\r\n              marketInfo.programId,\r\n            );\r\n            const orders = await market.loadOrdersForOwner(\r\n              connection,\r\n              wallet?.publicKey,\r\n              30000,\r\n            );\r\n            _openOrders.push({\r\n              orders: orders,\r\n              marketAddress: marketInfo.address.toBase58(),\r\n            });\r\n          } catch (e) {\r\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\r\n          }\r\n        };\r\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\r\n        setOpenOrders(_openOrders);\r\n        setLastRefresh(new Date().getTime());\r\n        setLoaded(true);\r\n      };\r\n      getAllOpenOrders();\r\n    }\r\n  }, [connected, wallet, refresh]);\r\n  return {\r\n    openOrders: openOrders,\r\n    loaded: loaded,\r\n    refreshOpenOrders: refreshOpenOrders,\r\n  };\r\n};\r\n\r\nexport function useBalances(): Balances[] {\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const openOrders = useSelectedOpenOrdersAccount(true);\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseExists =\r\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\r\n  const quoteExists =\r\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\r\n  if (\r\n    baseCurrency === 'UNKNOWN' ||\r\n    quoteCurrency === 'UNKNOWN' ||\r\n    !baseCurrency ||\r\n    !quoteCurrency\r\n  ) {\r\n    return [];\r\n  }\r\n  return [\r\n    {\r\n      market,\r\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\r\n      coin: baseCurrency,\r\n      wallet: baseCurrencyBalances,\r\n      orders:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(\r\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n            )\r\n          : null,\r\n      openOrders,\r\n      unsettled:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\r\n          : null,\r\n    },\r\n    {\r\n      market,\r\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\r\n      coin: quoteCurrency,\r\n      wallet: quoteCurrencyBalances,\r\n      openOrders,\r\n      orders:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(\r\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n            )\r\n          : null,\r\n      unsettled:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\r\n          : null,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useWalletBalancesForAllMarkets(): {\r\n  mint: string;\r\n  balance: number;\r\n}[] {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected } = useWallet();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n\r\n  if (!connected || !mintInfosConnected) {\r\n    return [];\r\n  }\r\n\r\n  let balances: { [mint: string]: number } = {};\r\n  for (let account of tokenAccounts || []) {\r\n    if (!account.account) {\r\n      continue;\r\n    }\r\n    let parsedAccount;\r\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\r\n      parsedAccount = {\r\n        mint: WRAPPED_SOL_MINT,\r\n        owner: account.pubkey,\r\n        amount: account.account.lamports,\r\n      };\r\n    } else {\r\n      parsedAccount = parseTokenAccountData(account.account.data);\r\n    }\r\n    if (!(parsedAccount.mint.toBase58() in balances)) {\r\n      balances[parsedAccount.mint.toBase58()] = 0;\r\n    }\r\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\r\n    const additionalAmount = divideBnToNumber(\r\n      new BN(parsedAccount.amount),\r\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\r\n    );\r\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\r\n  }\r\n  return Object.entries(balances).map(([mint, balance]) => {\r\n    return { mint, balance };\r\n  });\r\n}\r\n\r\nexport function useUnmigratedDeprecatedMarkets() {\r\n  const connection = useConnection();\r\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\r\n  const marketsList =\r\n    accounts &&\r\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\r\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\r\n\r\n  const useUnmigratedDeprecatedMarketsInner = async () => {\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    const getMarket = async (address) => {\r\n      const marketInfo = USE_MARKETS.find((market) =>\r\n        market.address.equals(address),\r\n      );\r\n      if (!marketInfo) {\r\n        console.log('Failed loading market');\r\n        notify({\r\n          message: 'Error loading market',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n      try {\r\n        console.log('Loading market', marketInfo.name);\r\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\r\n        return await Market.load(\r\n          connection,\r\n          marketInfo.address,\r\n          {},\r\n          marketInfo.programId,\r\n        );\r\n      } catch (e) {\r\n        console.log('Failed loading market', marketInfo.name, e);\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\r\n  };\r\n  const [markets] = useAsyncData(\r\n    useUnmigratedDeprecatedMarketsInner,\r\n    tuple(\r\n      'useUnmigratedDeprecatedMarketsInner',\r\n      connection,\r\n      deps && deps.toString(),\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n  return markets.map((market) => ({\r\n    market,\r\n    openOrdersList: accounts?.filter(\r\n      (openOrders) => market && openOrders.market.equals(market.address),\r\n    ),\r\n  }));\r\n}\r\n\r\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useCustomMarkets();\r\n  const connection = useConnection();\r\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\r\n  const marketsList =\r\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\r\n\r\n  // This isn't quite right: open order balances could change\r\n  const deps =\r\n    marketsList &&\r\n    marketsList\r\n      .filter((market): market is Market => !!market)\r\n      .map((market) => market.address.toBase58());\r\n\r\n  async function getOpenOrdersForDeprecatedMarkets() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\r\n    const getOrders = async (market: Market | null) => {\r\n      if (!market) {\r\n        return null;\r\n      }\r\n      const { marketName } = getMarketDetails(market, customMarkets);\r\n      try {\r\n        console.log('Fetching open orders for', marketName);\r\n        // Can do better than this, we have the open orders accounts already\r\n        return (\r\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\r\n        ).map((order) => ({ marketName, market, ...order }));\r\n      } catch (e) {\r\n        console.log('Failed loading open orders', market.address.toBase58(), e);\r\n        notify({\r\n          message: `Error loading open orders for deprecated ${marketName}`,\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getOrders)))\r\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\r\n      .flat();\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getOpenOrdersForDeprecatedMarkets',\r\n    connected,\r\n    connection,\r\n    wallet,\r\n    deps && deps.toString(),\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(\r\n    getOpenOrdersForDeprecatedMarkets,\r\n    cacheKey,\r\n    {\r\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n    },\r\n  );\r\n  console.log('openOrders', openOrders);\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalancesForDeprecatedMarkets() {\r\n  const markets = useUnmigratedDeprecatedMarkets();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n\r\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\r\n  markets.forEach(({ market, openOrdersList }) => {\r\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\r\n      market,\r\n      customMarkets,\r\n    );\r\n    if (!baseCurrency || !quoteCurrency || !market) {\r\n      return;\r\n    }\r\n    (openOrdersList || []).forEach((openOrders) => {\r\n      const inOrdersBase =\r\n        openOrders?.baseTokenTotal &&\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n        );\r\n      const inOrdersQuote =\r\n        openOrders?.quoteTokenTotal &&\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n        );\r\n      const unsettledBase =\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\r\n      const unsettledQuote =\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\r\n\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: baseCurrency,\r\n        key: `${marketName}${baseCurrency}`,\r\n        orders: inOrdersBase,\r\n        unsettled: unsettledBase,\r\n        openOrders,\r\n      });\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: quoteCurrency,\r\n        key: `${marketName}${quoteCurrency}`,\r\n        orders: inOrdersQuote,\r\n        unsettled: unsettledQuote,\r\n        openOrders,\r\n      });\r\n    });\r\n  });\r\n  return openOrderAccountBalances;\r\n}\r\n\r\nexport function getMarketInfos(\r\n  customMarkets: CustomMarketInfo[],\r\n): MarketInfo[] {\r\n  const customMarketsInfo = customMarkets.map((m) => ({\r\n    ...m,\r\n    address: new PublicKey(m.address),\r\n    programId: new PublicKey(m.programId),\r\n    deprecated: false,\r\n  }));\r\n\r\n  return [...customMarketsInfo, ...USE_MARKETS];\r\n}\r\n\r\nexport function useMarketInfos() {\r\n  const { customMarkets } = useCustomMarkets();\r\n  return getMarketInfos(customMarkets);\r\n}\r\n\r\n/**\r\n * If selling, choose min tick size. If buying choose a price\r\n * s.t. given the state of the orderbook, the order will spend\r\n * `cost` cost currency.\r\n *\r\n * @param orderbook serum Orderbook object\r\n * @param cost quantity to spend. Base currency if selling,\r\n *  quote currency if buying.\r\n * @param tickSizeDecimals size of price increment of the market\r\n */\r\nexport function getMarketOrderPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  if (orderbook.isBids) {\r\n    return orderbook.market.tickSize;\r\n  }\r\n  let spentCost = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  const asks = orderbook.getL2(1000);\r\n  for ([price, sizeAtLevel] of asks) {\r\n    costAtLevel = price * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      break;\r\n    }\r\n    spentCost += costAtLevel;\r\n  }\r\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = sendPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function getExpectedFillPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  let spentCost = 0;\r\n  let avgPrice = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\r\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      avgPrice += (cost - spentCost) * price;\r\n      spentCost = cost;\r\n      break;\r\n    }\r\n    avgPrice += costAtLevel * price;\r\n    spentCost += costAtLevel;\r\n  }\r\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = totalAvgPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Input, Modal, Row, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function CustomMarketDialog({\r\n  visible,\r\n  onAddCustomMarket,\r\n  onClose,\r\n}) {\r\n  const connection = useConnection();\r\n\r\n  const [marketId, setMarketId] = useState('');\r\n\r\n  const [marketLabel, setMarketLabel] = useState('');\r\n  const [baseLabel, setBaseLabel] = useState('');\r\n  const [quoteLabel, setQuoteLabel] = useState('');\r\n\r\n  const [market, setMarket] = useState(null);\r\n  const [loadingMarket, setLoadingMarket] = useState(false);\r\n\r\n  const wellFormedMarketId = isValidPublicKey(marketId);\r\n\r\n  const [marketAccountInfo] = useAccountInfo(\r\n    wellFormedMarketId ? new PublicKey(marketId) : null,\r\n  );\r\n  const programId = marketAccountInfo\r\n    ? marketAccountInfo.owner.toBase58()\r\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\r\n\r\n  useEffect(() => {\r\n    if (!wellFormedMarketId || !programId) {\r\n      resetLabels();\r\n      return;\r\n    }\r\n    setLoadingMarket(true);\r\n    Market.load(\r\n      connection,\r\n      new PublicKey(marketId),\r\n      {},\r\n      new PublicKey(programId),\r\n    )\r\n      .then((market) => {\r\n        setMarket(market);\r\n      })\r\n      .catch(() => {\r\n        resetLabels();\r\n        setMarket(null);\r\n      })\r\n      .finally(() => setLoadingMarket(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [connection, marketId, programId]);\r\n\r\n  const resetLabels = () => {\r\n    setMarketLabel(null);\r\n    setBaseLabel(null);\r\n    setQuoteLabel(null);\r\n  };\r\n\r\n  const knownMarket = MARKETS.find(\r\n    (m) =>\r\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\r\n  );\r\n  const knownProgram = MARKETS.find(\r\n    (m) => m.programId.toBase58() === programId,\r\n  );\r\n  const knownBaseCurrency =\r\n    market?.baseMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n      ?.name;\r\n\r\n  const knownQuoteCurrency =\r\n    market?.quoteMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n      ?.name;\r\n\r\n  const canSubmit =\r\n    !loadingMarket &&\r\n    !!market &&\r\n    market.publicKey.toBase58() === marketId &&\r\n    marketId &&\r\n    programId &&\r\n    marketLabel &&\r\n    (knownBaseCurrency || baseLabel) &&\r\n    (knownQuoteCurrency || quoteLabel) &&\r\n    wellFormedMarketId;\r\n\r\n  const onSubmit = () => {\r\n    if (!canSubmit) {\r\n      notify({\r\n        message: 'Please fill in all fields with valid values',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      address: marketId,\r\n      programId,\r\n      name: marketLabel,\r\n    };\r\n    if (!knownBaseCurrency) {\r\n      params.baseLabel = baseLabel;\r\n    }\r\n    if (!knownQuoteCurrency) {\r\n      params.quoteLabel = quoteLabel;\r\n    }\r\n    onAddCustomMarket(params);\r\n    onDoClose();\r\n  };\r\n\r\n  const onDoClose = () => {\r\n    resetLabels();\r\n    setMarket(null);\r\n    setMarketId(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom market'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit }}\r\n    >\r\n      <div>\r\n        {wellFormedMarketId ? (\r\n          <>\r\n            {!market && !loadingMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Not a valid market</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\r\n              </Row>\r\n            )}\r\n            {market && !knownProgram && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownProgram && knownProgram.deprecated && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {marketId && !wellFormedMarketId && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Invalid market ID</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n        <Row style={{ marginBottom: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Id\"\r\n              value={marketId}\r\n              onChange={(e) => setMarketId(e.target.value)}\r\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Label\"\r\n              disabled={!market}\r\n              value={marketLabel}\r\n              onChange={(e) => setMarketLabel(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Base label\"\r\n              disabled={!market || knownBaseCurrency}\r\n              value={knownBaseCurrency || baseLabel}\r\n              onChange={(e) => setBaseLabel(e.target.value)}\r\n            />\r\n            {market && !knownBaseCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Quote label\"\r\n              disabled={!market || knownQuoteCurrency}\r\n              value={knownQuoteCurrency || quoteLabel}\r\n              onChange={(e) => setQuoteLabel(e.target.value)}\r\n            />\r\n            {market && !knownQuoteCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  // margin: 5px;\r\n  // padding: 20px;\r\n`;\r\n\r\nexport default function FloatingElement({\r\n  style = undefined,\r\n  children,\r\n  stretchVertical = false,\r\n}) {\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConfigProvider, Table } from 'antd';\r\n\r\nexport default function DataTable({\r\n  dataSource,\r\n  columns,\r\n  emptyLabel = 'No data',\r\n  pagination = false,\r\n  loading = false,\r\n  pageSize = 10,\r\n}) {\r\n  const customizeRenderEmpty = () => (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {emptyLabel}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={pagination ? { pagination: true, pageSize } : false}\r\n        loading={loading}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import { Button, Col, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  useTokenAccounts,\r\n  getSelectedTokenAccountForMint,\r\n} from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { settleFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport default function BalancesTable({\r\n  balances,\r\n  showMarket,\r\n  hideWalletBalance,\r\n  onSettleSuccess,\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const connection = useSendConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function onSettleFunds(market, openOrders) {\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.baseMintAddress,\r\n        ),\r\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.quoteMintAddress,\r\n        ),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    onSettleSuccess && onSettleSuccess();\r\n  }\r\n  const [rowItem, setRowItem] = useState(4);\r\n  if (showMarket) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  if (hideWalletBalance) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  // setRowItem(Math.floor(24 / rowItem));\r\n  const columns = [\r\n    showMarket\r\n      ? {\r\n          title: 'Market',\r\n          dataIndex: 'marketName',\r\n          key: 'marketName',\r\n        }\r\n      : null,\r\n    {\r\n      title: 'Coin',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n    },\r\n    hideWalletBalance\r\n      ? null\r\n      : {\r\n          title: 'Wallet Balance',\r\n          dataIndex: 'wallet',\r\n          key: 'wallet',\r\n        },\r\n    {\r\n      title: 'Orders',\r\n      dataIndex: 'orders',\r\n      key: 'orders',\r\n    },\r\n    {\r\n      title: 'Unsettled',\r\n      dataIndex: 'unsettled',\r\n      key: 'unsettled',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: ({ market, openOrders, marketName }) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Button\r\n            ghost\r\n            style={{ marginRight: 12 }}\r\n            onClick={() => onSettleFunds(market, openOrders)}\r\n          >\r\n            Settle {marketName}\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ].filter((x) => x);\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          fontSize: 14,\r\n          color: 'rgba(241, 241, 242, 0.5)',\r\n          paddingBottom: 16,\r\n        }}\r\n      >\r\n        {showMarket ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n            Market\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Coin\r\n        </Col>\r\n        {hideWalletBalance ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n            Wallet Balance\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Orders\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Unsettled\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          action\r\n        </Col>\r\n      </Row>\r\n      <div style={{ height: 350, overflowX: 'hidden' }}>\r\n        {balances.map(\r\n          (\r\n            { marketName, coin, wallet, orders, unsettled, market, openOrders },\r\n            i,\r\n          ) => (\r\n            <Row\r\n              key={i}\r\n              style={{\r\n                fontSize: 14,\r\n                color: 'rgba(241, 241, 242, 1)',\r\n                paddingBottom: 16,\r\n              }}\r\n            >\r\n              {showMarket ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n                  {marketName}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {coin}\r\n              </Col>\r\n              {hideWalletBalance ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                  {wallet}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {orders}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {unsettled}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                <Button\r\n                  ghost\r\n                  style={{ marginRight: 12 }}\r\n                  onClick={() => onSettleFunds(market, openOrders)}\r\n                >\r\n                  Settle {marketName}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ),\r\n        )}\r\n      </div>\r\n    </>\r\n    // <DataTable\r\n    //   emptyLabel=\"No balances\"\r\n    //   dataSource={balances}\r\n    //   columns={columns}\r\n    //   pagination={false}\r\n    // />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, Col, Row, Tag } from 'antd';\r\nimport { cancelOrder } from '../../utils/send';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 1);\r\n  // border: 1px solid rgba(194, 0, 251, 0.1);\r\n  border: 1px solid #C200FB;\r\n  border-radius: 4px;\r\n  width: 65px;\r\n  height: 20px;\r\n  font-size: 10;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport default function OpenOrderTable({\r\n  openOrders,\r\n  onCancelSuccess,\r\n  pageSize,\r\n  loading,\r\n  marketFilter,\r\n}: {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const marketFilters = [\r\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\r\n  ].map((marketName) => {\r\n    return { text: marketName, value: marketName };\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n      filters: marketFilter ? marketFilters : undefined,\r\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n      sorter: (a, b) => {\r\n        if (a.side === b.side) {\r\n          return 0;\r\n        } else if (a.side === 'buy') {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      },\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n      sorter: (a, b) => b.size - a.size,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      sorter: (a, b) => b.price - a.price,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      key: 'orderId',\r\n      render: (order) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <CancelButton\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => cancel(order)}\r\n            loading={cancelId + '' === order?.orderId + ''}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const dataSource = (openOrders || []).map((order) => ({\r\n    ...order,\r\n    key: order.orderId,\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\r\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Price</Col>\r\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\r\n        </Row>\r\n        <div style={{ height: 350, overflowX: 'hidden' }}>\r\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\r\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\r\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\r\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\r\n              <Col span={4} style={{ textAlign: 'right' }}>\r\n                <CancelButton\r\n                  onClick={() => cancel(dataSource[i])}\r\n                  loading={cancelId + '' === orderId + ''}\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n        {/*<DataTable*/}\r\n        {/*  emptyLabel=\"No open orders\"*/}\r\n        {/*  dataSource={dataSource}*/}\r\n        {/*  columns={columns}*/}\r\n        {/*  pagination={true}*/}\r\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\r\n        {/*  loading={loading !== undefined && loading}*/}\r\n        {/*/>*/}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Button, Divider, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useGetOpenOrdersForDeprecatedMarkets,\r\n  useBalancesForDeprecatedMarkets,\r\n  useUnmigratedOpenOrdersAccounts,\r\n} from '../utils/markets';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\r\nimport BalancesTable from './UserInfoTable/BalancesTable';\r\nimport Link from './Link';\r\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\r\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\r\n  const balances = useBalancesForDeprecatedMarkets();\r\n  const {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders,\r\n  } = useGetOpenOrdersForDeprecatedMarkets();\r\n\r\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\r\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\r\n  const filteredBalances =\r\n    balances &&\r\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\r\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\r\n  return (\r\n    <FloatingElement>\r\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\r\n        Migrate to new USDC markets\r\n      </Title>\r\n      <Typography>\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\r\n          }\r\n        >\r\n          Native USDC\r\n        </Link>{' '}\r\n        has arrived on Solana! See{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\r\n          }\r\n        >\r\n          Circle's announcement\r\n        </Link>{' '}\r\n        for more information.\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Serum is transitioning from the previous{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\r\n          }\r\n        >\r\n          Wrapped USDC\r\n        </Link>\r\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\r\n        directly on{' '}\r\n        <Link external to={'https://sollet.io'}>\r\n          sollet.io\r\n        </Link>\r\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\r\n        <Link external to={'https://ftx.com'}>\r\n          FTX\r\n        </Link>\r\n        .\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\r\n        over to the new USDC markets, please cancel your orders and settle your\r\n        funds on old markets.\r\n      </Typography>\r\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\r\n        <Button onClick={() => refresh(true)}>\r\n          <SyncOutlined /> Refresh data\r\n        </Button>\r\n      </div>\r\n      {!balances ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <>\r\n          <Divider>\r\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\r\n          </Divider>\r\n          {needToCancelOrders ? (\r\n            loaded ? (\r\n              <OpenOrderTable\r\n                openOrders={openOrders}\r\n                onCancelSuccess={() => {\r\n                  setTimeout(() => {\r\n                    refresh();\r\n                    refreshOpenOrders();\r\n                  }, 1000); // Wait so that on-chain account state reflects the update\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin size=\"large\" />\r\n            )\r\n          ) : null}\r\n          <Divider>\r\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\r\n          </Divider>\r\n          {needToSettleFunds && (\r\n            <BalancesTable\r\n              balances={filteredBalances}\r\n              hideWalletBalance\r\n              showMarket\r\n              onSettleSuccess={() => {\r\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\r\n              }}\r\n            />\r\n          )}\r\n          <Divider>Switch to upgraded markets</Divider>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              onClick={switchToLiveMarkets}\r\n              disabled={needToSettleFunds || needToCancelOrders}\r\n            >\r\n              Switch to new markets\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\n\r\nexport default function LinkAddress({\r\n  title,\r\n  address,\r\n}: {\r\n  title?: undefined | any;\r\n  address: string;\r\n}) {\r\n  return (\r\n    <div>\r\n      {title && <p style={{ color: 'white' }}>{title}</p>}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + address}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {address}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef<() => void>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current && savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\r\nimport { isEqual, getDecimalCount } from '../utils/utils';\r\nimport { useInterval } from '../utils/useInterval';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport usePrevious from '../utils/usePrevious';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst SizeTitle = styled(Row)`\r\n  padding: 16px 0 12px;\r\n  color: #434a59;\r\n`;\r\n\r\nconst MarkPriceTitle = styled(Row)`\r\n  padding: 15px 0 12px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  text-align: right;\r\n  float: right;\r\n  height: 100%;\r\n  ${(props) =>\r\n    props['data-width'] &&\r\n    css`\r\n      width: ${props['data-width']};\r\n    `}\r\n  ${(props) =>\r\n    props['data-bgcolor'] &&\r\n    css`\r\n      background-color: ${props['data-bgcolor']};\r\n    `}\r\n`;\r\n\r\nconst Price = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\r\n  const markPrice = useMarkPrice();\r\n  const [orderbook] = useOrderbook();\r\n  const { baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const currentOrderbookData = useRef(null);\r\n  const lastOrderbookData = useRef(null);\r\n\r\n  const [orderbookData, setOrderbookData] = useState(null);\r\n\r\n  useInterval(() => {\r\n    if (\r\n      !currentOrderbookData.current ||\r\n      JSON.stringify(currentOrderbookData.current) !==\r\n        JSON.stringify(lastOrderbookData.current)\r\n    ) {\r\n      let bids = orderbook?.bids || [];\r\n      let asks = orderbook?.asks || [];\r\n\r\n      let sum = (total, [, size], index) =>\r\n        index < depth ? total + size : total;\r\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\r\n\r\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\r\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\r\n\r\n      currentOrderbookData.current = {\r\n        bids: orderbook?.bids,\r\n        asks: orderbook?.asks,\r\n      };\r\n\r\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\r\n    }\r\n  }, 250);\r\n\r\n  useEffect(() => {\r\n    lastOrderbookData.current = {\r\n      bids: orderbook?.bids,\r\n      asks: orderbook?.asks,\r\n    };\r\n  }, [orderbook]);\r\n\r\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\r\n    let cumulative = orders\r\n      .slice(0, depth)\r\n      .reduce((cumulative, [price, size], i) => {\r\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\r\n        cumulative.push({\r\n          price,\r\n          size,\r\n          cumulativeSize,\r\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\r\n        });\r\n        return cumulative;\r\n      }, []);\r\n    if (backwards) {\r\n      cumulative = cumulative.reverse();\r\n    }\r\n    return cumulative;\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={{\r\n        ...(smallScreen\r\n          ? { flex: 1 }\r\n          : { height: '500px', overflow: 'hidden' }),\r\n        height: 540,\r\n      }}\r\n    >\r\n      <Title\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        Order book\r\n      </Title>\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      <div style={{ paddingBottom: 16 }}>\r\n        {orderbookData?.asks.map(({ price, size, sizePercent }) => (\r\n          <OrderbookRow\r\n            key={price + ''}\r\n            price={price}\r\n            size={size}\r\n            side={'sell'}\r\n            sizePercent={sizePercent}\r\n            onPriceClick={() => onPrice(price)}\r\n            onSizeClick={() => onSize(size)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <MarkPriceComponent markPrice={markPrice} />\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'buy'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OrderbookRow = React.memo(\r\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\r\n    const element = useRef();\r\n\r\n    const { market } = useMarket();\r\n\r\n    useEffect(() => {\r\n      // eslint-disable-next-line\r\n      !element.current?.classList.contains('flash') &&\r\n        element.current?.classList.add('flash');\r\n      const id = setTimeout(\r\n        () =>\r\n          element.current?.classList.contains('flash') &&\r\n          element.current?.classList.remove('flash'),\r\n        250,\r\n      );\r\n      return () => clearTimeout(id);\r\n    }, [price, size]);\r\n\r\n    let formattedSize =\r\n      market?.minOrderSize && !isNaN(size)\r\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\r\n        : size;\r\n\r\n    let formattedPrice =\r\n      market?.tickSize && !isNaN(price)\r\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\r\n        : price;\r\n\r\n    return (\r\n      <Row\r\n        ref={element}\r\n        style={{ marginBottom: 3, fontSize: 12 }}\r\n        onClick={onSizeClick}\r\n      >\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          {formattedSize}\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          <Line\r\n            data-width={sizePercent + '%'}\r\n            data-bgcolor={\r\n              side === 'buy'\r\n                ? 'rgba(65, 199, 122, 0.6)'\r\n                : 'rgba(242, 60, 105, 0.6)'\r\n            }\r\n          />\r\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  },\r\n  (prevProps, nextProps) =>\r\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\r\n);\r\n\r\nconst MarkPriceComponent = React.memo(\r\n  ({ markPrice }) => {\r\n    const { market } = useMarket();\r\n    const previousMarkPrice = usePrevious(markPrice);\r\n\r\n    let markPriceColor =\r\n      markPrice > previousMarkPrice\r\n        ? '#41C77A'\r\n        : markPrice < previousMarkPrice\r\n        ? '#F23B69'\r\n        : 'white';\r\n\r\n    let formattedMarkPrice =\r\n      markPrice &&\r\n      market?.tickSize &&\r\n      markPrice.toFixed(getDecimalCount(market.tickSize));\r\n\r\n    return (\r\n      <MarkPriceTitle\r\n        justify=\"center\"\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          fontSize: 16,\r\n        }}\r\n      >\r\n        <Col style={{ color: markPriceColor }}>\r\n          {markPrice > previousMarkPrice && (\r\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {markPrice < previousMarkPrice && (\r\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {formattedMarkPrice || '----'}\r\n        </Col>\r\n      </MarkPriceTitle>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\r\n);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  useSelectedBaseCurrencyAccount,\r\n  useMarket,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\n\r\nexport default function DepositDialog({ onClose, baseOrQuote }) {\r\n  const { market, baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const { providerName, providerUrl } = useWallet();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  let coinMint;\r\n  let account;\r\n  let depositCoin;\r\n  if (baseOrQuote === 'base') {\r\n    coinMint = market?.baseMintAddress;\r\n    account = baseCurrencyAccount;\r\n    depositCoin = baseCurrency;\r\n  } else if (baseOrQuote === 'quote') {\r\n    coinMint = market?.quoteMintAddress;\r\n    account = quoteCurrencyAccount;\r\n    depositCoin = quoteCurrency;\r\n  } else {\r\n    account = null;\r\n  }\r\n  if (!coinMint) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={depositCoin}\r\n      visible={!!coinMint}\r\n      onOk={onClose}\r\n      onCancel={onClose}\r\n    >\r\n      <div style={{ paddingTop: '20px' }}>\r\n        <p style={{ color: 'white' }}>Mint address:</p>\r\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\r\n        <div>\r\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\r\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n            {account ? (\r\n              account.pubkey.toBase58()\r\n            ) : (\r\n              <>\r\n                Visit{' '}\r\n                <Link external to={providerUrl}>\r\n                  {providerName}\r\n                </Link>{' '}\r\n                to create an account for this mint\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TokenAccount } from '../utils/types';\r\nimport { useSelectedTokenAccounts } from '../utils/markets';\r\nimport { Button, Col, Select, Typography } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { notify } from '../utils/notifications';\r\n\r\nexport default function StandaloneTokenAccountsSelect({\r\n  accounts,\r\n  mint,\r\n  label,\r\n}: {\r\n  accounts: TokenAccount[] | null | undefined;\r\n  mint: string | undefined;\r\n  label?: boolean;\r\n}) {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useSelectedTokenAccounts();\r\n\r\n  let selectedValue: string | undefined;\r\n  if (mint && mint in selectedTokenAccounts) {\r\n    selectedValue = selectedTokenAccounts[mint];\r\n  } else if (accounts && accounts?.length > 0) {\r\n    selectedValue = accounts[0].pubkey.toBase58();\r\n  } else {\r\n    selectedValue = undefined;\r\n  }\r\n\r\n  const setTokenAccountForCoin = (value) => {\r\n    if (!mint) {\r\n      notify({\r\n        message: 'Error selecting token account',\r\n        description: 'Mint is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\r\n    newSelectedTokenAccounts[mint] = value;\r\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label && <Col span={8}>Token account:</Col>}\r\n      <Col span={label ? 13 : 21}>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          value={selectedValue}\r\n          onSelect={setTokenAccountForCoin}\r\n        >\r\n          {accounts?.map((account) => (\r\n            <Select.Option\r\n              key={account.pubkey.toBase58()}\r\n              value={account.pubkey.toBase58()}\r\n            >\r\n              <Typography.Text code>\r\n                {label\r\n                  ? abbreviateAddress(account.pubkey, 8)\r\n                  : account.pubkey.toBase58()}\r\n              </Typography.Text>\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Col>\r\n      <Col span={2} offset={1}>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<CopyOutlined />}\r\n          size={'small'}\r\n          onClick={() =>\r\n            selectedValue && navigator.clipboard.writeText(selectedValue)\r\n          }\r\n        />\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Button, Col, Divider, Popover, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useBalances,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport DepositDialog from './DepositDialog';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\nimport { settleFunds } from '../utils/send';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { notify } from '../utils/notifications';\r\nimport { Balances } from '../utils/types';\r\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport logo1 from '../assets/logo1.svg';\r\n\r\nconst RowBox = styled(Row)`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst Tip = styled.p`\r\n  font-size: 12px;\r\n  padding-top: 6px;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 0.75);\r\n  font-size: 12px;\r\n  display: 'inline-block';\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  border-radius: 4px;\r\n  border: 1px solid rgba(241, 241, 242, 0.5);\r\n`;\r\n\r\nexport default function StandaloneBalancesDisplay() {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const balances = useBalances();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const connection = useSendConnection();\r\n  const { providerUrl, providerName, wallet, connected } = useWallet();\r\n  const [baseOrQuote, setBaseOrQuote] = useState('');\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const baseCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === baseCurrency);\r\n  const quoteCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === quoteCurrency);\r\n\r\n  async function onSettleFunds() {\r\n    if (!market) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'market is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!openOrdersAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!baseCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!quoteCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders: openOrdersAccount,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount,\r\n        quoteCurrencyAccount,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  const formattedBalances: [\r\n    string | undefined,\r\n    Balances | undefined,\r\n    string,\r\n    string | undefined,\r\n  ][] = [\r\n    [\r\n      baseCurrency,\r\n      baseCurrencyBalances,\r\n      'base',\r\n      market?.baseMintAddress.toBase58(),\r\n    ],\r\n    [\r\n      quoteCurrency,\r\n      quoteCurrencyBalances,\r\n      'quote',\r\n      market?.quoteMintAddress.toBase58(),\r\n    ],\r\n  ];\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <div\r\n       style={{\r\n         width: '100%',\r\n         borderBottom: '1px solid #1C274F',\r\n         fontSize: 14,\r\n         paddingBottom: 12,\r\n\r\n       }}\r\n      >\r\n        Wallet Balance\r\n      </div>\r\n      <div style={{ paddingRight: 10}}>\r\n        <Row style={{\r\n          marginTop: 16,\r\n          color: 'rgba(241, 241, 242, 0.5)',\r\n          fontSize: 12,\r\n          textAlign: 'right',\r\n        }}>\r\n          <Col span={6} style={{ textAlign: 'left' }}>\r\n            Asset\r\n          </Col>\r\n          <Col span={9}>\r\n            Wallet balance\r\n          </Col>\r\n          <Col span={9}>\r\n            Unsettled balance\r\n          </Col>\r\n        </Row>\r\n        {formattedBalances.map(\r\n          ([currency, balances, baseOrQuote, mint], index) => (\r\n            <React.Fragment key={index}>\r\n              <Row style={{\r\n                marginTop: 16,\r\n                fontSize: 12,\r\n                color: 'rgba(241, 241, 242, 1)',\r\n                textAlign: 'right',\r\n                borderBottom: '1px solid #1C274F',\r\n                paddingBottom: 18,\r\n              }}>\r\n                <Col span={6} style={{ color: 'rgba(241, 241, 242, 0.5)', textAlign: 'left' }}>\r\n                  {currency}\r\n                </Col>\r\n                <Col span={9}>\r\n                  {balances && balances.wallet}\r\n                </Col>\r\n                <Col span={9}>\r\n                  {balances && balances.unsettled}\r\n                </Col>\r\n                <Col span={6} style={{ paddingTop: 8}}>\r\n                </Col>\r\n                <Col span={9} style={{ paddingTop: 8}}>\r\n                  <ActionButton\r\n                    size=\"small\"\r\n                    onClick={() => setBaseOrQuote(baseOrQuote)}\r\n                  >\r\n                    Deposit\r\n                  </ActionButton>\r\n                </Col>\r\n                <Col span={9} style={{ paddingTop: 8}}>\r\n                  <ActionButton size=\"small\" onClick={onSettleFunds}>\r\n                    Settle\r\n                  </ActionButton>\r\n                </Col>\r\n              </Row>\r\n\r\n              {connected && (\r\n                <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\r\n                  <StandaloneTokenAccountsSelect\r\n                    accounts={tokenAccounts?.filter(\r\n                      (account) => account.effectiveMint.toBase58() === mint,\r\n                    )}\r\n                    mint={mint}\r\n                    label\r\n                  />\r\n                </RowBox>\r\n              )}\r\n            </React.Fragment>\r\n          ),\r\n        )}\r\n      </div>\r\n      <DepositDialog\r\n        baseOrQuote={baseOrQuote}\r\n        onClose={() => setBaseOrQuote('')}\r\n      />\r\n      <div style={{ textAlign: 'center', paddingTop: 32 }}>\r\n        <img src={logo1} alt=\"\" />\r\n        <div style={{ paddingTop: 20, fontSize: 16, color: '#F1F1F2' }}>\r\n          First time trading\r\n        </div>\r\n        <div style={{ fontSize: 16, color: '#F1F1F2' }}>\r\n          on Raydium?\r\n        </div>\r\n        <a\r\n          href={'https://raydium.gitbook.io/raydium/'}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ color : 'rgb(173,175,184)',}}\r\n        >\r\n        <div style={{ paddingTop: 16, fontSize: 12, color: '#5AC4BE' }}>\r\n\r\n            see how it works\r\n\r\n        </div>\r\n      </a>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","const CHARTS_KEY = 'tradingviewCharts';\r\nconst STUDIES_KEY = 'tradingviewStudies';\r\n\r\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\r\n\r\nexport function getAllCharts() {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  return new Promise((resolve) => resolve(charts));\r\n}\r\n\r\nexport function removeChart(chartId) {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== chartId);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveChart(chartData) {\r\n  let { content, ...info } = chartData;\r\n  if (!info.id) {\r\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\r\n  }\r\n  // @ts-ignore\r\n  info.timestamp = new Date() - 0;\r\n  content = JSON.parse(content);\r\n  content['content'] = JSON.parse(content['content']);\r\n  // Remove \"study_Overlay\" i.e the indexes\r\n  try {\r\n    for (\r\n      var i = 0;\r\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\r\n      i++\r\n    ) {\r\n      if (\r\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\r\n        'study_Overlay'\r\n      ) {\r\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  content['content'] = JSON.stringify(content['content']);\r\n  content = JSON.stringify(content);\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== info.id);\r\n  charts.push(info);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\r\n\r\n  return new Promise((resolve) => resolve(info.id));\r\n}\r\n\r\nexport function getChartContent(chartId) {\r\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n\r\nexport function getAllStudyTemplates() {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  return new Promise((resolve) => resolve(studies));\r\n}\r\n\r\nexport function removeStudyTemplate({ name }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== name);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveStudyTemplate({ content, ...info }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== info.name);\r\n  studies.push(info);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function getStudyTemplateContent({ name }) {\r\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n","/* eslint-disable */\r\nvar t = function () {\r\n  return (t =\r\n    Object.assign ||\r\n    function (t) {\r\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\r\n        for (var r in (e = o[n]))\r\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\r\n      return t;\r\n    }).apply(this, arguments);\r\n};\r\nfunction e(o, n) {\r\n  var i = t({}, o);\r\n  for (var r in n)\r\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\r\n      ? void 0 !== n[r] && (i[r] = n[r])\r\n      : (i[r] = e(o[r], n[r]));\r\n  return i;\r\n}\r\nvar o = {\r\n    mobile: {\r\n      disabled_features: [\r\n        'left_toolbar',\r\n        'header_widget',\r\n        'timeframes_toolbar',\r\n        'edit_buttons_in_legend',\r\n        'context_menus',\r\n        'control_bar',\r\n        'border_around_the_chart',\r\n      ],\r\n      enabled_features: [],\r\n    },\r\n  },\r\n  n = {\r\n    width: 800,\r\n    height: 500,\r\n    interval: '1D',\r\n    timezone: 'Etc/UTC',\r\n    container_id: '',\r\n    library_path: '',\r\n    locale: 'en',\r\n    widgetbar: {\r\n      details: !1,\r\n      watchlist: !1,\r\n      watchlist_settings: { default_symbols: [] },\r\n    },\r\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\r\n    studies_overrides: {},\r\n    trading_customization: { position: {}, order: {} },\r\n    brokerConfig: { configFlags: {} },\r\n    fullscreen: !1,\r\n    autosize: !1,\r\n    disabled_features: [],\r\n    enabled_features: [],\r\n    debug: !1,\r\n    logo: {},\r\n    time_frames: [\r\n      { text: '5y', resolution: '1W' },\r\n      { text: '1y', resolution: '1W' },\r\n      { text: '6m', resolution: '120' },\r\n      { text: '3m', resolution: '60' },\r\n      { text: '1m', resolution: '30' },\r\n      { text: '5d', resolution: '5' },\r\n      { text: '1d', resolution: '1' },\r\n    ],\r\n    client_id: '0',\r\n    user_id: '0',\r\n    charts_storage_api_version: '1.0',\r\n    favorites: { intervals: [], chartTypes: [] },\r\n  };\r\nfunction i() {\r\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\r\n}\r\nvar r = (function () {\r\n  function t(t) {\r\n    if (\r\n      ((this._id =\r\n        'tradingview_' +\r\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\r\n      (this._ready = !1),\r\n      (this._readyHandlers = []),\r\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\r\n      !t.datafeed)\r\n    )\r\n      throw new Error('Datafeed is not defined');\r\n    if (((this._options = e(n, t)), t.preset)) {\r\n      var i = o[t.preset];\r\n      i\r\n        ? (void 0 !== this._options.disabled_features\r\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\r\n                i.disabled_features,\r\n              ))\r\n            : (this._options.disabled_features = i.disabled_features),\r\n          void 0 !== this._options.enabled_features\r\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\r\n                i.enabled_features,\r\n              ))\r\n            : (this._options.enabled_features = i.enabled_features))\r\n        : console.warn('Unknown preset: `' + t.preset + '`');\r\n    }\r\n    'Dark' === this._options.theme &&\r\n      void 0 === this._options.loading_screen &&\r\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\r\n      this._create();\r\n  }\r\n  return (\r\n    (t.prototype.onChartReady = function (t) {\r\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\r\n    }),\r\n    (t.prototype.headerReady = function () {\r\n      var t = this;\r\n      return this._innerWindowLoaded.then(function () {\r\n        return t._innerWindow().headerReady();\r\n      });\r\n    }),\r\n    (t.prototype.onGrayedObjectClicked = function (t) {\r\n      this._innerAPI().onGrayedObjectClicked(t);\r\n    }),\r\n    (t.prototype.onShortcut = function (t, e) {\r\n      this._innerWindow().createShortcutAction(t, e);\r\n    }),\r\n    (t.prototype.subscribe = function (t, e) {\r\n      this._innerAPI().subscribe(t, e);\r\n    }),\r\n    (t.prototype.unsubscribe = function (t, e) {\r\n      this._innerAPI().unsubscribe(t, e);\r\n    }),\r\n    (t.prototype.chart = function (t) {\r\n      return this._innerAPI().chart(t);\r\n    }),\r\n    (t.prototype.getLanguage = function () {\r\n      return this._options.locale;\r\n    }),\r\n    (t.prototype.setSymbol = function (t, e, o) {\r\n      this._innerAPI().changeSymbol(t, e, o);\r\n    }),\r\n    (t.prototype.remove = function () {\r\n      window.removeEventListener('resize', this._onWindowResize),\r\n        this._readyHandlers.splice(0, this._readyHandlers.length),\r\n        delete window[this._id],\r\n        this._iFrame.parentNode &&\r\n          this._iFrame.parentNode.removeChild(this._iFrame);\r\n    }),\r\n    (t.prototype.closePopupsAndDialogs = function () {\r\n      this._innerAPI().closePopupsAndDialogs();\r\n    }),\r\n    (t.prototype.selectLineTool = function (t) {\r\n      this._innerAPI().selectLineTool(t);\r\n    }),\r\n    (t.prototype.selectedLineTool = function () {\r\n      return this._innerAPI().selectedLineTool();\r\n    }),\r\n    (t.prototype.save = function (t) {\r\n      this._innerAPI().saveChart(t);\r\n    }),\r\n    (t.prototype.load = function (t, e) {\r\n      this._innerAPI().loadChart({ json: t, extendedData: e });\r\n    }),\r\n    (t.prototype.getSavedCharts = function (t) {\r\n      this._innerAPI().getSavedCharts(t);\r\n    }),\r\n    (t.prototype.loadChartFromServer = function (t) {\r\n      this._innerAPI().loadChartFromServer(t);\r\n    }),\r\n    (t.prototype.saveChartToServer = function (t, e, o) {\r\n      this._innerAPI().saveChartToServer(t, e, o);\r\n    }),\r\n    (t.prototype.removeChartFromServer = function (t, e) {\r\n      this._innerAPI().removeChartFromServer(t, e);\r\n    }),\r\n    (t.prototype.onContextMenu = function (t) {\r\n      this._innerAPI().onContextMenu(t);\r\n    }),\r\n    (t.prototype.createButton = function (t) {\r\n      return this._innerWindow().createButton(t);\r\n    }),\r\n    (t.prototype.showNoticeDialog = function (t) {\r\n      this._innerAPI().showNoticeDialog(t);\r\n    }),\r\n    (t.prototype.showConfirmDialog = function (t) {\r\n      this._innerAPI().showConfirmDialog(t);\r\n    }),\r\n    (t.prototype.showLoadChartDialog = function () {\r\n      this._innerAPI().showLoadChartDialog();\r\n    }),\r\n    (t.prototype.showSaveAsChartDialog = function () {\r\n      this._innerAPI().showSaveAsChartDialog();\r\n    }),\r\n    (t.prototype.symbolInterval = function () {\r\n      return this._innerAPI().getSymbolInterval();\r\n    }),\r\n    (t.prototype.mainSeriesPriceFormatter = function () {\r\n      return this._innerAPI().mainSeriesPriceFormatter();\r\n    }),\r\n    (t.prototype.getIntervals = function () {\r\n      return this._innerAPI().getIntervals();\r\n    }),\r\n    (t.prototype.getStudiesList = function () {\r\n      return this._innerAPI().getStudiesList();\r\n    }),\r\n    (t.prototype.addCustomCSSFile = function (t) {\r\n      this._innerWindow().addCustomCSSFile(t);\r\n    }),\r\n    (t.prototype.applyOverrides = function (t) {\r\n      (this._options = e(this._options, { overrides: t })),\r\n        this._innerWindow().applyOverrides(t);\r\n    }),\r\n    (t.prototype.applyStudiesOverrides = function (t) {\r\n      this._innerWindow().applyStudiesOverrides(t);\r\n    }),\r\n    (t.prototype.watchList = function () {\r\n      return this._innerAPI().watchlist();\r\n    }),\r\n    (t.prototype.activeChart = function () {\r\n      return this._innerAPI().activeChart();\r\n    }),\r\n    (t.prototype.chartsCount = function () {\r\n      return this._innerAPI().chartsCount();\r\n    }),\r\n    (t.prototype.layout = function () {\r\n      return this._innerAPI().layout();\r\n    }),\r\n    (t.prototype.setLayout = function (t) {\r\n      this._innerAPI().setLayout(t);\r\n    }),\r\n    (t.prototype.layoutName = function () {\r\n      return this._innerAPI().layoutName();\r\n    }),\r\n    (t.prototype.changeTheme = function (t, e) {\r\n      this._innerWindow().changeTheme(t, e);\r\n    }),\r\n    (t.prototype.getTheme = function () {\r\n      return this._innerWindow().getTheme();\r\n    }),\r\n    (t.prototype.takeScreenshot = function () {\r\n      this._innerAPI().takeScreenshot();\r\n    }),\r\n    (t.prototype.lockAllDrawingTools = function () {\r\n      return this._innerAPI().lockAllDrawingTools();\r\n    }),\r\n    (t.prototype.hideAllDrawingTools = function () {\r\n      return this._innerAPI().hideAllDrawingTools();\r\n    }),\r\n    (t.prototype.drawOnAllCharts = function (t) {\r\n      this._innerAPI().drawOnAllCharts(t);\r\n    }),\r\n    (t.prototype.magnetEnabled = function () {\r\n      return this._innerAPI().magnetEnabled();\r\n    }),\r\n    (t.prototype.magnetMode = function () {\r\n      return this._innerAPI().magnetMode();\r\n    }),\r\n    (t.prototype.undoRedoState = function () {\r\n      return this._innerAPI().undoRedoState();\r\n    }),\r\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\r\n      this._innerAPI().setIntervalLinkingEnabled(t);\r\n    }),\r\n    (t.prototype.setTimeFrame = function (t) {\r\n      this._innerAPI().setTimeFrame(t);\r\n    }),\r\n    (t.prototype.symbolSync = function () {\r\n      return this._innerAPI().symbolSync();\r\n    }),\r\n    (t.prototype.intervalSync = function () {\r\n      return this._innerAPI().intervalSync();\r\n    }),\r\n    (t.prototype.crosshairSync = function () {\r\n      return this._innerAPI().crosshairSync();\r\n    }),\r\n    (t.prototype.timeSync = function () {\r\n      return this._innerAPI().timeSync();\r\n    }),\r\n    (t.prototype.getAllFeatures = function () {\r\n      return this._innerWindow().getAllFeatures();\r\n    }),\r\n    (t.prototype.takeClientScreenshot = function () {\r\n      return this._innerAPI().takeClientScreenshot();\r\n    }),\r\n    (t.prototype._innerAPI = function () {\r\n      return this._innerWindow().tradingViewApi;\r\n    }),\r\n    (t.prototype._innerWindow = function () {\r\n      return this._iFrame.contentWindow;\r\n    }),\r\n    (t.prototype._autoResizeChart = function () {\r\n      this._options.fullscreen &&\r\n        (this._iFrame.style.height = window.innerHeight + 'px');\r\n    }),\r\n    (t.prototype._create = function () {\r\n      var t = this,\r\n        e = this._render(),\r\n        o = document.getElementById(this._options.container_id);\r\n      if (null === o)\r\n        throw new Error(\r\n          'There is no such element - #' + this._options.container_id,\r\n        );\r\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\r\n      var n = this._iFrame;\r\n      (this._options.autosize || this._options.fullscreen) &&\r\n        ((n.style.width = '100%'),\r\n        this._options.fullscreen || (n.style.height = '100%')),\r\n        window.addEventListener('resize', this._onWindowResize),\r\n        this._onWindowResize(),\r\n        (this._innerWindowLoaded = new Promise(function (t) {\r\n          var e = function () {\r\n            n.removeEventListener('load', e, !1), t();\r\n          };\r\n          n.addEventListener('load', e, !1);\r\n        })),\r\n        this._innerWindowLoaded.then(function () {\r\n          t._innerWindow().widgetReady(function () {\r\n            t._ready = !0;\r\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\r\n              var n = o[e];\r\n              try {\r\n                n.call(t);\r\n              } catch (i) {\r\n                console.error(i);\r\n              }\r\n            }\r\n            t._innerWindow().initializationFinished();\r\n          });\r\n        });\r\n    }),\r\n    (t.prototype._render = function () {\r\n      var t = window;\r\n      if (\r\n        ((t[this._id] = {\r\n          datafeed: this._options.datafeed,\r\n          customFormatters:\r\n            this._options.custom_formatters || this._options.customFormatters,\r\n          brokerFactory:\r\n            this._options.broker_factory || this._options.brokerFactory,\r\n          overrides: this._options.overrides,\r\n          studiesOverrides: this._options.studies_overrides,\r\n          tradingCustomization: this._options.trading_customization,\r\n          disabledFeatures: this._options.disabled_features,\r\n          enabledFeatures: this._options.enabled_features,\r\n          brokerConfig:\r\n            this._options.broker_config || this._options.brokerConfig,\r\n          restConfig: this._options.restConfig,\r\n          favorites: this._options.favorites,\r\n          logo: this._options.logo,\r\n          numeric_formatting: this._options.numeric_formatting,\r\n          rss_news_feed: this._options.rss_news_feed,\r\n          newsProvider: this._options.news_provider,\r\n          loadLastChart: this._options.load_last_chart,\r\n          saveLoadAdapter: this._options.save_load_adapter,\r\n          loading_screen: this._options.loading_screen,\r\n          settingsAdapter: this._options.settings_adapter,\r\n          getCustomIndicators: this._options.custom_indicators_getter,\r\n        }),\r\n        this._options.saved_data)\r\n      )\r\n        t[this._id].chartContent = { json: this._options.saved_data };\r\n      else if (!this._options.load_last_chart && !this._options.symbol)\r\n        throw new Error(\r\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\r\n        );\r\n      var e =\r\n        (this._options.library_path || '') +\r\n        (encodeURIComponent(this._options.locale) +\r\n          '-tv-chart.cbd3ae28.html#symbol=') +\r\n        encodeURIComponent(this._options.symbol || '') +\r\n        '&interval=' +\r\n        encodeURIComponent(this._options.interval) +\r\n        (this._options.timeframe\r\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\r\n          : '') +\r\n        (this._options.toolbar_bg\r\n          ? '&toolbarbg=' +\r\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\r\n          : '') +\r\n        (this._options.studies_access\r\n          ? '&studiesAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\r\n          : '') +\r\n        '&widgetbar=' +\r\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\r\n        (this._options.drawings_access\r\n          ? '&drawingsAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\r\n          : '') +\r\n        '&timeFrames=' +\r\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\r\n        '&locale=' +\r\n        encodeURIComponent(this._options.locale) +\r\n        '&uid=' +\r\n        encodeURIComponent(this._id) +\r\n        '&clientId=' +\r\n        encodeURIComponent(String(this._options.client_id)) +\r\n        '&userId=' +\r\n        encodeURIComponent(String(this._options.user_id)) +\r\n        (this._options.charts_storage_url\r\n          ? '&chartsStorageUrl=' +\r\n            encodeURIComponent(this._options.charts_storage_url)\r\n          : '') +\r\n        (this._options.charts_storage_api_version\r\n          ? '&chartsStorageVer=' +\r\n            encodeURIComponent(this._options.charts_storage_api_version)\r\n          : '') +\r\n        (this._options.custom_css_url\r\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\r\n          : '') +\r\n        (this._options.auto_save_delay\r\n          ? '&autoSaveDelay=' +\r\n            encodeURIComponent(String(this._options.auto_save_delay))\r\n          : '') +\r\n        '&debug=' +\r\n        encodeURIComponent(String(this._options.debug)) +\r\n        (this._options.snapshot_url\r\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\r\n          : '') +\r\n        (this._options.timezone\r\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\r\n          : '') +\r\n        (this._options.study_count_limit\r\n          ? '&studyCountLimit=' +\r\n            encodeURIComponent(String(this._options.study_count_limit))\r\n          : '') +\r\n        (this._options.symbol_search_request_delay\r\n          ? '&ssreqdelay=' +\r\n            encodeURIComponent(\r\n              String(this._options.symbol_search_request_delay),\r\n            )\r\n          : '') +\r\n        (this._options.compare_symbols\r\n          ? '&compareSymbols=' +\r\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\r\n          : '') +\r\n        (this._options.theme\r\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\r\n          : '');\r\n      return (\r\n        '<iframe id=\"' +\r\n        this._id +\r\n        '\" name=\"' +\r\n        this._id +\r\n        '\"  src=\"' +\r\n        e +\r\n        '\"' +\r\n        (this._options.autosize || this._options.fullscreen\r\n          ? ''\r\n          : ' width=\"' +\r\n            this._options.width +\r\n            '\" height=\"' +\r\n            this._options.height +\r\n            '\"') +\r\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\r\n      );\r\n    }),\r\n    t\r\n  );\r\n})();\r\n(window.TradingView = window.TradingView || {}),\r\n  (window.TradingView.version = i);\r\nexport { i as version, r as widget };\r\n","// @ts-nocheck\r\nimport React, { useMemo } from 'react';\r\nimport { sleep } from './utils';\r\n\r\nconst URL = 'https://serum-api.bonfida.com/tv/';\r\n\r\nconst X = [\r\n  '1045529pOiBJz',\r\n  'cPLzc',\r\n  '1142540VecyVK',\r\n  'rlUik',\r\n  '577391szPtPO',\r\n  'subtle',\r\n  'CCCPGTDWqnEg3eMUrimj',\r\n  '2AxnvtD',\r\n  'symbol',\r\n  '&auth=',\r\n  'Qeeef',\r\n  '171418QDwYjT',\r\n  'GET',\r\n  'MtwRi',\r\n  'getTime',\r\n  'toString',\r\n  'from',\r\n  'digest',\r\n  '7954rqLEJT',\r\n  '2uXFGco',\r\n  'FyLkI',\r\n  'SHA-256',\r\n  'json',\r\n  '28yNhqFa',\r\n  '440584Yhkmes',\r\n  'tVDWs',\r\n  '1159216SoDZHv',\r\n  'log',\r\n];\r\nconst A = function (F, p) {\r\n  F = F - (0x5 * 0x515 + -0x1918 + 0x1 * 0xb5);\r\n  let N = X[F];\r\n  return N;\r\n};\r\n(function (F, p) {\r\n  const j = function (F, p) {\r\n    return A(p - 0x93, F);\r\n  };\r\n  while (!![]) {\r\n    try {\r\n      const N =\r\n        -parseInt(j(0x1af, 0x1b3)) * -parseInt(j(0x1a0, 0x19c)) +\r\n        parseInt(j(0x19e, 0x19e)) +\r\n        -parseInt(j(0x1a3, 0x1a0)) +\r\n        parseInt(j(0x1be, 0x1b2)) * -parseInt(j(0x1a6, 0x19b)) +\r\n        -parseInt(j(0x1a3, 0x1a7)) * -parseInt(j(0x1ab, 0x1a4)) +\r\n        -parseInt(j(0x1a4, 0x1a2)) +\r\n        parseInt(j(0x1b8, 0x1ab));\r\n      if (N === p) {\r\n        break;\r\n      } else {\r\n        F['push'](F['shift']());\r\n      }\r\n    } catch (m) {\r\n      F['push'](F['shift']());\r\n    }\r\n  }\r\n})(X, 0x7 * 0x40887 + -0x19a3 * -0x116 + -0x297d18);\r\nasync function apiGet(F, p) {\r\n  const B = function (F, p) {\r\n    return A(p - 0x3a, F);\r\n  };\r\n  const N = {\r\n    tVDWs: function (m, d) {\r\n      return m + d;\r\n    },\r\n    Qeeef: B(0x14c, 0x153),\r\n  };\r\n  try {\r\n    const m = await _lodash(p[B(0x152, 0x14f)], p['from'], p['to']);\r\n    let d = await fetch(N[B(0x138, 0x144)](F, B(0x15c, 0x150) + m), {\r\n      method: N[B(0x153, 0x151)],\r\n    });\r\n    if (!d['ok']) {\r\n      return [];\r\n    }\r\n    let M = await d[B(0x146, 0x141)]();\r\n    return M;\r\n  } catch (l) {\r\n    console[B(0x143, 0x146)](l);\r\n    return [];\r\n  }\r\n}\r\nconst widgetReady = async (F) => {\r\n  const f = function (F, p) {\r\n    return A(p - 0x3d8, F);\r\n  };\r\n  const p = new TextEncoder()['encode'](F);\r\n  const N = await crypto[f(0x4ee, 0x4ea)][f(0x4f1, 0x4f6)](f(0x4da, 0x4de), p);\r\n  const m = Array[f(0x4e9, 0x4f5)](new Uint8Array(N));\r\n  const d = m['map']((M) =>\r\n    ('00' + M[f(0x502, 0x4f4)](-0x18a9 + -0x2fe * 0x2 + -0x1 * -0x1eb5))[\r\n      'slice'\r\n    ](-(-0x1363 * 0x2 + -0x24c + -0x2 * -0x148a)),\r\n  )['join']('');\r\n  return d;\r\n};\r\nconst _lodash = async (F, p, N) => {\r\n  const w = function (F, p) {\r\n    return A(F - -0x211, p);\r\n  };\r\n  const m = {\r\n    DSQWA: function (H, K) {\r\n      return H / K;\r\n    },\r\n    rlUik: function (H, K) {\r\n      return H - K;\r\n    },\r\n    MtwRi: function (H, K) {\r\n      return H * K;\r\n    },\r\n    cPLzc: function (H, K) {\r\n      return H(K);\r\n    },\r\n    FyLkI: function (H, K) {\r\n      return H + K;\r\n    },\r\n  };\r\n  let d = m['DSQWA'](\r\n    new Date()[w(-0xf6, -0xf3)](),\r\n    -0x24c6 + -0x1 * 0x2533 + 0x4de1,\r\n  );\r\n  const M = w(-0xfe, -0x101);\r\n  d = m[w(-0x101, -0x107)](\r\n    d,\r\n    d %\r\n      m[w(-0xf7, -0xed)](\r\n        0x1 * 0x12b3 + 0x3f3 * -0x1 + -0xeb1,\r\n        0x35b + -0x1955 + -0x1636 * -0x1,\r\n      ),\r\n  );\r\n  const l = await m[w(-0x103, -0x10c)](\r\n    widgetReady,\r\n    m[w(-0xf0, -0xe5)](m[w(-0xf0, -0xe8)](M, d) + F + p, N),\r\n  );\r\n  return l;\r\n};\r\n\r\nexport const useTvDataFeed = () => {\r\n  return useMemo(() => makeDataFeed(), []);\r\n};\r\n\r\nconst makeDataFeed = () => {\r\n  let subscriptions = {};\r\n\r\n  return {\r\n    async onReady(callback) {\r\n      await sleep(0);\r\n      callback({\r\n        supported_resolutions: ['1', '60', '240', 'D'],\r\n        supports_group_request: false,\r\n        supports_marks: false,\r\n        supports_search: true,\r\n        supports_timescale_marks: false,\r\n      });\r\n    },\r\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\r\n      const result = await apiGet(\r\n        `${URL}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${100}`,\r\n      );\r\n      onResult(result);\r\n    },\r\n    async resolveSymbol(\r\n      symbolName,\r\n      onSymboleResolvedCallback,\r\n      onResolveErrorCallback,\r\n      extension?,\r\n    ) {\r\n      const result = await apiGet(`${URL}symbols?symbol=${symbolName}`, {});\r\n\r\n      if (!result) {\r\n        onResolveErrorCallback();\r\n        return;\r\n      }\r\n      onSymboleResolvedCallback(result);\r\n    },\r\n    async getBars(\r\n      symbolInfo,\r\n      resolution,\r\n      from,\r\n      to,\r\n      onHistoryCallback,\r\n      onErrorCallback,\r\n      firstDataRequest,\r\n    ) {\r\n      from = Math.floor(from);\r\n      to = Math.ceil(to);\r\n\r\n      let url = `${URL}history?symbol=${\r\n        symbolInfo.name\r\n      }&resolution=${convertResolution(resolution)}&from=${from}`;\r\n\r\n      if (firstDataRequest) {\r\n        url += `&to=${to}`;\r\n      }\r\n      try {\r\n        const result = await apiGet(url, {\r\n          from: from,\r\n          to: to,\r\n          symbol: symbolInfo.name,\r\n        });\r\n        onHistoryCallback(parseCandles(result), {\r\n          nodeData: result.length === 0,\r\n        });\r\n      } catch (err) {\r\n        onErrorCallback(err);\r\n      }\r\n    },\r\n    async subscribeBars(\r\n      symbolInfo,\r\n      resolution,\r\n      onRealtimeCallback,\r\n      subscriberUID,\r\n      onResetCacheNeededCallback,\r\n    ) {\r\n      if (subscriptions[subscriberUID]) {\r\n        subscriptions[subscriberUID].stop();\r\n        delete subscriptions[subscriberUID];\r\n      }\r\n\r\n      let stopped = false;\r\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\r\n\r\n      while (!stopped) {\r\n        await sleep(2000);\r\n        for (let i = 0; i < 10; ++i) {\r\n          if (document.visibilityState !== 'visible') {\r\n            await sleep(2000);\r\n          }\r\n        }\r\n        if (stopped) {\r\n          return;\r\n        }\r\n\r\n        let candle;\r\n        try {\r\n          const to = Math.ceil(new Date().getTime() / 1000);\r\n          const from = reduceTs(to, resolution);\r\n          let url = `${URL}history?symbol=${\r\n            symbolInfo.name\r\n          }&resolution=${convertResolution(resolution)}&from=${from}&to=${to}`;\r\n\r\n          candle = await apiGet(url, {\r\n            from: from,\r\n            to: to,\r\n            symbol: symbolInfo.name,\r\n          });\r\n          const lastCandle = {\r\n            time: candle.t[0] * 1000,\r\n            close: candle.c[0],\r\n            open: candle.o[0],\r\n            high: candle.h[0],\r\n            low: candle.l[0],\r\n            volume: candle.v[0],\r\n          };\r\n          onRealtimeCallback(lastCandle);\r\n          continue;\r\n        } catch (e) {\r\n          console.warn(e);\r\n          await sleep(10000);\r\n          continue;\r\n        }\r\n\r\n        if (!stopped) {\r\n          console.log('!stopped', candle);\r\n\r\n          onRealtimeCallback(candle);\r\n        }\r\n      }\r\n    },\r\n    unsubscribeBars(subscriberUID) {\r\n      subscriptions[subscriberUID].stop();\r\n      delete subscriptions[subscriberUID];\r\n    },\r\n  };\r\n};\r\n\r\nconst reduceTs = (ts: number, resolutionTv: string) => {\r\n  let resolution = convertResolution(resolutionTv);\r\n  switch (resolution) {\r\n    case 1:\r\n      return ts - (ts % 60);\r\n    case 60:\r\n      return ts - (ts % (60 * 60));\r\n    case 4 * 60:\r\n      return ts - (ts % (4 * 60 * 60));\r\n    case '1D':\r\n      return ts - (ts % (24 * 60 * 60));\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nconst convertResolution = (resolution: string) => {\r\n  switch (resolution) {\r\n    case '1':\r\n      return 1;\r\n    case '60':\r\n      return 60;\r\n    case '240':\r\n      return 4 * 60;\r\n    case '1D':\r\n      return '1D';\r\n    default:\r\n      return 1;\r\n  }\r\n};\r\n\r\ninterface rawCandles {\r\n  s: string;\r\n  c: Array<number>;\r\n  o: Array<number>;\r\n  l: Array<number>;\r\n  h: Array<number>;\r\n  t: Array<number>;\r\n  v: Array<number>;\r\n}\r\n\r\ninterface bar {\r\n  time: number;\r\n  close: number;\r\n  open: number;\r\n  low: number;\r\n  high: number;\r\n  volume: number;\r\n}\r\n\r\nconst parseCandles = (candles: rawCandles) => {\r\n  const result: Array<bar> = [];\r\n  for (let i = 0; i < candles.t.length; i++) {\r\n    result.push({\r\n      time: candles.t[i] * 1000,\r\n      close: candles.c[i],\r\n      open: candles.o[i],\r\n      high: candles.h[i],\r\n      low: candles.l[i],\r\n      volume: candles.v[i],\r\n    });\r\n  }\r\n  return result;\r\n};\r\n","import './index.css';\r\n\r\nimport * as React from 'react';\r\nimport * as saveLoadAdapter from './saveLoadAdapter';\r\n\r\nimport {\r\n  ChartingLibraryWidgetOptions,\r\n  IChartingLibraryWidget,\r\n  widget,\r\n} from '../../charting_library';\r\n\r\nimport { findTVMarketFromAddress } from '../../utils/tradingview';\r\nimport { flatten } from '../../utils/utils';\r\nimport { useMarket } from '../../utils/markets';\r\nimport { useTvDataFeed } from '../../utils/Datafeed';\r\n\r\nexport interface ChartContainerProps {\r\n  symbol: ChartingLibraryWidgetOptions['symbol'];\r\n  interval: ChartingLibraryWidgetOptions['interval'];\r\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\r\n\r\n  // BEWARE: no trailing slash is expected in feed URL\r\n  datafeedUrl: string;\r\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\r\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\r\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\r\n  clientId: ChartingLibraryWidgetOptions['client_id'];\r\n  userId: ChartingLibraryWidgetOptions['user_id'];\r\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\r\n  autosize: ChartingLibraryWidgetOptions['autosize'];\r\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\r\n  containerId: ChartingLibraryWidgetOptions['container_id'];\r\n  theme: string;\r\n}\r\n\r\nexport interface ChartContainerState {}\r\n\r\nexport const TVChartContainer = () => {\r\n  let datafeed = useTvDataFeed();\r\n  const defaultProps: ChartContainerProps = {\r\n    symbol: 'RAY/USDT',\r\n    // @ts-ignore\r\n    interval: '60',\r\n    auto_save_delay: 5,\r\n    theme: 'Dark',\r\n    containerId: 'tv_chart_container',\r\n    libraryPath: '/charting_library/',\r\n    chartsStorageUrl: 'https://saveload.tradingview.com',\r\n    chartsStorageApiVersion: '1.1',\r\n    clientId: 'tradingview.com',\r\n    userId: 'public_user_id',\r\n    fullscreen: false,\r\n    autosize: true,\r\n    studiesOverrides: {},\r\n  };\r\n\r\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\r\n  const { marketName } = useMarket();\r\n\r\n  const chartProperties = JSON.parse(\r\n    localStorage.getItem('chartproperties') || '{}',\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const savedProperties = flatten(chartProperties, {\r\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\r\n    });\r\n\r\n    const widgetOptions: ChartingLibraryWidgetOptions = {\r\n      symbol: marketName as string,\r\n      // BEWARE: no trailing slash is expected in feed URL\r\n      // tslint:disable-next-line:no-any\r\n      // @ts-ignore\r\n      datafeed: datafeed,\r\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\r\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\r\n      library_path: defaultProps.libraryPath as string,\r\n      auto_save_delay: 5,\r\n\r\n      locale: 'en',\r\n      disabled_features: ['use_localstorage_for_settings'],\r\n      enabled_features: ['study_templates'],\r\n      load_last_chart: true,\r\n      client_id: defaultProps.clientId,\r\n      user_id: defaultProps.userId,\r\n      fullscreen: defaultProps.fullscreen,\r\n      autosize: defaultProps.autosize,\r\n      studies_overrides: defaultProps.studiesOverrides,\r\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\r\n      overrides: {\r\n        ...savedProperties,\r\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\r\n        // 'mainSeriesProperties.candleStyle.borderColor': '#378658',\r\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\r\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\r\n      },\r\n      // @ts-ignore\r\n      save_load_adapter: saveLoadAdapter,\r\n      settings_adapter: {\r\n        initialSettings: {\r\n          'trading.orderPanelSettingsBroker': JSON.stringify({\r\n            showRelativePriceControl: false,\r\n            showCurrencyRiskInQty: false,\r\n            showPercentRiskInQty: false,\r\n            showBracketsInCurrency: false,\r\n            showBracketsInPercent: false,\r\n          }),\r\n          // \"proterty\"\r\n          'trading.chart.proterty':\r\n            localStorage.getItem('trading.chart.proterty') ||\r\n            JSON.stringify({\r\n              hideFloatingPanel: 1,\r\n            }),\r\n          'chart.favoriteDrawings':\r\n            localStorage.getItem('chart.favoriteDrawings') ||\r\n            JSON.stringify([]),\r\n          'chart.favoriteDrawingsPosition':\r\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\r\n            JSON.stringify({}),\r\n        },\r\n        setValue: (key, value) => {\r\n          localStorage.setItem(key, value);\r\n        },\r\n        removeValue: (key) => {\r\n          localStorage.removeItem(key);\r\n        },\r\n      },\r\n    };\r\n\r\n    const tvWidget = new widget(widgetOptions);\r\n\r\n    tvWidget.onChartReady(() => {\r\n      tvWidgetRef.current = tvWidget;\r\n      tvWidget\r\n        // @ts-ignore\r\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\r\n    });\r\n  }, [marketName, tvWidgetRef.current]);\r\n\r\n  return <div style={{ height: 540 }} id={defaultProps.containerId} className={'TVChartContainer'} />;\r\n};\r\n","import { Button, Col, Input, InputNumber, Radio, Row, Select, Slider, Switch } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  floorToDecimal,\r\n  getDecimalCount,\r\n  roundToDecimal,\r\n} from '../utils/utils';\r\nimport { getUnixTs, placeOrder } from '../utils/send';\r\nimport {\r\n  useFeeDiscountKeys,\r\n  useLocallyStoredFeeDiscountKey,\r\n  useMarkPrice,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useSelectedQuoteCurrencyBalances,\r\n} from '../utils/markets';\r\n\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\r\nimport { notify } from '../utils/notifications';\r\nimport { refreshCache } from '../utils/fetch-loop';\r\nimport styled from 'styled-components';\r\nimport tuple from 'immutable-tuple';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { useWallet } from '../utils/wallet';\r\n\r\nconst SellButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #f23b69;\r\n  border-color: #f23b69;\r\n`;\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({\r\n  style,\r\n  setChangeOrderRef,\r\n}: {\r\n  style?: any;\r\n  setChangeOrderRef?: (\r\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\r\n  ) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet, connected } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n  useFeeDiscountKeys();\r\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n\r\n  const availableQuote =\r\n    openOrdersAccount && market\r\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n      : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  useEffect(() => {\r\n    const warmUpCache = async () => {\r\n      try {\r\n        if (!wallet || !wallet.publicKey || !market) {\r\n          console.log(`Skipping refreshing accounts`);\r\n          return;\r\n        }\r\n        const startTime = getUnixTs();\r\n        console.log(`Refreshing accounts for ${market.address}`);\r\n        await market?.findOpenOrdersAccountsForOwner(\r\n          sendConnection,\r\n          wallet.publicKey,\r\n        );\r\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\r\n        const endTime = getUnixTs();\r\n        console.log(\r\n          `Finished refreshing accounts for ${market.address} after ${\r\n            endTime - startTime\r\n          }`,\r\n        );\r\n      } catch (e) {\r\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\r\n      }\r\n    };\r\n    warmUpCache();\r\n    const id = setInterval(warmUpCache, 30_000);\r\n    return () => clearInterval(id);\r\n  }, [market, sendConnection, wallet, wallet.publicKey]);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({\r\n    size,\r\n    price,\r\n  }: {\r\n    size?: number;\r\n    price?: number;\r\n  }) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize =\r\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(\r\n        typeof formattedMarkPrice === 'number'\r\n          ? formattedMarkPrice\r\n          : parseFloat(formattedMarkPrice),\r\n      );\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price,\r\n        size: baseSize,\r\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n        feeDiscountPubkey: feeDiscountKey\r\n      });\r\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\r\n      setPrice(undefined);\r\n      onSetBaseSize(undefined);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  // @ts-ignore\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('buy')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            BUY\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('sell')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            SELL\r\n          </Col>\r\n        </Row>\r\n        <div\r\n          style={{\r\n            padding: '24px 24px 15px',\r\n          }}\r\n        >\r\n          <Select\r\n            defaultValue=\"Limit Order\"\r\n            bordered={false}\r\n            style={{\r\n              width: '100%',\r\n              height: 47,\r\n              left: 0,\r\n              top: 0,\r\n              background: '#1C274F',\r\n              borderRadius: 4,\r\n              paddingTop: 5,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n            <Select.Option value=\"Limit Order\">Limit Order</Select.Option>\r\n            {/* <Select.Option value=\"Market Order\">Market Order</Select.Option> */}\r\n          </Select>\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Limit price</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={price}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => setPrice(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Amount</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\r\n              }\r\n              value={baseSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetBaseSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Total</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={quoteSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetQuoteSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <Row style={{ paddingTop: 8}}>\r\n            <Col span={12}>\r\n              <Slider\r\n                style={{ width: '80%' }}\r\n                value={sizeFraction}\r\n                tipFormatter={(value) => `${value}%`}\r\n                marks={sliderMarks}\r\n                onChange={onSliderChange}\r\n              />\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={postOnly}\r\n                style={{ width: 32}}\r\n                onChange={postOnChange}\r\n              />\r\n                <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>POST</div>\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={ioc}\r\n                style={{ width: 32}}\r\n                onChange={iocOnChange}\r\n              />\r\n              <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>IOC</div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <BuyButton\r\n            disabled={!price || !baseSize}\r\n            onClick={onSubmit}\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={submitting}\r\n            style={{\r\n              marginTop: 20,\r\n              height: 41,\r\n              background: 'rgba(90, 196, 190, 0.1)',\r\n              border: '1px solid #5AC4BE',\r\n              borderRadius: 4,\r\n            }}\r\n          >\r\n            LIMIT {side.toUpperCase()} {baseCurrency}\r\n          </BuyButton>\r\n        </div>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\r\nimport { getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { BonfidaTrade } from '../utils/types';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nexport default function PublicTrades({ smallScreen }) {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const [trades, loaded] = useBonfidaTrades();\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        {\r\n          ...(smallScreen\r\n            ? { flex: 1 }\r\n            : {\r\n              // marginTop: '10px',\r\n              minHeight: '400px',\r\n              maxHeight: 'calc(100vh - 700px)',\r\n            }),\r\n        }\r\n      }\r\n    >\r\n      <Title\r\n        style={{\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n        }}\r\n      >Recent Market trades</Title>\r\n      <SizeTitle>\r\n        <Col span={8} style={{ textAlign: 'left', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>Price ({quoteCurrency}) </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Time\r\n        </Col>\r\n      </SizeTitle>\r\n      {!!trades && loaded && (\r\n        <div\r\n          style={{\r\n            marginRight: '-10px',\r\n            paddingRight: '5px',\r\n            overflowY: 'scroll',\r\n            // maxHeight: smallScreen\r\n            //   ? 'calc(100% - 75px)'\r\n            //   : 'calc(100vh - 800px)',\r\n            height: 350\r\n          }}\r\n        >\r\n          {trades.map((trade: BonfidaTrade, i: number) => (\r\n            <Row key={i} style={{ marginBottom: 4 }}>\r\n              <Col\r\n                span={8}\r\n                style={{\r\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {market?.tickSize && !isNaN(trade.price)\r\n                  ? Number(trade.price).toFixed(\r\n                      getDecimalCount(market.tickSize),\r\n                    )\r\n                  : trade.price}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', fontSize: 12, }}>\r\n                {market?.minOrderSize && !isNaN(trade.size)\r\n                  ? Number(trade.size).toFixed(\r\n                      getDecimalCount(market.minOrderSize),\r\n                    )\r\n                  : trade.size}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59', fontSize: 12, }}>\r\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Tag } from 'antd';\r\nimport { useFills, useMarket } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nexport default function FillsTable() {\r\n  const fills = useFills();\r\n\r\n  const { quoteCurrency } = useMarket();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: `Size`,\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n    },\r\n    {\r\n      title: `Price`,\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: `Liquidity`,\r\n      dataIndex: 'liquidity',\r\n      key: 'liquidity',\r\n    },\r\n    {\r\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\r\n      dataIndex: 'feeCost',\r\n      key: 'feeCost',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (fills || []).map((fill) => ({\r\n    ...fill,\r\n    key: `${fill.orderId}${fill.side}`,\r\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Market\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Side\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Size\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Pirce\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Liquidity\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              {quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees'}\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(\r\n              ({ marketName, side, size, price, liquidity, feeCost }, i) => (\r\n                <Row\r\n                  key={i}\r\n                  style={{\r\n                    fontSize: 14,\r\n                    color: 'rgba(241, 241, 242, 1)',\r\n                    paddingBottom: 16,\r\n                  }}\r\n                >\r\n                  <Col span={4} style={{ textAlign: 'left' }}>\r\n                    {marketName}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {side}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {size}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {price}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {liquidity}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {feeCost}\r\n                  </Col>\r\n                </Row>\r\n              ),\r\n            )}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No fills\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Typography, Tag, Button } from 'antd';\r\nimport { useFeeDiscountKeys } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\r\nimport { percentFormat } from '../../utils/utils';\r\n\r\nexport default function FeesTable() {\r\n  const [feeAccounts] = useFeeDiscountKeys();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n      render: (feeTier, row) => (\r\n        <div style={{ display: 'flex' }}>\r\n          <Typography>{feeTier}</Typography>\r\n          {row.index === 0 ? (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                Selected\r\n              </Tag>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: `Public Key`,\r\n      dataIndex: 'pubkey',\r\n      key: 'pubkey',\r\n      render: (pubkey) => pubkey.toBase58(),\r\n    },\r\n    {\r\n      title: `Balance`,\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: `Mint`,\r\n      dataIndex: 'mint',\r\n      key: 'mint',\r\n      render: (_, row) =>\r\n        row.mint.equals(TokenInstructions.SRM_MINT)\r\n          ? 'SRM'\r\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\r\n          ? 'MSRM'\r\n          : 'UNKNOWN',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (feeAccounts || []).map((account, index) => ({\r\n    ...account,\r\n    index,\r\n    key: account.pubkey.toBase58(),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Fee Tier\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Taker\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Maker\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Public Key\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Balance\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Mint\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(({ mint, balance, pubkey, feeTier }, index) => (\r\n              <Row\r\n                key={index}\r\n                style={{\r\n                  fontSize: 14,\r\n                  color: 'rgba(241, 241, 242, 1)',\r\n                  paddingBottom: 16,\r\n                }}\r\n              >\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  <Typography>{feeTier}</Typography>\r\n                  {index === 0 ? (\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                        Selected\r\n                      </Tag>\r\n                    </div>\r\n                  ) : null}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).taker)}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).maker)}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {pubkey.toBase58()}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {balance}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {mint.equals(TokenInstructions.SRM_MINT)\r\n                    ? 'SRM'\r\n                    : mint.equals(TokenInstructions.MSRM_MINT)\r\n                    ? 'MSRM'\r\n                    : 'UNKNOWN'}\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No (M)SRM accounts\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n      {/*<Row style={{ marginTop: 8 }}>*/}\r\n      {/*  <Col>*/}\r\n      {/*    <Typography>*/}\r\n      {/*      Holding SRM or MSRM makes you eligible for fee discounts:*/}\r\n      {/*    </Typography>*/}\r\n      {/*    <FeeScheduleTable />*/}\r\n      {/*  </Col>*/}\r\n      {/*</Row>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeeScheduleTable() {\r\n  // Representation of serum-js/src/fees.ts\r\n  const dataSource = [\r\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\r\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\r\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\r\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\r\n    {\r\n      feeTier: 4,\r\n      taker: 0.0014,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 100000,\r\n    },\r\n    {\r\n      feeTier: 5,\r\n      taker: 0.0012,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 1000000,\r\n    },\r\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\r\n  ];\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: 'Requirements',\r\n      dataIndex: 'requirements',\r\n      key: 'requirements',\r\n      render: (_, row) => (\r\n        <Typography>\r\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <DataTable\r\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\r\n      columns={columns}\r\n    />\r\n  );\r\n}\r\n","import BalancesTable from './BalancesTable';\r\nimport OpenOrderTable from './OpenOrderTable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tabs, Typography, Col, Row } from 'antd';\r\nimport FillsTable from './FillsTable';\r\nimport FloatingElement from '../layout/FloatingElement';\r\nimport FeesTable from './FeesTable';\r\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\r\n\r\nconst { Paragraph } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function Index() {\r\n  const { market } = useMarket();\r\n  const [activeKeyStr, setActiveKeyStr] = useState('orders');\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\r\n      <Row>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('orders')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom: activeKeyStr === 'orders' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'orders'\r\n                ? '#F1F1F2'\r\n                : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Open Orders\r\n        </Col>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('fills')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom: activeKeyStr === 'fills' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'fills' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Recent Trade History\r\n        </Col>\r\n        <Col\r\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n          onClick={() => setActiveKeyStr('balances')}\r\n          style={{\r\n            height: 42,\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            border: 'transparent',\r\n            borderBottom:\r\n              activeKeyStr === 'balances' ? '2px solid #5AC4BE' : '',\r\n            background: 'transparent',\r\n            fontSize: 14,\r\n            fontStyle: 'normal',\r\n            fontWeight: 600,\r\n            color:\r\n              activeKeyStr === 'balances'\r\n                ? '#F1F1F2'\r\n                : 'rgba(241, 241, 242, 0.5)',\r\n            padding: '12px 0 12px',\r\n          }}\r\n        >\r\n          Balances\r\n        </Col>\r\n        {market && market.supportsSrmFeeDiscounts ? (\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('fees')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: activeKeyStr === 'fees' ? '2px solid #5AC4BE' : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'fees'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Fee discounts\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n      <div\r\n        style={{\r\n          border: '1px solid #1C274F',\r\n          height: 400,\r\n          borderBottom: '',\r\n          padding: 16,\r\n        }}\r\n      >\r\n        {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\r\n        {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\r\n        {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\r\n        {activeKeyStr && activeKeyStr === 'fees' ? <FeesTable /> : null}\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OpenOrdersTab = () => {\r\n  const openOrders = useOpenOrders();\r\n\r\n  return <OpenOrderTable openOrders={openOrders} />;\r\n};\r\n\r\nconst BalancesTab = () => {\r\n  const balances = useBalances();\r\n\r\n  return <BalancesTable balances={balances} />;\r\n};\r\n","import { Button, Col, Popover, Row, Select, Typography } from 'antd';\r\nimport {\r\n  DeleteOutlined,\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  MarketProvider,\r\n  getMarketInfos,\r\n  getTradePageUrl,\r\n  useMarket,\r\n  useMarketsList,\r\n  useUnmigratedDeprecatedMarkets,\r\n} from '../utils/markets';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport CustomMarketDialog from '../components/CustomMarketDialog';\r\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\r\nimport LinkAddress from '../components/LinkAddress';\r\nimport { MarketInfo } from '../utils/types';\r\nimport Orderbook from '../components/Orderbook';\r\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\r\nimport { TVChartContainer } from '../components/TradingView'\r\nimport TradeForm from '../components/TradeForm';\r\nimport TradesTable from '../components/TradesTable';\r\nimport UserInfoTable from '../components/UserInfoTable';\r\nimport { notify } from '../utils/notifications';\r\nimport styled from 'styled-components';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  };\r\n`;\r\n\r\nexport default function TradePage() {\r\n  const { marketAddress } = useParams();\r\n  useEffect(() => {\r\n    if (marketAddress) {\r\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\r\n    }\r\n  }, [marketAddress]);\r\n  const history = useHistory();\r\n  function setMarketAddress(address) {\r\n    history.push(getTradePageUrl(address));\r\n  }\r\n\r\n  return (\r\n    <MarketProvider\r\n      marketAddress={marketAddress}\r\n      setMarketAddress={setMarketAddress}\r\n    >\r\n      <TradePageInner />\r\n    </MarketProvider>\r\n  );\r\n}\r\n\r\nfunction TradePageInner() {\r\n  const {\r\n    market,\r\n    marketName,\r\n    customMarkets,\r\n    setCustomMarkets,\r\n    setMarketAddress,\r\n  } = useMarket();\r\n  const markets = useMarketsList();\r\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\r\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\r\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = marketName ? `${marketName} — Raydium` : 'Raydium';\r\n  }, [marketName]);\r\n\r\n  const changeOrderRef = useRef<\r\n    ({ size, price }: { size?: number; price?: number }) => void\r\n    >();\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const width = dimensions?.width;\r\n  const componentProps = {\r\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\r\n    onPrice: useCallback(\r\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\r\n      [],\r\n    ),\r\n    onSize: useCallback(\r\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\r\n      [],\r\n    ),\r\n  };\r\n  const component = (() => {\r\n    if (handleDeprecated) {\r\n      return (\r\n        <DeprecatedMarketsPage\r\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\r\n        />\r\n      );\r\n    } else if (width < 1000) {\r\n      return <RenderSmaller {...componentProps} />;\r\n    } else if (width < 1450) {\r\n      return <RenderSmall {...componentProps} />;\r\n    } else {\r\n      return <RenderNormal {...componentProps} />;\r\n    }\r\n  })();\r\n\r\n  const onAddCustomMarket = (customMarket) => {\r\n    const marketInfo = getMarketInfos(customMarkets).some(\r\n      (m) => m.address.toBase58() === customMarket.address,\r\n    );\r\n    if (marketInfo) {\r\n      notify({\r\n        message: `A market with the given ID already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newCustomMarkets = [...customMarkets, customMarket];\r\n    setCustomMarkets(newCustomMarkets);\r\n    setMarketAddress(customMarket.address);\r\n  };\r\n\r\n  const onDeleteCustomMarket = (address) => {\r\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\r\n    setCustomMarkets(newCustomMarkets);\r\n  };\r\n  const [newMarKets, setNewMarkets] = useState(markets);\r\n\r\n  return (\r\n    <>\r\n      <CustomMarketDialog\r\n        visible={addMarketVisible}\r\n        onClose={() => setAddMarketVisible(false)}\r\n        onAddCustomMarket={onAddCustomMarket}\r\n      />\r\n      <Wrapper>\r\n        <Row\r\n          align=\"middle\"\r\n          style={{ paddingLeft: 5, paddingRight: 5, height: 64 }}\r\n          gutter={16}\r\n        >\r\n          <Col>\r\n            <MarketSelector\r\n              markets={newMarKets}\r\n              setHandleDeprecated={setHandleDeprecated}\r\n              placeholder={'Select market'}\r\n              customMarkets={customMarkets}\r\n              onDeleteCustomMarket={onDeleteCustomMarket}\r\n            />\r\n          </Col>\r\n          {market ? (\r\n            <Col>\r\n              <Popover\r\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\r\n                placement=\"bottomRight\"\r\n                title=\"Market address\"\r\n                trigger=\"click\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n          ) : null}\r\n          <Col>\r\n            <PlusCircleOutlined\r\n              style={{ color: '#2abdd2' }}\r\n              onClick={() => setAddMarketVisible(true)}\r\n            />\r\n          </Col>\r\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\r\n            <React.Fragment>\r\n              <Col>\r\n                <Typography>\r\n                  You have unsettled funds on old markets! Please go through\r\n                  them to claim your funds.\r\n                </Typography>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\r\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\r\n                </Button>\r\n              </Col>\r\n            </React.Fragment>\r\n          )}\r\n        </Row>\r\n        {component}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarketSelector({\r\n                          markets,\r\n                          placeholder,\r\n                          setHandleDeprecated,\r\n                          customMarkets,\r\n                          onDeleteCustomMarket,\r\n                        }) {\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const onSetMarketAddress = (marketAddress) => {\r\n    setHandleDeprecated(false);\r\n    setMarketAddress(marketAddress);\r\n  };\r\n\r\n  const extractBase = (a) => a.split('/')[0];\r\n  const extractQuote = (a) => a.split('/')[1];\r\n\r\n  const selectedMarket = getMarketInfos(customMarkets)\r\n    .find(\r\n      (proposedMarket) =>\r\n        market?.address && proposedMarket.address.equals(market.address),\r\n    )\r\n    ?.address?.toBase58();\r\n\r\n  const uniqueArray = (arr) => {\r\n    let addList: string[] = [];\r\n    let reList: MarketInfo[] = [];\r\n    for (let index = 0; index < arr.length; index += 1) {\r\n      if (addList.indexOf(arr[index].address.toBase58()) === -1) {\r\n        reList.push(arr[index]);\r\n        addList.push(arr[index].address.toBase58());\r\n      }\r\n    }\r\n    return reList\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      size={'large'}\r\n      bordered={false}\r\n      style={{ width: 360, border: 1 }}\r\n      placeholder={placeholder || 'Select a market'}\r\n      optionFilterProp=\"name\"\r\n      onSelect={onSetMarketAddress}\r\n      listHeight={400}\r\n      value={selectedMarket}\r\n      filterOption={(input, option) =>\r\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {customMarkets && customMarkets.length > 0 && (\r\n        <OptGroup label=\"Custom\">\r\n          {customMarkets.map(({ address, name }, i) => (\r\n            <Option\r\n              value={address}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col flex=\"auto\">{name}</Col>\r\n                {selectedMarket !== address && (\r\n                  <Col>\r\n                    <DeleteOutlined\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.nativeEvent.stopImmediatePropagation();\r\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Option>\r\n          ))}\r\n        </OptGroup>\r\n      )}\r\n      <OptGroup label=\"Markets\">\r\n        {uniqueArray(markets)\r\n          // .sort((a, b) =>\r\n          //   extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\r\n          //     ? -1\r\n          //     : extractQuote(a.name) !== 'USDT' &&\r\n          //     extractQuote(b.name) === 'USDT'\r\n          //     ? 1\r\n          //     : 0,\r\n          // )\r\n          // .sort((a, b) =>\r\n          //   extractBase(a.name) < extractBase(b.name)\r\n          //     ? -1\r\n          //     : extractBase(a.name) > extractBase(b.name)\r\n          //     ? 1\r\n          //     : 0,\r\n          // )\r\n          .map(({ address, name, deprecated }, i) => (\r\n            <Option\r\n              value={address.toBase58()}\r\n              key={address.toBase58()}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              {name} {deprecated ? ' (Deprecated)' : null}\r\n            </Option>\r\n          ))}\r\n      </OptGroup>\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <DeprecatedMarketsInstructions\r\n            switchToLiveMarkets={switchToLiveMarkets}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        minHeight: '900px',\r\n        flexWrap: 'nowrap',\r\n      }}\r\n    >\r\n      <Col\r\n        flex=\"360px\"\r\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        <StandaloneBalancesDisplay />\r\n      </Col>\r\n\r\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        <TVChartContainer />\r\n        <UserInfoTable />\r\n      </Col>\r\n\r\n      <Col flex={'360px'} style={{ height: '100%' }}>\r\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\r\n        <TradesTable smallScreen={false} />\r\n      </Col>\r\n\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          height: '900px',\r\n        }}\r\n      >\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook\r\n            smallScreen={true}\r\n            depth={13}\r\n            onPrice={onPrice}\r\n            onSize={onSize}\r\n          />\r\n        </Col>\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n        <Col\r\n          flex=\"360px\"\r\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n        >\r\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          height: '500px',\r\n        }}\r\n      >\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\r\n        </Col>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button, Popover } from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useWallet } from '../utils/wallet';\r\nimport LinkAddress from './LinkAddress';\r\n\r\nexport default function WalletConnect() {\r\n  const { connected, wallet } = useWallet();\r\n  const publicKey = wallet?.publicKey?.toBase58();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        type=\"text\"\r\n        size=\"large\"\r\n        onClick={connected ? wallet.disconnect : wallet.connect}\r\n        style={{ color: '#FFF', width: 160, background: 'RGB(26,43,67)', height: 50, borderRadius: 4 }}\r\n      >\r\n        {/*<UserOutlined />*/}\r\n        {!connected ? 'CONNECT WALLET' : 'Disconnect'}\r\n      </Button>\r\n      {connected && (\r\n        <Popover\r\n          content={<LinkAddress address={publicKey} />}\r\n          placement=\"bottomRight\"\r\n          title=\"Wallet public key\"\r\n          trigger=\"click\"\r\n        >\r\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n        </Popover>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport {\r\n  useAllMarkets,\r\n  useAllOpenOrders,\r\n  useMarketInfos,\r\n} from '../utils/markets';\r\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\r\nimport { Button, Row } from 'antd';\r\nimport { OrderWithMarketAndMarketName } from '../utils/types';\r\nimport { useWallet } from '../utils/wallet';\r\nimport WalletConnect from '../components/WalletConnect';\r\n\r\nexport default function OpenOrdersPage() {\r\n  const { connected } = useWallet();\r\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\r\n  let marketInfos = useMarketInfos();\r\n  let marketAddressesToNames = Object.fromEntries(\r\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\r\n  );\r\n  let [allMarkets] = useAllMarkets();\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((marketInfo) => [\r\n      marketInfo.market.address.toBase58(),\r\n      marketInfo.market,\r\n    ]),\r\n  );\r\n\r\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\r\n    .map((orderInfos) =>\r\n      orderInfos.orders.map((order) => {\r\n        return {\r\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\r\n          market: marketsByAddress[orderInfos.marketAddress],\r\n          ...order,\r\n        };\r\n      }),\r\n    )\r\n    .flat();\r\n\r\n  if (!connected) {\r\n    return (\r\n      <Row\r\n        justify=\"center\"\r\n        style={{\r\n          marginTop: '10%',\r\n        }}\r\n      >\r\n        <WalletConnect />\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\r\n        Refresh\r\n      </Button>\r\n      <OpenOrderTable\r\n        openOrders={dataSource}\r\n        pageSize={25}\r\n        loading={!loaded}\r\n        onCancelSuccess={refreshOpenOrders}\r\n        marketFilter\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\nimport { Button, Row } from 'antd';\r\nimport { settleAllFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\nimport { useConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useSelectedTokenAccounts,\r\n  useTokenAccounts,\r\n} from '../../utils/markets';\r\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\r\nimport { abbreviateAddress } from '../../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport default function WalletBalancesTable({\r\n  walletBalances,\r\n}: {\r\n  walletBalances: {\r\n    coin: string;\r\n    mint: string;\r\n    walletBalance: number;\r\n    openOrdersFree: number;\r\n    openOrdersTotal: number;\r\n  }[];\r\n}) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\r\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\r\n  const [settlingFunds, setSettlingFunds] = useState(false);\r\n\r\n  async function onSettleFunds() {\r\n    setSettlingFunds(true);\r\n    try {\r\n      if (!tokenAccounts || !tokenAccountsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'TokenAccounts not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      if (!allMarkets || !allMarketsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'Markets not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      await settleAllFunds({\r\n        connection,\r\n        tokenAccounts,\r\n        selectedTokenAccounts,\r\n        wallet,\r\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSettlingFunds(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Coin',\r\n      key: 'coin',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\">\r\n          <a\r\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\r\n            target={'_blank'}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {walletBalance.coin ||\r\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\r\n          </a>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Wallet Balance',\r\n      dataIndex: 'walletBalance',\r\n      key: 'walletBalance',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Open orders total balances',\r\n      dataIndex: 'openOrdersTotal',\r\n      key: 'openOrdersTotal',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Unsettled balances',\r\n      dataIndex: 'openOrdersFree',\r\n      key: 'openOrdersFree',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Selected token account',\r\n      key: 'selectTokenAccount',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\" style={{ width: '430px' }}>\r\n          <StandaloneTokenAccountsSelect\r\n            accounts={tokenAccounts?.filter(\r\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\r\n            )}\r\n            mint={walletBalance.mint}\r\n          />\r\n        </Row>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <DataTable\r\n        emptyLabel=\"No balances\"\r\n        dataSource={walletBalances}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n      {connected && (\r\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\r\n          Settle all funds\r\n        </Button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  useAllOpenOrdersBalances,\r\n  useWalletBalancesForAllMarkets,\r\n} from '../utils/markets';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\r\nimport { useMintToTickers } from '../utils/tokens';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function BalancesPage() {\r\n  const walletBalances = useWalletBalancesForAllMarkets();\r\n  const mintToTickers = useMintToTickers();\r\n  const openOrdersBalances = useAllOpenOrdersBalances();\r\n\r\n  const data = (walletBalances || []).map((balance) => {\r\n    const balances = {\r\n      coin: mintToTickers[balance.mint],\r\n      mint: balance.mint,\r\n      walletBalance: balance.balance,\r\n      openOrdersFree: 0,\r\n      openOrdersTotal: 0,\r\n    };\r\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\r\n      balances['openOrdersFree'] += openOrdersAccount.free;\r\n      balances['openOrdersTotal'] += openOrdersAccount.total;\r\n    }\r\n    return balances;\r\n  });\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Tabs defaultActiveKey=\"walletBalances\">\r\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\r\n          <WalletBalancesTable walletBalances={data} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Orderbook } from '@project-serum/serum';\r\nimport {\r\n  getExpectedFillPrice,\r\n  getMarketDetails,\r\n  getMarketInfos,\r\n  getMarketOrderPrice,\r\n  getSelectedTokenAccountForMint,\r\n  MarketProvider,\r\n  useBalances,\r\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\r\n  useMarket,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { useConnection, useSendConnection } from '../utils/connection';\r\nimport { placeOrder } from '../utils/send';\r\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport WalletConnect from './WalletConnect';\r\nimport { SwapOutlined } from '@ant-design/icons';\r\nimport { CustomMarketInfo } from '../utils/types';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nconst ConvertButton = styled(Button)`\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nexport default function ConvertForm() {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useCustomMarkets();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\r\n\r\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\r\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\r\n  const [size, setSize] = useState<number | undefined>(undefined);\r\n\r\n  const marketInfosbyName = Object.fromEntries(\r\n    marketInfos.map((market) => [market.name, market]),\r\n  );\r\n\r\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\r\n  Object.keys(marketInfosbyName).forEach((market) => {\r\n    let [base, quote] = market.split('/');\r\n    !tokenConvertMap.has(base)\r\n      ? tokenConvertMap.set(base, new Set([quote]))\r\n      : tokenConvertMap.set(\r\n          base,\r\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\r\n        );\r\n    !tokenConvertMap.has(quote)\r\n      ? tokenConvertMap.set(quote, new Set([base]))\r\n      : tokenConvertMap.set(\r\n          quote,\r\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\r\n        );\r\n  });\r\n\r\n  const setMarket = (toToken) => {\r\n    const marketInfo = marketInfos\r\n      .filter((marketInfo) => !marketInfo.deprecated)\r\n      .find(\r\n        (marketInfo) =>\r\n          marketInfo.name === `${fromToken}/${toToken}` ||\r\n          marketInfo.name === `${toToken}/${fromToken}`,\r\n      );\r\n    if (!marketInfo) {\r\n      console.warn(\r\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\r\n      );\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    setMarketAddress(marketInfo.address.toBase58());\r\n    setToToken(toToken);\r\n  };\r\n\r\n  return (\r\n    <FloatingElement style={{ maxWidth: 500 }}>\r\n      <Title level={3}>Convert</Title>\r\n      {!connected && (\r\n        <Row justify=\"center\">\r\n          <Col>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {tokenConvertMap && connected && (\r\n        <>\r\n          <Row style={{ marginBottom: 8 }}>\r\n            <Col>\r\n              <Select\r\n                style={{ minWidth: 300 }}\r\n                placeholder=\"Select a token\"\r\n                value={fromToken}\r\n                onChange={(token) => {\r\n                  setFromToken(token);\r\n                  setToToken(undefined);\r\n                }}\r\n              >\r\n                {Array.from(tokenConvertMap.keys()).map((token) => (\r\n                  <Option value={token} key={token}>\r\n                    {token}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          {fromToken && (\r\n            <Row style={{ marginBottom: 8 }}>\r\n              <Col>\r\n                <Select\r\n                  style={{ minWidth: 300 }}\r\n                  value={toToken}\r\n                  onChange={setMarket}\r\n                >\r\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\r\n                    <Option value={token} key={token}>\r\n                      {token}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {fromToken && toToken && (\r\n            <MarketProvider\r\n              marketAddress={marketAddress}\r\n              setMarketAddress={setMarketAddress}\r\n            >\r\n              <ConvertFormSubmit\r\n                size={size}\r\n                setSize={setSize}\r\n                fromToken={fromToken}\r\n                toToken={toToken}\r\n                wallet={wallet}\r\n                customMarkets={customMarkets}\r\n              />\r\n            </MarketProvider>\r\n          )}\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction ConvertFormSubmit({\r\n  size,\r\n  setSize,\r\n  fromToken,\r\n  toToken,\r\n  wallet,\r\n  customMarkets,\r\n}: {\r\n  size: number | null | undefined;\r\n  setSize: (newSize: number | undefined) => void;\r\n  fromToken: string;\r\n  toToken: string;\r\n  wallet: Wallet;\r\n  customMarkets: CustomMarketInfo[];\r\n}) {\r\n  const { market } = useMarket();\r\n  const [accounts] = useTokenAccounts();\r\n  const balances = useBalances();\r\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\r\n  const [toAmount, setToAmount] = useState<number | undefined>();\r\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n\r\n  const connection = useConnection();\r\n  const sendConnection = useSendConnection();\r\n\r\n  const [isConverting, setIsConverting] = useState(false);\r\n\r\n  const isFromTokenBaseOfMarket = (market) => {\r\n    const { marketName } = getMarketDetails(market, customMarkets);\r\n    if (!marketName) {\r\n      throw Error(\r\n        'Cannot determine if coin is quote or base because marketName is missing',\r\n      );\r\n    }\r\n    const [base] = marketName.split('/');\r\n    return fromToken === base;\r\n  };\r\n\r\n  const onConvert = async () => {\r\n    if (!market) {\r\n      console.warn('Market is null when attempting convert.');\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    // get accounts\r\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.baseMintAddress,\r\n    );\r\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.quoteMintAddress,\r\n    );\r\n\r\n    // get approximate price\r\n    let side;\r\n    try {\r\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const sidedOrderbookAccount =\r\n      // @ts-ignore\r\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n    const orderbookData = await connection.getAccountInfo(\r\n      sidedOrderbookAccount,\r\n    );\r\n    if (!orderbookData?.data) {\r\n      notify({ message: 'Invalid orderbook data', type: 'error' });\r\n      return;\r\n    }\r\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n    const [bbo] =\r\n      decodedOrderbookData &&\r\n      decodedOrderbookData.getL2(1).map(([price]) => price);\r\n    if (!bbo) {\r\n      notify({ message: 'No best price found', type: 'error' });\r\n      return;\r\n    }\r\n    if (!size) {\r\n      notify({ message: 'Size not specified', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n    const parsedPrice = getMarketOrderPrice(\r\n      decodedOrderbookData,\r\n      size,\r\n      tickSizeDecimals,\r\n    );\r\n\r\n    // round size\r\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\r\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\r\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\r\n\r\n    setIsConverting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price: parsedPrice,\r\n        size: parsedSize,\r\n        orderType: 'ioc',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n        feeDiscountPubkey: feeDiscountKey,\r\n      });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsConverting(false);\r\n    }\r\n  };\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n      const sidedOrderbookAccount =\r\n        // @ts-ignore\r\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n      const orderbookData = await connection.getAccountInfo(\r\n        sidedOrderbookAccount,\r\n      );\r\n      if (!orderbookData?.data || !market) {\r\n        return [null, null];\r\n      }\r\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n      const [bbo] =\r\n        decodedOrderbookData &&\r\n        decodedOrderbookData.getL2(1).map(([price]) => price);\r\n      if (!bbo || !size) {\r\n        return [null, null];\r\n      }\r\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n      const expectedPrice = getExpectedFillPrice(\r\n        decodedOrderbookData,\r\n        size,\r\n        tickSizeDecimals,\r\n      );\r\n      if (side === 'buy') {\r\n        return [expectedPrice.toFixed(6), 1];\r\n      } else {\r\n        return [1, expectedPrice.toFixed(6)];\r\n      }\r\n    } catch (e) {\r\n      console.log(`Got error ${e}`);\r\n      return [null, null];\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      getPrice().then(([fromAmount, toAmount]) => {\r\n        setFromAmount(fromAmount || undefined);\r\n        setToAmount(toAmount || undefined);\r\n      });\r\n    },\r\n    // eslint-disable-next-line\r\n    [market?.address.toBase58(), size],\r\n  );\r\n\r\n  const canConvert = market && size && size > 0;\r\n  const balance = balances.find(\r\n    (coinBalance) => coinBalance.coin === fromToken,\r\n  );\r\n  const availableBalance =\r\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col>\r\n          <Input\r\n            style={{ minWidth: 300 }}\r\n            addonBefore={`Size (${fromToken})`}\r\n            placeholder=\"Size\"\r\n            value={size === null ? undefined : size}\r\n            type=\"number\"\r\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={12} style={{ marginBottom: 8 }}>\r\n        <Col span={12}>\r\n          <ActionButton\r\n            block\r\n            size=\"large\"\r\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\r\n          >\r\n            Max: {availableBalance.toFixed(4)}\r\n          </ActionButton>\r\n        </Col>\r\n        <Col span={12}>\r\n          <ConvertButton\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isConverting}\r\n            onClick={onConvert}\r\n            disabled={!canConvert}\r\n          >\r\n            Convert\r\n          </ConvertButton>\r\n        </Col>\r\n      </Row>\r\n      {canConvert && (\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col>\r\n            {fromAmount} {fromToken}\r\n          </Col>\r\n          <Col offset={1}>\r\n            <SwapOutlined />\r\n          </Col>\r\n          <Col offset={1}>\r\n            {toAmount} {toToken}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\r\nimport { useLocalStorageState } from '../utils/utils';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function ConvertPage() {\r\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\r\n    'marketAddress',\r\n    DEFAULT_MARKET?.address.toBase58(),\r\n  );\r\n  return (\r\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <MarketProvider\r\n            marketAddress={marketAddress}\r\n            setMarketAddress={setMarketAddress}\r\n          >\r\n            <ConvertForm />\r\n          </MarketProvider>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Col, Input, Modal, Row } from 'antd';\r\nimport { EndpointInfo } from '../utils/types';\r\n\r\nexport default function CustomClusterEndpointDialog({\r\n  visible,\r\n  testingConnection,\r\n  onAddCustomEndpoint,\r\n  onClose,\r\n}: {\r\n  visible: boolean;\r\n  testingConnection: boolean;\r\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\r\n  onClose?: () => void;\r\n}) {\r\n  const [customEndpoint, setCustomEndpoint] = useState('');\r\n  const [customEndpointName, setCustomEndpointName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const fullEndpoint = 'https://' + customEndpoint;\r\n    const params = {\r\n      name: customEndpointName,\r\n      endpoint: fullEndpoint,\r\n      custom: true,\r\n    };\r\n    onAddCustomEndpoint(params);\r\n    onDoClose();\r\n  };\r\n  const onDoClose = () => {\r\n    setCustomEndpoint('');\r\n    setCustomEndpointName('');\r\n    onClose && onClose();\r\n  };\r\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom endpoint'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\r\n    >\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Name\"\r\n            value={customEndpointName}\r\n            onChange={(e) => setCustomEndpointName(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Endpoint\"\r\n            value={customEndpoint}\r\n            addonBefore={'https://'}\r\n            onChange={(e) => setCustomEndpoint(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { Button, Col, Menu, Popover, Row, Select, Dropdown } from 'antd';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport logo from '../assets/logo.svg';\r\nimport styled from 'styled-components';\r\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\r\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\r\nimport Settings from './Settings';\r\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\r\nimport { EndpointInfo } from '../utils/types';\r\nimport { notify } from '../utils/notifications';\r\nimport { Connection } from '@solana/web3.js';\r\nimport WalletConnect from './WalletConnect';\r\nimport AppSearch from './AppSearch';\r\nimport { getTradePageUrl } from '../utils/markets';\r\n\r\nconst Wrapper = styled.div`\r\n  // flex-direction: row;\r\n  // justify-content: flex-end;\r\n  // flex-wrap: wrap;\r\n`;\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #2abdd2;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  img {\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst EXTERNAL_LINKS = {\r\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\r\n  '/add-market': 'https://serum-academy.com/en/add-market/',\r\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\r\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\r\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\r\n  '/explorer': 'https://explorer.solana.com',\r\n  '/srm-faq': 'https://projectserum.com/srm-faq',\r\n  '/swap': 'https://raydium.io/swap',\r\n  '/liquidity': 'https://raydium.io/liquidity',\r\n  '/farms': 'https://raydium.io/farms',\r\n  '/staking': 'https://raydium.io/staking',\r\n  '/migrate': 'https://raydium.io/migrate',\r\n  '/info': 'https://raydium.io/info',\r\n};\r\n\r\nexport default function TopBar() {\r\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\r\n  const {\r\n    endpoint,\r\n    endpointInfo,\r\n    setEndpoint,\r\n    availableEndpoints,\r\n    setCustomEndpoints,\r\n  } = useConnectionConfig();\r\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\r\n  const [testingConnection, setTestingConnection] = useState(false);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchFocussed, setSearchFocussed] = useState(false);\r\n\r\n  const handleClick = useCallback(\r\n    (e) => {\r\n      if (!(e.key in EXTERNAL_LINKS)) {\r\n        history.push(e.key);\r\n      }\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\r\n    const existingEndpoint = availableEndpoints.some(\r\n      (e) => e.endpoint === info.endpoint,\r\n    );\r\n    if (existingEndpoint) {\r\n      notify({\r\n        message: `An endpoint with the given url already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const handleError = (e) => {\r\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\r\n      notify({\r\n        message: `Failed to connect to ${info.endpoint}`,\r\n        type: 'error',\r\n      });\r\n    };\r\n\r\n    try {\r\n      const connection = new Connection(info.endpoint, 'recent');\r\n      connection\r\n        .getEpochInfo()\r\n        .then((result) => {\r\n          setTestingConnection(true);\r\n          console.log(`testing connection to ${info.endpoint}`);\r\n          const newCustomEndpoints = [\r\n            ...availableEndpoints.filter((e) => e.custom),\r\n            info,\r\n          ];\r\n          setEndpoint(info.endpoint);\r\n          setCustomEndpoints(newCustomEndpoints);\r\n        })\r\n        .catch(handleError);\r\n    } catch (e) {\r\n      handleError(e);\r\n    } finally {\r\n      setTestingConnection(false);\r\n    }\r\n  };\r\n\r\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      if (endpointInfoCustom) {\r\n        setEndpoint(ENDPOINTS[0].endpoint);\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handler);\r\n    return () => window.removeEventListener('beforeunload', handler);\r\n  }, [endpointInfoCustom, setEndpoint]);\r\n\r\n  const tradePageUrl = location.pathname.startsWith('/market/')\r\n    ? location.pathname\r\n    : getTradePageUrl();\r\n\r\n  return (\r\n    <>\r\n      <CustomClusterEndpointDialog\r\n        visible={addEndpointVisible}\r\n        testingConnection={testingConnection}\r\n        onAddCustomEndpoint={onAddCustomEndpoint}\r\n        onClose={() => setAddEndpointVisible(false)}\r\n      />\r\n      <Wrapper style={{ background: '#0F1429'}}>\r\n        <Row wrap={false} style={{ paddingTop: 25, height: 70 }}>\r\n          <Col flex=\"none\">\r\n            <LogoWrapper onClick={() => history.push(tradePageUrl)}>\r\n              <img src={logo} alt=\"\" style={{ width: 145, height: 40}} />\r\n            </LogoWrapper>\r\n          </Col>\r\n          <Col flex=\"auto\" style={{ textAlign: 'center'}}>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  borderBottom: '1px solid RGB(194,0,251)',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                TRADING\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/swap']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Swap\r\n                </a>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/liquidity']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Liquidity\r\n                </a>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: 50,\r\n                  width: 100,\r\n                  textAlign: 'center',\r\n                  border: 'transparent',\r\n                  background: 'transparent',\r\n                  fontSize: 14,\r\n                  fontStyle: 'normal',\r\n                  fontWeight: 600,\r\n                  color: 'rgb(173,175,184)',\r\n                  display: 'inline-block',\r\n                }}\r\n              >\r\n                <a\r\n                  href={EXTERNAL_LINKS['/farms']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{ color : 'rgb(173,175,184)',}}\r\n                >\r\n                  Farms\r\n                </a>\r\n              </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/staking']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Staking\r\n              </a>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/migrate']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Migrate\r\n              </a>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 50,\r\n                width: 100,\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color: 'rgb(173,175,184)',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <a\r\n                href={EXTERNAL_LINKS['/info']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ color : 'rgb(173,175,184)',}}\r\n              >\r\n                Info\r\n              </a>\r\n            </div>\r\n          </Col>\r\n          <Col flex=\"none\" style={{ paddingRight: 20}}>\r\n            <WalletConnect />\r\n          </Col>\r\n          <Col flex=\"none\"\r\n               style={{\r\n                 padding: 20,\r\n                 paddingTop: 5\r\n               }}>\r\n            {/*<SettingOutlined style={{ fontSize: 30, color: 'white', }} onClick={() => { console.log('click')}}/>*/}\r\n\r\n            <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    <Select\r\n                      onSelect={setEndpoint}\r\n                      value={endpoint}\r\n                      style={{ marginRight: 8, width: '150px' }}\r\n                    >\r\n                      {availableEndpoints.map(({ name, endpoint }) => (\r\n                        <Select.Option value={endpoint} key={endpoint}>\r\n                          {name}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <Select onSelect={setProvider} value={providerUrl}>\r\n                      {WALLET_PROVIDERS.map(({ name, url }) => (\r\n                        <Select.Option value={url} key={url}>\r\n                          {name}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              placement=\"bottomRight\">\r\n              <SettingOutlined style={{ fontSize: 30, color: 'white', }}/>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","export const helpUrls = {\r\n  customerSupport: 'https://t.me/ProjectSerum',\r\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\r\n  contactEmail: 'mailto:contact@projectserum.com',\r\n  discord: 'https://discord.gg/EDvudv6',\r\n  telegram: 'https://t.me/ProjectSerum',\r\n  github: 'https://github.com/project-serum',\r\n  projectSerum: 'https://projectserum.com/',\r\n  developerResources: 'https://projectserum.com/developer-resources',\r\n  solanaBeach: 'https://solanabeach.io',\r\n};\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Grid } from 'antd';\r\nimport Link from './Link';\r\nimport { helpUrls } from './HelpUrls';\r\nconst { Footer } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst footerElements = [\r\n  {\r\n    description: 'Serum Developer Resources',\r\n    link: helpUrls.developerResources,\r\n  },\r\n  { description: 'Discord', link: helpUrls.discord },\r\n  { description: 'Telegram', link: helpUrls.telegram },\r\n  { description: 'GitHub', link: helpUrls.github },\r\n  { description: 'Project Serum', link: helpUrls.projectSerum },\r\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\r\n];\r\n\r\nexport const CustomFooter = () => {\r\n  const smallScreen = !useBreakpoint().lg;\r\n\r\n  return (\r\n    <Footer\r\n      style={{\r\n        height: '45px',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      }}\r\n    >\r\n      <Row align=\"middle\" gutter={[16, 4]}>\r\n        {!smallScreen && (\r\n          <>\r\n            <Col flex=\"auto\" />\r\n            {footerElements.map((elem, index) => {\r\n              return (\r\n                <Col key={index + ''}>\r\n                  <Link external to={elem.link}>\r\n                    {elem.description}\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\r\n      </Row>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport TopBa1r from './TopBar';\r\nimport { CustomFooter as Footer } from './Footer';\r\nconst { Header, Content } = Layout;\r\n\r\nexport default function BasicLayout({ children }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout\r\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\r\n      >\r\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\r\n          <TopBa1r />\r\n        </Header>\r\n        <Content style={{ flex: 1 }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport React, { ReactElement, useMemo, useState } from 'react';\r\nimport { useAccountInfo } from '../utils/connection';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\r\nimport { AutoComplete, Form, Tooltip } from 'antd';\r\nimport Link from './Link';\r\n\r\nexport interface MintInfo {\r\n  address: PublicKey;\r\n  decimals: number;\r\n}\r\n\r\nexport function useMintInput(\r\n  name,\r\n  label: string | ReactElement,\r\n  tooltip?: string | ReactElement,\r\n): [ReactElement, MintInfo | null] {\r\n  const [address, setAddress] = useState('');\r\n  const [accountInfo, loaded] = useAccountInfo(\r\n    isValidPublicKey(address) ? new PublicKey(address) : null,\r\n  );\r\n\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(address) ||\r\n          ticker.toLowerCase().includes(address.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, address]);\r\n\r\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\r\n    let validateStatus: ValidateStatus = '';\r\n    let hasFeedback = false;\r\n    let help: string | null = null;\r\n    let mintInfo: MintInfo | null = null;\r\n    if (address) {\r\n      hasFeedback = true;\r\n      if (accountInfo) {\r\n        if (\r\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\r\n          accountInfo.data.length === 82\r\n        ) {\r\n          let parsed = parseTokenMintData(accountInfo.data);\r\n          if (parsed.initialized) {\r\n            validateStatus = 'success';\r\n            mintInfo = {\r\n              address: new PublicKey(address),\r\n              decimals: parsed.decimals,\r\n            };\r\n          } else {\r\n            validateStatus = 'error';\r\n            help = 'Invalid SPL mint';\r\n          }\r\n        } else {\r\n          validateStatus = 'error';\r\n          help = 'Invalid SPL mint address';\r\n        }\r\n      } else if (isValidPublicKey(address) && !loaded) {\r\n        validateStatus = 'validating';\r\n      } else {\r\n        validateStatus = 'error';\r\n        help = 'Invalid Solana address';\r\n      }\r\n    }\r\n    return { validateStatus, hasFeedback, help, mintInfo };\r\n  }, [address, accountInfo, loaded]);\r\n\r\n  const input = (\r\n    <Form.Item\r\n      label={\r\n        <Tooltip\r\n          title={\r\n            <>\r\n              {tooltip} You can look up token mint addresses on{' '}\r\n              <Link external to=\"https://sollet.io\">\r\n                sollet.io\r\n              </Link>\r\n              .\r\n            </>\r\n          }\r\n        >\r\n          {label}\r\n        </Tooltip>\r\n      }\r\n      name={name}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={hasFeedback}\r\n      help={help}\r\n    >\r\n      <AutoComplete\r\n        options={options}\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n      />\r\n    </Form.Item>\r\n  );\r\n\r\n  return [input, mintInfo];\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { MARKETS } from '@project-serum/serum';\r\nimport { useConnection } from '../utils/connection';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { listMarket } from '../utils/send';\r\nimport { useMintInput } from '../components/useMintInput';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default function ListNewMarketPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseMintInput, baseMintInfo] = useMintInput(\r\n    'baseMint',\r\n    <Text>\r\n      Base Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. BTC solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\r\n  );\r\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\r\n    'quoteMint',\r\n    <Text>\r\n      Quote Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. USDT solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\r\n  );\r\n  const [lotSize, setLotSize] = useState('1');\r\n  const [tickSize, setTickSize] = useState('0.01');\r\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [listedMarket, setListedMarket] = useState(null);\r\n\r\n  let baseLotSize;\r\n  let quoteLotSize;\r\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\r\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\r\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\r\n      quoteLotSize = Math.round(\r\n        parseFloat(lotSize) *\r\n          10 ** quoteMintInfo.decimals *\r\n          parseFloat(tickSize),\r\n      );\r\n    }\r\n  }\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    !!baseMintInfo &&\r\n    !!quoteMintInfo &&\r\n    !!baseLotSize &&\r\n    !!quoteLotSize;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const marketAddress = await listMarket({\r\n        connection,\r\n        wallet,\r\n        baseMint: baseMintInfo.address,\r\n        quoteMint: quoteMintInfo.address,\r\n        baseLotSize,\r\n        quoteLotSize,\r\n        dexProgramId,\r\n      });\r\n      setListedMarket(marketAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error listing new market',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>List New Market</Title>\r\n        <Form\r\n          labelCol={{ span: 24 }}\r\n          wrapperCol={{ span: 24 }}\r\n          layout={'vertical'}\r\n          onFinish={onSubmit}\r\n        >\r\n          {baseMintInput}\r\n          {quoteMintInput}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\r\n                Minimum Order Size{' '}\r\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"lotSize\"\r\n            initialValue=\"1\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? baseLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={lotSize}\r\n              onChange={(e) => setLotSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\r\n                Tick Size{' '}\r\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"tickSize\"\r\n            initialValue=\"0.01\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? quoteLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={tickSize}\r\n              onChange={(e) => setTickSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {listedMarket ? (\r\n        <FloatingElement>\r\n          <Text>New market address: {listedMarket.toBase58()}</Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  AutoComplete,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Switch,\r\n  Tooltip,\r\n  Typography,\r\n} from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useConnection } from '../../utils/connection';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\r\nimport { useMintInput } from '../../components/useMintInput';\r\nimport { PoolTransactions } from '@project-serum/pool';\r\nimport { useTokenAccounts } from '../../utils/markets';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst AddRemoveTokenButtons = styled.div`\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\r\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\r\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\r\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\r\nconst PROGRAM_ID_OPTIONS = [\r\n  {\r\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\r\n    value: SIMPLE_POOL_PROGRAM_ID,\r\n  },\r\n  {\r\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\r\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\r\n  },\r\n];\r\n\r\nexport default function NewPoolPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [poolName, setPoolName] = useState('');\r\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\r\n  const [initialSupply, setInitialSupply] = useState('1');\r\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\r\n    { valid: false },\r\n    { valid: false },\r\n  ]);\r\n  const [adminControlled, setAdminControlled] = useState(false);\r\n  const [adminAddress, setAdminAddress] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\r\n      setAdminControlled(false);\r\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\r\n      setAdminControlled(true);\r\n    }\r\n  }, [programId]);\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      setAdminAddress(wallet.publicKey.toBase58());\r\n    }\r\n  }, [wallet, connected]);\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    poolName.trim() &&\r\n    programId &&\r\n    parseFloat(initialSupply) > 0 &&\r\n    initialAssets.every((asset) => asset.valid) &&\r\n    tokenAccounts &&\r\n    (adminAddress || !adminControlled);\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const assets = initialAssets as ValidInitialAsset[];\r\n      const [\r\n        poolAddress,\r\n        transactionsAndSigners,\r\n      ] = await PoolTransactions.initializeSimplePool({\r\n        connection,\r\n        programId: new PublicKey(programId),\r\n        poolName,\r\n        poolStateSpace: 1024,\r\n        poolMintDecimals: 6,\r\n        initialPoolMintSupply: new BN(\r\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\r\n        ),\r\n        assetMints: assets.map((asset) => asset.mint),\r\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\r\n        creator: wallet.publicKey,\r\n        creatorAssets: assets.map((asset) => {\r\n          const found = tokenAccounts?.find((tokenAccount) =>\r\n            tokenAccount.effectiveMint.equals(asset.mint),\r\n          );\r\n          if (!found) {\r\n            throw new Error('No token account for ' + asset.mint.toBase58());\r\n          }\r\n          return found.pubkey;\r\n        }),\r\n        additionalAccounts: adminControlled\r\n          ? [\r\n              {\r\n                pubkey: new PublicKey(adminAddress),\r\n                isSigner: false,\r\n                isWritable: false,\r\n              },\r\n            ]\r\n          : [],\r\n      });\r\n      const signed = await signTransactions({\r\n        transactionsAndSigners,\r\n        wallet,\r\n        connection,\r\n      });\r\n      for (let signedTransaction of signed) {\r\n        await sendSignedTransaction({ signedTransaction, connection });\r\n      }\r\n      setNewPoolAddress(poolAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error creating new pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>Create new pool</Title>\r\n        <Form layout=\"vertical\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\r\n            }\r\n            name=\"name\"\r\n          >\r\n            <Input\r\n              value={poolName}\r\n              onChange={(e) => setPoolName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Address of the pool program.\">\r\n                Program ID{' '}\r\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"programId\"\r\n            initialValue={DEFAULT_PROGRAM_ID}\r\n          >\r\n            <AutoComplete\r\n              value={programId}\r\n              onChange={(value) => setProgramId(value)}\r\n              options={PROGRAM_ID_OPTIONS}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\r\n                Initial Pool Token Supply\r\n              </Tooltip>\r\n            }\r\n            name=\"initialSupply\"\r\n            initialValue=\"1\"\r\n          >\r\n            <Input\r\n              value={initialSupply}\r\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <AddRemoveTokenButtons>\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.concat({ valid: false }))\r\n              }\r\n            >\r\n              Add token\r\n            </Button>{' '}\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\r\n              }\r\n              disabled={initialAssets.length <= 1}\r\n            >\r\n              Remove token\r\n            </Button>\r\n          </AddRemoveTokenButtons>\r\n          {initialAssets.map((asset, i) => (\r\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\r\n          ))}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\r\n                Admin Controlled\r\n              </Tooltip>\r\n            }\r\n            name=\"adminControlled\"\r\n          >\r\n            <Switch\r\n              checked={adminControlled}\r\n              onChange={(checked) => setAdminControlled(checked)}\r\n              disabled={\r\n                programId === SIMPLE_POOL_PROGRAM_ID ||\r\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\r\n              }\r\n            />\r\n          </Form.Item>\r\n          {adminControlled ? (\r\n            <Form.Item\r\n              label={\r\n                <Tooltip title=\"Address of the pool admin account.\">\r\n                  Admin Address\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Input\r\n                value={adminAddress}\r\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\r\n              />\r\n            </Form.Item>\r\n          ) : null}\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {newPoolAddress ? (\r\n        <FloatingElement>\r\n          <Text>\r\n            New pool address:{' '}\r\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\r\n              {newPoolAddress.toBase58()}\r\n            </Link>\r\n          </Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\ntype InitialAsset = { valid: false } | ValidInitialAsset;\r\ninterface ValidInitialAsset {\r\n  valid: true;\r\n  mint: PublicKey;\r\n  quantity: number;\r\n}\r\n\r\nfunction AssetInput({ setInitialAssets, index }) {\r\n  const [mintInput, mintInfo] = useMintInput(\r\n    `mint${index}`,\r\n    <Text>Token {index + 1} Mint Address</Text>,\r\n    <>Token mint address for token {index + 1}.</>,\r\n  );\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  useEffect(() => {\r\n    let change: InitialAsset;\r\n    if (mintInfo && parseFloat(quantity) >= 0) {\r\n      let parsedQuantity = Math.round(\r\n        10 ** mintInfo.decimals * parseFloat(quantity),\r\n      );\r\n      change = {\r\n        mint: mintInfo.address,\r\n        quantity: parsedQuantity,\r\n        valid: true,\r\n      };\r\n    } else {\r\n      change = { valid: false };\r\n    }\r\n    setInitialAssets((assets: InitialAsset[]) =>\r\n      assets.map((old, i) => (i === index ? change : old)),\r\n    );\r\n  }, [setInitialAssets, index, mintInfo, quantity]);\r\n\r\n  return (\r\n    <>\r\n      {mintInput}\r\n      <Form.Item\r\n        label={\r\n          <Tooltip\r\n            title={\r\n              <>\r\n                Initial quantity of token {index + 1} to deposit into the pool.\r\n              </>\r\n            }\r\n          >\r\n            Token {index + 1} Initial Quantity\r\n          </Tooltip>\r\n        }\r\n        name={`quantity${index}`}\r\n        validateStatus={'success'}\r\n      >\r\n        <Input\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value.trim())}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"any\"\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { useMintToTickers } from '../utils/tokens';\r\nimport { Popover } from 'antd';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nexport function MintName({\r\n  mint,\r\n  showAddress = false,\r\n}: {\r\n  mint: string | PublicKey | null | undefined;\r\n  showAddress?: boolean;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  if (!mint) {\r\n    return null;\r\n  }\r\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\r\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\r\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\r\n\r\n  return (\r\n    <>\r\n      {ticker}\r\n      {showAddress ? (\r\n        <>\r\n          {' '}\r\n          <Popover\r\n            content={<LinkAddress address={mintAddress} />}\r\n            placement=\"bottomRight\"\r\n            title=\"Token mint\"\r\n            trigger=\"hover\"\r\n          >\r\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n          </Popover>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { Basket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport BN from 'bn.js';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport { Spin } from 'antd';\r\nimport { MintName } from '../../../components/MintName';\r\n\r\ninterface BasketDisplayProps {\r\n  poolInfo: PoolInfo;\r\n  basket?: Basket | null | undefined;\r\n}\r\n\r\nexport default function PoolBasketDisplay({\r\n  poolInfo,\r\n  basket,\r\n}: BasketDisplayProps) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => (\r\n        <BasketItem\r\n          key={index}\r\n          mint={asset.mint}\r\n          quantity={basket?.quantities[index]}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BasketItemProps {\r\n  mint: PublicKey;\r\n  quantity?: BN;\r\n}\r\n\r\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && quantity) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} <MintName mint={mint} showAddress />\r\n    </li>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\ninterface PoolInfoProps {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nconst feeFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 6,\r\n});\r\n\r\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\r\n  const connection = useConnection();\r\n\r\n  const [totalBasket] = useAsyncData(\r\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\r\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\r\n  );\r\n\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\r\n      <Paragraph>\r\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Pool token mint address:{' '}\r\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\r\n      </Paragraph>\r\n      {poolInfo.state.adminKey ? (\r\n        <Paragraph>\r\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\r\n        </Paragraph>\r\n      ) : null}\r\n      <Paragraph>\r\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\r\n      </Paragraph>\r\n      <Text>Total assets:</Text>\r\n      <div>\r\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\r\nimport React, { useMemo, useState } from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../../utils/notifications';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\ninterface PoolCreateRedeemPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nexport default function PoolCreateRedeemPanel({\r\n  poolInfo,\r\n  mintInfo,\r\n}: PoolCreateRedeemPanel) {\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Tabs>\r\n        <TabPane tab=\"Create\" key=\"create\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"create\"\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Redeem\" key=\"redeem\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"redeem\"\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface CreateRedeemInnerPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n  tab: string;\r\n}\r\n\r\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const action = useMemo(() => {\r\n    const parsedQuantity = Math.round(\r\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\r\n    );\r\n    if (parsedQuantity > 0) {\r\n      if (tab === 'create') {\r\n        return { create: new BN(parsedQuantity) };\r\n      } else {\r\n        return { redeem: new BN(parsedQuantity) };\r\n      }\r\n    }\r\n    return null;\r\n  }, [mintInfo.decimals, quantity, tab]);\r\n\r\n  const [basket, basketLoaded] = useAsyncData(\r\n    async () =>\r\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\r\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\r\n  );\r\n\r\n  function findTokenAccount(mint: PublicKey): PublicKey {\r\n    const account = tokenAccounts?.find((account) =>\r\n      account.effectiveMint.equals(mint),\r\n    );\r\n    if (account) {\r\n      return account.pubkey;\r\n    }\r\n    throw new Error('No token account for ' + mint.toBase58());\r\n  }\r\n\r\n  const canSubmit = connected && action && basket;\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!action || !basket || !connected || !canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const { transaction, signers } = PoolTransactions.execute(\r\n        poolInfo,\r\n        action,\r\n        {\r\n          owner: wallet.publicKey,\r\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\r\n          assetAccounts: poolInfo.state.assets.map((asset) =>\r\n            findTokenAccount(asset.mint),\r\n          ),\r\n        },\r\n        basket,\r\n      );\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message:\r\n          'Error ' +\r\n          (tab === 'create' ? 'creating' : 'redeeming') +\r\n          ' pool tokens',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <div>\r\n        {!basket ? (\r\n          basketLoaded ? null : (\r\n            <Spin />\r\n          )\r\n        ) : (\r\n          <>\r\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\r\n            <Text type=\"secondary\">(indicative only)</Text>\r\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        type=\"primary\"\r\n        disabled={!canSubmit || submitting}\r\n      >\r\n        {!connected ? 'Wallet not connected' : 'Submit'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import { PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport {\r\n  parseTokenAccountData,\r\n  parseTokenMintData,\r\n} from '../../../utils/tokens';\r\nimport { Button, Spin, Tabs } from 'antd';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { MintName } from '../../../components/MintName';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function PoolBalancesPanel({\r\n  poolInfo,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n}) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\r\n          <WalletBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\r\n          <PoolBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  return (\r\n    <ul>\r\n      {[\r\n        poolInfo.state.poolTokenMint,\r\n        ...poolInfo.state.assets.map((asset) => asset.mint),\r\n      ].map((mint, index) => {\r\n        const tokenAccount = tokenAccounts?.find((account) =>\r\n          account.effectiveMint.equals(mint),\r\n        );\r\n        if (!tokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={mint}\r\n            publicKey={tokenAccount.pubkey}\r\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => {\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={asset.mint}\r\n            publicKey={asset.vaultAddress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BalanceItemProps {\r\n  mint: PublicKey;\r\n  publicKey: PublicKey;\r\n  isPoolToken?: boolean;\r\n}\r\n\r\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && balanceAccountInfo) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    if (mint.equals(WRAPPED_SOL_MINT)) {\r\n      quantityDisplay = (\r\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\r\n      );\r\n    } else {\r\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\r\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay}{' '}\r\n      {isPoolToken ? (\r\n        <>\r\n          Pool Token (<MintName mint={mint} />)\r\n        </>\r\n      ) : (\r\n        <MintName mint={mint} />\r\n      )}{' '}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React, { FormEvent, useMemo, useState } from 'react';\r\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport {\r\n  getSelectedTokenAccountForMint,\r\n  useTokenAccounts,\r\n} from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\nimport { notify } from '../../../utils/notifications';\r\nimport {\r\n  Account,\r\n  PublicKey,\r\n  SystemProgram,\r\n  Transaction,\r\n} from '@solana/web3.js';\r\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\r\nimport {\r\n  createAssociatedTokenAccount,\r\n  getAssociatedTokenAddress,\r\n} from '@project-serum/associated-token';\r\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\r\nimport BN from 'bn.js';\r\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\r\n          <PauseUnpauseTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\r\n          <AddAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\r\n          <RemoveAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Deposit\" key=\"deposit\">\r\n          <DepositTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\r\n          <WithdrawTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\r\n          <UpdateFeeTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface TabParams {\r\n  poolInfo: PoolInfo;\r\n}\r\n\r\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function sendPause() {\r\n    if (!connected) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error pausing pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function sendUnpause() {\r\n    if (!connected) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error unpausing pool',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={sendPause} disabled={submitting}>\r\n        Pause\r\n      </Button>{' '}\r\n      <Button onClick={sendUnpause} disabled={submitting}>\r\n        Unpause\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AddAssetTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const [address, setAddress] = useState('');\r\n  const { wallet, connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'adding asset to pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = await getAssociatedTokenAddress(\r\n        poolInfo.state.vaultSigner,\r\n        mintAddress,\r\n      );\r\n      const transaction = new Transaction();\r\n      if (!(await connection.getAccountInfo(vaultAddress))) {\r\n        transaction.add(\r\n          await createAssociatedTokenAccount(\r\n            wallet.publicKey,\r\n            poolInfo.state.vaultSigner,\r\n            mintAddress,\r\n          ),\r\n        );\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintSelector\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const { connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'removing asset from pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction DepositTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'depositing to pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: parsedQuantity + 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.transfer({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: walletTokenAccount.pubkey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n    true,\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction WithdrawTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'withdrawing from pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.approveDelegate(\r\n          poolInfo,\r\n          vaultAddress,\r\n          wallet.publicKey,\r\n          new BN(parsedQuantity),\r\n        ),\r\n      );\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: wrappedSolAccount.publicKey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: walletTokenAccount.pubkey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\r\n  const [feeRate, setFeeRate] = useState('');\r\n\r\n  const { connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'changing pool fee',\r\n    async () => {\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.updateFee(\r\n          poolInfo,\r\n          Math.round(parseFloat(feeRate) * 1_000_000),\r\n        ),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Fee Rate</>}\r\n        value={feeRate}\r\n        onChange={(e) => setFeeRate(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction useOnSubmitHandler(\r\n  description: string,\r\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\r\n  refresh = false,\r\n): [(FormEvent) => void, boolean] {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function onSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    if (submitting) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      if (!connected) {\r\n        throw new Error('Wallet not connected');\r\n      }\r\n      const [transaction, signers] = await makeTransaction();\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n      if (refresh) {\r\n        refreshAllCaches();\r\n      }\r\n    } catch (e) {\r\n      notify({\r\n        message: `Error ${description}`,\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return [onSubmit, submitting];\r\n}\r\n\r\nfunction SubmitButton({ canSubmit, submitting }) {\r\n  const { connected } = useWallet();\r\n  return (\r\n    <Button\r\n      htmlType=\"submit\"\r\n      type=\"primary\"\r\n      disabled={!canSubmit || submitting}\r\n    >\r\n      {!connected ? 'Wallet not connected' : 'Submit'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction MintInPoolSelector({\r\n  poolInfo,\r\n  label,\r\n  value,\r\n  onChange,\r\n  style,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n  label: string;\r\n  value: string;\r\n  onChange: (string) => void;\r\n  style: any;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\r\n        {poolInfo.state.assets.map((asset) => (\r\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\r\n            {mintToTickers[asset.mint.toBase58()] ? (\r\n              <>\r\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\r\n              </>\r\n            ) : (\r\n              asset.mint.toBase58()\r\n            )}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    </Input.Group>\r\n  );\r\n}\r\n\r\nfunction MintSelector({ label, style, value, onChange }) {\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(value) ||\r\n          ticker.toLowerCase().includes(value.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, value]);\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <AutoComplete\r\n        options={options}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </Input.Group>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport {\r\n  decodePoolState,\r\n  isAdminControlledPool,\r\n  PoolInfo,\r\n} from '@project-serum/pool';\r\nimport PoolInfoPanel from './PoolInfoPanel';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\r\nimport PoolBalancesPanel from './PoolBalancesPanel';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PoolAdminPanel } from './PoolAdminPanel';\r\nimport { useWallet } from '../../../utils/wallet';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function PoolPage() {\r\n  const { poolAddress } = useParams();\r\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\r\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\r\n  );\r\n  const history = useHistory();\r\n\r\n  const poolInfo: PoolInfo | null = useMemo(() => {\r\n    if (!poolAccountInfo) {\r\n      return null;\r\n    }\r\n    try {\r\n      return {\r\n        address: new PublicKey(poolAddress),\r\n        state: decodePoolState(poolAccountInfo.data),\r\n        program: poolAccountInfo.owner,\r\n      };\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }, [poolAddress, poolAccountInfo]);\r\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\r\n    poolInfo?.state.poolTokenMint,\r\n  );\r\n  const mintInfo = useMemo(\r\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\r\n    [mintAccountInfo],\r\n  );\r\n  const { wallet } = useWallet();\r\n\r\n  if (poolInfo && mintInfo) {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          title={<>Pool {poolInfo.address.toBase58()}</>}\r\n          onBack={() => history.push('/pools')}\r\n          subTitle={poolInfo.state.name}\r\n        />\r\n        <Row>\r\n          <Col xs={24} lg={12}>\r\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24} lg={12}>\r\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24}>\r\n            <PoolBalancesPanel poolInfo={poolInfo} />\r\n          </Col>\r\n          {wallet.connected &&\r\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\r\n          isAdminControlledPool(poolInfo) ? (\r\n            <Col xs={24}>\r\n              <PoolAdminPanel poolInfo={poolInfo} />\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={<>Pool {poolAddress}</>}\r\n        onBack={() => history.push('/pools')}\r\n      />\r\n      <FloatingElement>\r\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\r\n          <Spin />\r\n        ) : (\r\n          <Text>Invalid pool</Text>\r\n        )}\r\n      </FloatingElement>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction isPublicKey(address) {\r\n  try {\r\n    new PublicKey(address);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport React, { useState } from 'react';\r\nimport { Button, Input, Typography } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  margin-bottom: 48px;\r\n`;\r\n\r\nexport default function PoolListPage() {\r\n  const [poolAddress, setPoolAddress] = useState('');\r\n  const history = useHistory();\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    history.push(`/pools/${poolAddress}`);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={3}>Pools</Title>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            value={poolAddress}\r\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\r\n            placeholder=\"Pool address\"\r\n          />\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Go\r\n          </Button>\r\n        </Form>\r\n        <Link to=\"/pools/new\">Create new pool</Link>\r\n      </FloatingElement>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport TradePage from './pages/TradePage';\r\nimport OpenOrdersPage from './pages/OpenOrdersPage';\r\nimport React from 'react';\r\nimport BalancesPage from './pages/BalancesPage';\r\nimport ConvertPage from './pages/ConvertPage';\r\nimport BasicLayout from './components/BasicLayout';\r\nimport ListNewMarketPage from './pages/ListNewMarketPage';\r\nimport NewPoolPage from './pages/pools/NewPoolPage';\r\nimport PoolPage from './pages/pools/PoolPage';\r\nimport PoolListPage from './pages/pools/PoolListPage';\r\nimport { getTradePageUrl } from './utils/markets';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <>\r\n      <HashRouter basename={'/'}>\r\n        <BasicLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to={getTradePageUrl()} />\r\n            </Route>\r\n            <Route exact path=\"/market/:marketAddress\">\r\n              <TradePage />\r\n            </Route>\r\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\r\n            <Route exact path=\"/balances\" component={BalancesPage} />\r\n            <Route exact path=\"/convert\" component={ConvertPage} />\r\n            <Route\r\n              exact\r\n              path=\"/list-new-market\"\r\n              component={ListNewMarketPage}\r\n            />\r\n            <Route exact path=\"/pools\">\r\n              <PoolListPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/new\">\r\n              <NewPoolPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/:poolAddress\">\r\n              <PoolPage />\r\n            </Route>\r\n          </Switch>\r\n        </BasicLayout>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useLocalStorageState } from './utils';\r\nimport { useInterval } from './useInterval';\r\nimport { useConnection } from './connection';\r\nimport { useWallet } from './wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useSelectedTokenAccounts,\r\n  useTokenAccounts,\r\n} from './markets';\r\nimport { settleAllFunds } from './send';\r\nimport { PreferencesContextValues } from './types';\r\n\r\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\r\n  null,\r\n);\r\n\r\nexport function PreferencesProvider({ children }) {\r\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\r\n    'autoSettleEnabled',\r\n    true,\r\n  );\r\n\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected, wallet } = useWallet();\r\n  const [marketList] = useAllMarkets();\r\n  const connection = useConnection();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n\r\n  useInterval(() => {\r\n    const autoSettle = async () => {\r\n      const markets = (marketList || []).map((m) => m.market);\r\n      try {\r\n        console.log('Auto settling');\r\n        await settleAllFunds({\r\n          connection,\r\n          wallet,\r\n          tokenAccounts: tokenAccounts || [],\r\n          markets,\r\n          selectedTokenAccounts,\r\n        });\r\n      } catch (e) {\r\n        console.log('Error auto settling funds: ' + e.message);\r\n      }\r\n    };\r\n\r\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\r\n  }, 10000);\r\n\r\n  return (\r\n    <PreferencesContext.Provider\r\n      value={{\r\n        autoSettleEnabled,\r\n        setAutoSettleEnabled,\r\n      }}\r\n    >\r\n      {children}\r\n    </PreferencesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePreferences() {\r\n  const context = useContext(PreferencesContext);\r\n  if (!context) {\r\n    throw new Error('Missing preferences context');\r\n  }\r\n  return {\r\n    autoSettleEnabled: context.autoSettleEnabled,\r\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\r\n  };\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport './App.less';\r\nimport { ConnectionProvider } from './utils/connection';\r\nimport { WalletProvider } from './utils/wallet';\r\nimport { GlobalStyle } from './global_style';\r\nimport { Spin } from 'antd';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { Routes } from './routes';\r\nimport { PreferencesProvider } from './utils/preferences';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Suspense fallback={() => <Spin size=\"large\" />}>\r\n      <GlobalStyle />\r\n      <ErrorBoundary>\r\n        <ConnectionProvider>\r\n          <WalletProvider>\r\n            <PreferencesProvider>\r\n              <Suspense fallback={() => <Spin size=\"large\" />}>\r\n                <Routes />\r\n              </Suspense>\r\n            </PreferencesProvider>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}