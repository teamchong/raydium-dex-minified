{"version":3,"sources":["assets/logo1.svg","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","charting_library/charting_library.esm.js","components/TradingView/saveLoadAdapter.tsx","utils/Datafeed.tsx","components/TradingView/index.tsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","includes","split","length","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","signTransaction","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signAllTransactions","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","_MARKETS","deprecated","MARKETS","USE_MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","setMarketName","then","catch","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","borderTop","borderBottom","padding","fontSize","textAlign","paddingRight","paddingBottom","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","onSettleFunds","rowItem","setRowItem","title","dataIndex","render","ghost","overflowX","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","cancel","orderId","orderInfos","text","FillsTable","fills","fill","useFills","liquidity","feeCost","FeesTable","balance","feeTier","marginLeft","fontWeight","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","Paragraph","Tabs","TabPane","Index","activeKeyStr","setActiveKeyStr","paddingTop","supportsSrmFeeDiscounts","width","border","background","fontStyle","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","icon","CopyOutlined","navigator","clipboard","writeText","RowBox","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","marginTop","currency","align","src","logo1","alt","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","flexDirection","defaultValue","bordered","left","top","borderRadius","suffix","onChange","onSetQuoteSize","tipFormatter","marks","paddingLeft","checked","disabled","block","toUpperCase","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","overflowY","time","toLocaleTimeString","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","assign","o","arguments","n","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","bind","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","chart","getLanguage","setSymbol","changeSymbol","window","removeEventListener","splice","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","saveChart","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","addEventListener","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","symbol","encodeURIComponent","timeframe","toolbar_bg","replace","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chartData","content","timestamp","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","X","A","F","apiGet","N","tVDWs","d","Qeeef","B","_lodash","method","M","j","f","TextEncoder","crypto","Uint8Array","w","DSQWA","H","K","rlUik","MtwRi","cPLzc","FyLkI","l","makeDataFeed","subscriptions","onReady","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","getBars","symbolInfo","onHistoryCallback","onErrorCallback","firstDataRequest","ceil","convertResolution","parseCandles","nodeData","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","candle","reduceTs","lastCandle","close","c","open","high","h","low","volume","v","unsubscribeBars","ts","resolutionTv","candles","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageUrl","chartsStorageApiVersion","clientId","userId","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","className","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","newMarKets","newCustomMarkets","MarketSelector","onDeleteCustomMarket","trigger","InfoCircleOutlined","PlusCircleOutlined","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","DeleteOutlined","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","connect","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","defaultActiveKey","tab","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","addonBefore","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","wrap","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","options","ticker","validateStatus","hasFeedback","help","parsed","Item","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","onSubmit","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","Group","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e170d6d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.ab26bb1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3cdaf3a1.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(obj, { prefix = '', restrictTo }) {\n  let restrict = restrictTo;\n  if (restrict) {\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\n  }\n  const result = {};\n  (function recurse(obj, current, keys) {\n    (keys || Object.keys(obj)).forEach((key) => {\n      const value = obj[key];\n      const newKey = current ? current + '.' + key : key; // joined key with dot\n      if (value && typeof value === 'object') {\n        // @ts-ignore\n        recurse(value, newKey); // nested object\n      } else {\n        result[newKey] = value;\n      }\n    });\n  })(obj, prefix, restrict);\n  return result;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      localStorage.removeItem('feeDiscountKey')\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n      localStorage.removeItem('feeDiscountKey')\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: RGB(15,20,41,1);\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #0F1429\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: Wallet;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: Wallet;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\nimport { sleep } from './utils';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst _MARKETS = [\n  {name: 'RAY/USDT', deprecated: false, address: new PublicKey('HZyhLoyAnfQ72irTdqPdWo2oFL9zzXaBmAqN72iF3sdX'), programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o')},\n  {name: 'RAY/USDC', deprecated: false, address: new PublicKey('Bgz8EEMBjejAGSn6FdtKJkSGtvg4cuJUuRwaCBp28S3U'), programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o')},\n  {name: 'RAY/SRM', deprecated: false, address: new PublicKey('HSGuveQDXtvYR432xjpKPgHfzWQxnb3T8FNuAAvaBbsU'), programId: new PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o')},\n  ...MARKETS\n]\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? _MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : _MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'RAY/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  const [market, setMarket] = useState<Market | null>();\n\n  const [marketName, setMarketName] = useState('RAY/USDT');\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo) {\n      if (marketInfo.deprecated) {\n        console.log('Switching markets from deprecated', marketInfo);\n        if (DEFAULT_MARKET) {\n          // setMarketAddress(DEFAULT_MARKET.address.toBase58());\n          setMarketAddress('HZyhLoyAnfQ72irTdqPdWo2oFL9zzXaBmAqN72iF3sdX');\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    } else {\n      setMarketName(marketInfo.name);\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n        marketName,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  // margin: 5px;\n  // padding: 20px;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 16px 0 12px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 15px 0 12px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={{\n        ...(smallScreen\n          ? { flex: 1 }\n          : { height: '500px', overflow: 'hidden' }),\n        height: 540,\n      }}\n    >\n      <Title\n        style={{\n          borderTop: '1px solid #1C274F',\n          borderBottom: '1px solid #1C274F',\n          padding: '12px 0 12px 16px',\n          color: 'rgba(241, 241, 242, 0.75)',\n          fontSize: 14,\n        }}\n      >\n        Order book\n      </Title>\n      <SizeTitle>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Size ({baseCurrency})\n        </Col>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            paddingRight: 20,\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      <div style={{ paddingBottom: 16 }}>\n        {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n          <OrderbookRow\n            key={price + ''}\n            price={price}\n            size={size}\n            side={'sell'}\n            sizePercent={sizePercent}\n            onPriceClick={() => onPrice(price)}\n            onSizeClick={() => onSize(size)}\n          />\n        ))}\n      </div>\n      <MarkPriceComponent markPrice={markPrice} />\n      <SizeTitle>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Size ({baseCurrency})\n        </Col>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            paddingRight: 20,\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row\n        ref={element}\n        style={{ marginBottom: 3, fontSize: 12 }}\n        onClick={onSizeClick}\n      >\n        <Col span={12} style={{ textAlign: 'right' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle\n        justify=\"center\"\n        style={{\n          borderTop: '1px solid #1C274F',\n          borderBottom: '1px solid #1C274F',\n          fontSize: 16,\n        }}\n      >\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button, Col, Row } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n  const [rowItem, setRowItem] = useState(4);\n  if (showMarket) {\n    setRowItem(rowItem + 1);\n  }\n  if (hideWalletBalance) {\n    setRowItem(rowItem + 1);\n  }\n  // setRowItem(Math.floor(24 / rowItem));\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <>\n      <Row\n        style={{\n          fontSize: 14,\n          color: 'rgba(241, 241, 242, 0.5)',\n          paddingBottom: 16,\n        }}\n      >\n        {showMarket ? (\n          <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\n            Market\n          </Col>\n        ) : null}\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Coin\n        </Col>\n        {hideWalletBalance ? (\n          <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n            Wallet Balance\n          </Col>\n        ) : null}\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Orders\n        </Col>\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Unsettled\n        </Col>\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          action\n        </Col>\n      </Row>\n      <div style={{ height: 350, overflowX: 'hidden' }}>\n        {balances.map(\n          (\n            { marketName, coin, wallet, orders, unsettled, market, openOrders },\n            i,\n          ) => (\n            <Row\n              key={i}\n              style={{\n                fontSize: 14,\n                color: 'rgba(241, 241, 242, 1)',\n                paddingBottom: 16,\n              }}\n            >\n              {showMarket ? (\n                <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\n                  {marketName}\n                </Col>\n              ) : null}\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {coin}\n              </Col>\n              {hideWalletBalance ? (\n                <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                  {wallet}\n                </Col>\n              ) : null}\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {orders}\n              </Col>\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {unsettled}\n              </Col>\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                <Button\n                  ghost\n                  style={{ marginRight: 12 }}\n                  onClick={() => onSettleFunds(market, openOrders)}\n                >\n                  Settle {marketName}\n                </Button>\n              </Col>\n            </Row>\n          ),\n        )}\n      </div>\n    </>\n    // <DataTable\n    //   emptyLabel=\"No balances\"\n    //   dataSource={balances}\n    //   columns={columns}\n    //   pagination={false}\n    // />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: rgba(241, 241, 242, 1);\n  // border: 1px solid rgba(194, 0, 251, 0.1);\n  border: 1px solid #C200FB;\n  border-radius: 4px;\n  width: 65px;\n  height: 20px;\n  font-size: 10;\n  padding: 0;\n  margin: 0;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Pirce</Col>\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\n        </Row>\n        <div style={{ height: 350, overflowX: 'hidden' }}>\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\n              <Col span={4} style={{ textAlign: 'right' }}>\n                <CancelButton\n                  onClick={() => cancel(dataSource[i])}\n                  loading={cancelId + '' === orderId + ''}\n                >\n                  Cancel\n                </CancelButton>\n              </Col>\n            </Row>\n          ))}\n        </div>\n        {/*<DataTable*/}\n        {/*  emptyLabel=\"No open orders\"*/}\n        {/*  dataSource={dataSource}*/}\n        {/*  columns={columns}*/}\n        {/*  pagination={true}*/}\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\n        {/*  loading={loading !== undefined && loading}*/}\n        {/*/>*/}\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Row\n            style={{\n              fontSize: 14,\n              color: 'rgba(241, 241, 242, 0.5)',\n              paddingBottom: 16,\n            }}\n          >\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Market\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Side\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Size\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Pirce\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Liquidity\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              {quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees'}\n            </Col>\n          </Row>\n          <div style={{ height: 350, overflowX: 'hidden' }}>\n            {dataSource.map(\n              ({ marketName, side, size, price, liquidity, feeCost }, i) => (\n                <Row\n                  key={i}\n                  style={{\n                    fontSize: 14,\n                    color: 'rgba(241, 241, 242, 1)',\n                    paddingBottom: 16,\n                  }}\n                >\n                  <Col span={4} style={{ textAlign: 'left' }}>\n                    {marketName}\n                  </Col>\n                  <Col\n                    span={4}\n                    style={{\n                      textAlign: 'right',\n                      color: 'rgba(90, 196, 190, 1)',\n                    }}\n                  >\n                    {side}\n                  </Col>\n                  <Col\n                    span={4}\n                    style={{\n                      textAlign: 'right',\n                      color: 'rgba(90, 196, 190, 1)',\n                    }}\n                  >\n                    {size}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {price}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {liquidity}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {feeCost}\n                  </Col>\n                </Row>\n              ),\n            )}\n          </div>\n          {/*<DataTable*/}\n          {/*  dataSource={dataSource}*/}\n          {/*  columns={columns}*/}\n          {/*  pagination={true}*/}\n          {/*  pageSize={5}*/}\n          {/*  emptyLabel=\"No fills\"*/}\n          {/*/>*/}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag, Button } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Row\n            style={{\n              fontSize: 14,\n              color: 'rgba(241, 241, 242, 0.5)',\n              paddingBottom: 16,\n            }}\n          >\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Fee Tier\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Taker\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Maker\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Public Key\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Balance\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Mint\n            </Col>\n          </Row>\n          <div style={{ height: 350, overflowX: 'hidden' }}>\n            {dataSource.map(({ mint, balance, pubkey, feeTier }, index) => (\n              <Row\n                key={index}\n                style={{\n                  fontSize: 14,\n                  color: 'rgba(241, 241, 242, 1)',\n                  paddingBottom: 16,\n                }}\n              >\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  <Typography>{feeTier}</Typography>\n                  {index === 0 ? (\n                    <div style={{ marginLeft: 10 }}>\n                      <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                        Selected\n                      </Tag>\n                    </div>\n                  ) : null}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {percentFormat.format(getFeeRates(feeTier).taker)}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {percentFormat.format(getFeeRates(feeTier).maker)}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {pubkey.toBase58()}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {balance}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {mint.equals(TokenInstructions.SRM_MINT)\n                    ? 'SRM'\n                    : mint.equals(TokenInstructions.MSRM_MINT)\n                    ? 'MSRM'\n                    : 'UNKNOWN'}\n                </Col>\n              </Row>\n            ))}\n          </div>\n          {/*<DataTable*/}\n          {/*  dataSource={dataSource}*/}\n          {/*  columns={columns}*/}\n          {/*  pagination={true}*/}\n          {/*  pageSize={5}*/}\n          {/*  emptyLabel=\"No (M)SRM accounts\"*/}\n          {/*/>*/}\n        </Col>\n      </Row>\n      {/*<Row style={{ marginTop: 8 }}>*/}\n      {/*  <Col>*/}\n      {/*    <Typography>*/}\n      {/*      Holding SRM or MSRM makes you eligible for fee discounts:*/}\n      {/*    </Typography>*/}\n      {/*    <FeeScheduleTable />*/}\n      {/*  </Col>*/}\n      {/*</Row>*/}\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React, { useEffect, useState } from 'react';\nimport { Tabs, Typography, Col, Row } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  const [activeKeyStr, setActiveKeyStr] = useState('orders');\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\n      <Row>\n        <Col\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n          onClick={() => setActiveKeyStr('orders')}\n          style={{\n            height: 42,\n            width: '50%',\n            textAlign: 'center',\n            border: 'transparent',\n            borderBottom: activeKeyStr === 'orders' ? '2px solid #5AC4BE' : '',\n            background: 'transparent',\n            fontSize: 14,\n            fontStyle: 'normal',\n            fontWeight: 600,\n            color:\n              activeKeyStr === 'orders'\n                ? '#F1F1F2'\n                : 'rgba(241, 241, 242, 0.5)',\n            padding: '12px 0 12px',\n          }}\n        >\n          Open Orders\n        </Col>\n        <Col\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n          onClick={() => setActiveKeyStr('fills')}\n          style={{\n            height: 42,\n            width: '50%',\n            textAlign: 'center',\n            border: 'transparent',\n            borderBottom: activeKeyStr === 'fills' ? '2px solid #5AC4BE' : '',\n            background: 'transparent',\n            fontSize: 14,\n            fontStyle: 'normal',\n            fontWeight: 600,\n            color:\n              activeKeyStr === 'fills' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n            padding: '12px 0 12px',\n          }}\n        >\n          Recent Trade History\n        </Col>\n        <Col\n          span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n          onClick={() => setActiveKeyStr('balances')}\n          style={{\n            height: 42,\n            width: '50%',\n            textAlign: 'center',\n            border: 'transparent',\n            borderBottom:\n              activeKeyStr === 'balances' ? '2px solid #5AC4BE' : '',\n            background: 'transparent',\n            fontSize: 14,\n            fontStyle: 'normal',\n            fontWeight: 600,\n            color:\n              activeKeyStr === 'balances'\n                ? '#F1F1F2'\n                : 'rgba(241, 241, 242, 0.5)',\n            padding: '12px 0 12px',\n          }}\n        >\n          Balances\n        </Col>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('fees')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: activeKeyStr === 'fees' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'fees'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Fee discounts\n          </Col>\n        ) : null}\n      </Row>\n      <div\n        style={{\n          border: '1px solid #1C274F',\n          height: 400,\n          borderBottom: '',\n          padding: 16,\n        }}\n      >\n        {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\n        {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\n        {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\n        {activeKeyStr && activeKeyStr === 'fees' ? <FeesTable /> : null}\n      </div>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport logo1 from '../assets/logo1.svg';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: rgba(241, 241, 242, 0.75);\n  font-size: 12px;\n  display: 'inline-block';\n  padding-right: 15px;\n  padding-left: 15px;\n  border-radius: 4px;\n  border: 1px solid rgba(241, 241, 242, 0.5);\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <div\n       style={{\n         width: '100%',\n         borderBottom: '1px solid #1C274F',\n         fontSize: 14,\n         paddingBottom: 12,\n\n       }}\n      >\n        Wallet Balance\n      </div>\n      <div style={{ paddingRight: 10}}>\n        <Row style={{\n          marginTop: 16,\n          color: 'rgba(241, 241, 242, 0.5)',\n          fontSize: 12,\n          textAlign: 'right',\n        }}>\n          <Col span={6} style={{ textAlign: 'left' }}>\n            Asset\n          </Col>\n          <Col span={9}>\n            Wallet balance\n          </Col>\n          <Col span={9}>\n            Unsettled balance\n          </Col>\n        </Row>\n        {formattedBalances.map(\n          ([currency, balances, baseOrQuote, mint], index) => (\n            <React.Fragment key={index}>\n\n              <Row style={{\n                marginTop: 16,\n                fontSize: 12,\n                color: 'rgba(241, 241, 242, 1)',\n                textAlign: 'right',\n                borderBottom: '1px solid #1C274F',\n                paddingBottom: 18,\n              }}>\n                <Col span={6} style={{ color: 'rgba(241, 241, 242, 0.5)', textAlign: 'left' }}>\n                  {currency}\n                </Col>\n                <Col span={9}>\n                  {balances && balances.wallet}\n                </Col>\n                <Col span={9}>\n                  {balances && balances.unsettled}\n                </Col>\n                <Col span={6} style={{ paddingTop: 8}}>\n                </Col>\n                <Col span={9} style={{ paddingTop: 8}}>\n                  <ActionButton\n                    size=\"small\"\n                    onClick={() => setBaseOrQuote(baseOrQuote)}\n                  >\n                    Deposit\n                  </ActionButton>\n                </Col>\n                <Col span={9} style={{ paddingTop: 8}}>\n                  <ActionButton size=\"small\" onClick={onSettleFunds}>\n                    Settle\n                  </ActionButton>\n                </Col>\n              </Row>\n\n              {connected && (\n                <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                  <StandaloneTokenAccountsSelect\n                    accounts={tokenAccounts?.filter(\n                      (account) => account.effectiveMint.toBase58() === mint,\n                    )}\n                    mint={mint}\n                    label\n                  />\n                </RowBox>\n              )}\n            </React.Fragment>\n          ),\n        )}\n      </div>\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n      <div style={{ textAlign: 'center', paddingTop: 32 }}>\n        <img src={logo1} alt=\"\" />\n        <div style={{ paddingTop: 20, fontSize: 16, color: '#F1F1F2' }}>\n          First time trading\n        </div>\n        <div style={{ fontSize: 16, color: '#F1F1F2' }}>\n          on Raydium?\n        </div>\n        <a\n          href={'https://raydium.gitbook.io/raydium/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color : 'rgb(173,175,184)',}}\n        >\n        <div style={{ paddingTop: 16, fontSize: 12, color: '#5AC4BE' }}>\n\n            see how it works\n\n        </div>\n      </a>\n      </div>\n    </FloatingElement>\n  );\n}\n","import { Button, Input, InputNumber, Radio, Switch, Slider, Row, Col, Select } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount, useFeeDiscountKeys, useLocallyStoredFeeDiscountKey,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !wallet.publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(\n          sendConnection,\n          wallet.publicKey,\n        );\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, wallet.publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  // @ts-ignore\n  // @ts-ignore\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Row>\n          <Col\n            span={12}\n            onClick={() => setSide('buy')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 0 0'\n            }}\n          >\n            BUY\n          </Col>\n          <Col\n            span={12}\n            onClick={() => setSide('sell')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 0 0'\n            }}\n          >\n            SELL\n          </Col>\n        </Row>\n        <div\n          style={{\n            padding: '24px 24px 15px',\n          }}\n        >\n          <Select\n            defaultValue=\"Limit Order\"\n            bordered={false}\n            style={{\n              width: '100%',\n              height: 47,\n              left: 0,\n              top: 0,\n              background: '#1C274F',\n              borderRadius: 4,\n              paddingTop: 5,\n              fontSize: 14\n            }}\n          >\n            <Select.Option value=\"Limit Order\">Limit Order</Select.Option>\n            <Select.Option value=\"Market Order\">Market Order</Select.Option>\n          </Select>\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Limit price</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n              }\n              value={price}\n              step={market?.tickSize || 1}\n              onChange={(e) => setPrice(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Amount</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n              }\n              value={baseSize}\n              step={market?.tickSize || 1}\n              onChange={(e) => onSetBaseSize(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Total</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n              }\n              value={quoteSize}\n              step={market?.tickSize || 1}\n              onChange={(e) => onSetQuoteSize(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <Row style={{ paddingTop: 8}}>\n            <Col span={12}>\n              <Slider\n                style={{ width: '80%' }}\n                value={sizeFraction}\n                tipFormatter={(value) => `${value}%`}\n                marks={sliderMarks}\n                onChange={onSliderChange}\n              />\n            </Col>\n            <Col span={6} style={{\n              paddingTop: 10,\n              paddingLeft: 10,\n            }}>\n              <Switch\n                size=\"small\"\n                checked={postOnly}\n                style={{ width: 32}}\n                onChange={postOnChange}\n              />\n                <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>POST</div>\n            </Col>\n            <Col span={6} style={{\n              paddingTop: 10,\n              paddingLeft: 10,\n            }}>\n              <Switch\n                size=\"small\"\n                checked={ioc}\n                style={{ width: 32}}\n                onChange={iocOnChange}\n              />\n              <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>IOC</div>\n            </Col>\n          </Row>\n\n          <BuyButton\n            disabled={!price || !baseSize}\n            onClick={onSubmit}\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={submitting}\n            style={{\n              marginTop: 20,\n              height: 41,\n              background: 'rgba(90, 196, 190, 0.1)',\n              border: '1px solid #5AC4BE',\n              borderRadius: 4,\n            }}\n          >\n            LIMIT {side.toUpperCase()} {baseCurrency}\n          </BuyButton>\n        </div>\n      </div>\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              // marginTop: '10px',\n              minHeight: '400px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title\n        style={{\n          color: 'rgba(241, 241, 242, 0.75)',\n          fontSize: 14,\n          borderBottom: '1px solid #1C274F',\n          padding: '12px 0 12px 16px',\n        }}\n      >Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8} style={{ textAlign: 'left', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            // maxHeight: smallScreen\n            //   ? 'calc(100% - 75px)'\n            //   : 'calc(100vh - 800px)',\n            height: 350\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                  fontSize: 12,\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', fontSize: 12, }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59', fontSize: 12, }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n}: {\n  title?: undefined | any;\n  address: string;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport Link from './Link';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new USDC markets\n      </Title>\n      <Typography>\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n          }\n        >\n          Native USDC\n        </Link>{' '}\n        has arrived on Solana! See{' '}\n        <Link\n          external\n          to={\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\n          }\n        >\n          Circle's announcement\n        </Link>{' '}\n        for more information.\n      </Typography>\n      <br />\n      <Typography>\n        Serum is transitioning from the previous{' '}\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\n          }\n        >\n          Wrapped USDC\n        </Link>\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\n        directly on{' '}\n        <Link external to={'https://sollet.io'}>\n          sollet.io\n        </Link>\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\n        <Link external to={'https://ftx.com'}>\n          FTX\n        </Link>\n        .\n      </Typography>\n      <br />\n      <Typography>\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\n        over to the new USDC markets, please cancel your orders and settle your\n        funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","/* eslint-disable */\nvar t = function () {\n  return (t =\n    Object.assign ||\n    function (t) {\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\n        for (var r in (e = o[n]))\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n      return t;\n    }).apply(this, arguments);\n};\nfunction e(o, n) {\n  var i = t({}, o);\n  for (var r in n)\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\n      ? void 0 !== n[r] && (i[r] = n[r])\n      : (i[r] = e(o[r], n[r]));\n  return i;\n}\nvar o = {\n    mobile: {\n      disabled_features: [\n        'left_toolbar',\n        'header_widget',\n        'timeframes_toolbar',\n        'edit_buttons_in_legend',\n        'context_menus',\n        'control_bar',\n        'border_around_the_chart',\n      ],\n      enabled_features: [],\n    },\n  },\n  n = {\n    width: 800,\n    height: 500,\n    interval: '1D',\n    timezone: 'Etc/UTC',\n    container_id: '',\n    library_path: '',\n    locale: 'en',\n    widgetbar: {\n      details: !1,\n      watchlist: !1,\n      watchlist_settings: { default_symbols: [] },\n    },\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\n    studies_overrides: {},\n    trading_customization: { position: {}, order: {} },\n    brokerConfig: { configFlags: {} },\n    fullscreen: !1,\n    autosize: !1,\n    disabled_features: [],\n    enabled_features: [],\n    debug: !1,\n    logo: {},\n    time_frames: [\n      { text: '5y', resolution: '1W' },\n      { text: '1y', resolution: '1W' },\n      { text: '6m', resolution: '120' },\n      { text: '3m', resolution: '60' },\n      { text: '1m', resolution: '30' },\n      { text: '5d', resolution: '5' },\n      { text: '1d', resolution: '1' },\n    ],\n    client_id: '0',\n    user_id: '0',\n    charts_storage_api_version: '1.0',\n    favorites: { intervals: [], chartTypes: [] },\n  };\nfunction i() {\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\n}\nvar r = (function () {\n  function t(t) {\n    if (\n      ((this._id =\n        'tradingview_' +\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\n      (this._ready = !1),\n      (this._readyHandlers = []),\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\n      !t.datafeed)\n    )\n      throw new Error('Datafeed is not defined');\n    if (((this._options = e(n, t)), t.preset)) {\n      var i = o[t.preset];\n      i\n        ? (void 0 !== this._options.disabled_features\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\n                i.disabled_features,\n              ))\n            : (this._options.disabled_features = i.disabled_features),\n          void 0 !== this._options.enabled_features\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\n                i.enabled_features,\n              ))\n            : (this._options.enabled_features = i.enabled_features))\n        : console.warn('Unknown preset: `' + t.preset + '`');\n    }\n    'Dark' === this._options.theme &&\n      void 0 === this._options.loading_screen &&\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\n      this._create();\n  }\n  return (\n    (t.prototype.onChartReady = function (t) {\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\n    }),\n    (t.prototype.headerReady = function () {\n      var t = this;\n      return this._innerWindowLoaded.then(function () {\n        return t._innerWindow().headerReady();\n      });\n    }),\n    (t.prototype.onGrayedObjectClicked = function (t) {\n      this._innerAPI().onGrayedObjectClicked(t);\n    }),\n    (t.prototype.onShortcut = function (t, e) {\n      this._innerWindow().createShortcutAction(t, e);\n    }),\n    (t.prototype.subscribe = function (t, e) {\n      this._innerAPI().subscribe(t, e);\n    }),\n    (t.prototype.unsubscribe = function (t, e) {\n      this._innerAPI().unsubscribe(t, e);\n    }),\n    (t.prototype.chart = function (t) {\n      return this._innerAPI().chart(t);\n    }),\n    (t.prototype.getLanguage = function () {\n      return this._options.locale;\n    }),\n    (t.prototype.setSymbol = function (t, e, o) {\n      this._innerAPI().changeSymbol(t, e, o);\n    }),\n    (t.prototype.remove = function () {\n      window.removeEventListener('resize', this._onWindowResize),\n        this._readyHandlers.splice(0, this._readyHandlers.length),\n        delete window[this._id],\n        this._iFrame.parentNode &&\n          this._iFrame.parentNode.removeChild(this._iFrame);\n    }),\n    (t.prototype.closePopupsAndDialogs = function () {\n      this._innerAPI().closePopupsAndDialogs();\n    }),\n    (t.prototype.selectLineTool = function (t) {\n      this._innerAPI().selectLineTool(t);\n    }),\n    (t.prototype.selectedLineTool = function () {\n      return this._innerAPI().selectedLineTool();\n    }),\n    (t.prototype.save = function (t) {\n      this._innerAPI().saveChart(t);\n    }),\n    (t.prototype.load = function (t, e) {\n      this._innerAPI().loadChart({ json: t, extendedData: e });\n    }),\n    (t.prototype.getSavedCharts = function (t) {\n      this._innerAPI().getSavedCharts(t);\n    }),\n    (t.prototype.loadChartFromServer = function (t) {\n      this._innerAPI().loadChartFromServer(t);\n    }),\n    (t.prototype.saveChartToServer = function (t, e, o) {\n      this._innerAPI().saveChartToServer(t, e, o);\n    }),\n    (t.prototype.removeChartFromServer = function (t, e) {\n      this._innerAPI().removeChartFromServer(t, e);\n    }),\n    (t.prototype.onContextMenu = function (t) {\n      this._innerAPI().onContextMenu(t);\n    }),\n    (t.prototype.createButton = function (t) {\n      return this._innerWindow().createButton(t);\n    }),\n    (t.prototype.showNoticeDialog = function (t) {\n      this._innerAPI().showNoticeDialog(t);\n    }),\n    (t.prototype.showConfirmDialog = function (t) {\n      this._innerAPI().showConfirmDialog(t);\n    }),\n    (t.prototype.showLoadChartDialog = function () {\n      this._innerAPI().showLoadChartDialog();\n    }),\n    (t.prototype.showSaveAsChartDialog = function () {\n      this._innerAPI().showSaveAsChartDialog();\n    }),\n    (t.prototype.symbolInterval = function () {\n      return this._innerAPI().getSymbolInterval();\n    }),\n    (t.prototype.mainSeriesPriceFormatter = function () {\n      return this._innerAPI().mainSeriesPriceFormatter();\n    }),\n    (t.prototype.getIntervals = function () {\n      return this._innerAPI().getIntervals();\n    }),\n    (t.prototype.getStudiesList = function () {\n      return this._innerAPI().getStudiesList();\n    }),\n    (t.prototype.addCustomCSSFile = function (t) {\n      this._innerWindow().addCustomCSSFile(t);\n    }),\n    (t.prototype.applyOverrides = function (t) {\n      (this._options = e(this._options, { overrides: t })),\n        this._innerWindow().applyOverrides(t);\n    }),\n    (t.prototype.applyStudiesOverrides = function (t) {\n      this._innerWindow().applyStudiesOverrides(t);\n    }),\n    (t.prototype.watchList = function () {\n      return this._innerAPI().watchlist();\n    }),\n    (t.prototype.activeChart = function () {\n      return this._innerAPI().activeChart();\n    }),\n    (t.prototype.chartsCount = function () {\n      return this._innerAPI().chartsCount();\n    }),\n    (t.prototype.layout = function () {\n      return this._innerAPI().layout();\n    }),\n    (t.prototype.setLayout = function (t) {\n      this._innerAPI().setLayout(t);\n    }),\n    (t.prototype.layoutName = function () {\n      return this._innerAPI().layoutName();\n    }),\n    (t.prototype.changeTheme = function (t, e) {\n      this._innerWindow().changeTheme(t, e);\n    }),\n    (t.prototype.getTheme = function () {\n      return this._innerWindow().getTheme();\n    }),\n    (t.prototype.takeScreenshot = function () {\n      this._innerAPI().takeScreenshot();\n    }),\n    (t.prototype.lockAllDrawingTools = function () {\n      return this._innerAPI().lockAllDrawingTools();\n    }),\n    (t.prototype.hideAllDrawingTools = function () {\n      return this._innerAPI().hideAllDrawingTools();\n    }),\n    (t.prototype.drawOnAllCharts = function (t) {\n      this._innerAPI().drawOnAllCharts(t);\n    }),\n    (t.prototype.magnetEnabled = function () {\n      return this._innerAPI().magnetEnabled();\n    }),\n    (t.prototype.magnetMode = function () {\n      return this._innerAPI().magnetMode();\n    }),\n    (t.prototype.undoRedoState = function () {\n      return this._innerAPI().undoRedoState();\n    }),\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\n      this._innerAPI().setIntervalLinkingEnabled(t);\n    }),\n    (t.prototype.setTimeFrame = function (t) {\n      this._innerAPI().setTimeFrame(t);\n    }),\n    (t.prototype.symbolSync = function () {\n      return this._innerAPI().symbolSync();\n    }),\n    (t.prototype.intervalSync = function () {\n      return this._innerAPI().intervalSync();\n    }),\n    (t.prototype.crosshairSync = function () {\n      return this._innerAPI().crosshairSync();\n    }),\n    (t.prototype.timeSync = function () {\n      return this._innerAPI().timeSync();\n    }),\n    (t.prototype.getAllFeatures = function () {\n      return this._innerWindow().getAllFeatures();\n    }),\n    (t.prototype.takeClientScreenshot = function () {\n      return this._innerAPI().takeClientScreenshot();\n    }),\n    (t.prototype._innerAPI = function () {\n      return this._innerWindow().tradingViewApi;\n    }),\n    (t.prototype._innerWindow = function () {\n      return this._iFrame.contentWindow;\n    }),\n    (t.prototype._autoResizeChart = function () {\n      this._options.fullscreen &&\n        (this._iFrame.style.height = window.innerHeight + 'px');\n    }),\n    (t.prototype._create = function () {\n      var t = this,\n        e = this._render(),\n        o = document.getElementById(this._options.container_id);\n      if (null === o)\n        throw new Error(\n          'There is no such element - #' + this._options.container_id,\n        );\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\n      var n = this._iFrame;\n      (this._options.autosize || this._options.fullscreen) &&\n        ((n.style.width = '100%'),\n        this._options.fullscreen || (n.style.height = '100%')),\n        window.addEventListener('resize', this._onWindowResize),\n        this._onWindowResize(),\n        (this._innerWindowLoaded = new Promise(function (t) {\n          var e = function () {\n            n.removeEventListener('load', e, !1), t();\n          };\n          n.addEventListener('load', e, !1);\n        })),\n        this._innerWindowLoaded.then(function () {\n          t._innerWindow().widgetReady(function () {\n            t._ready = !0;\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\n              var n = o[e];\n              try {\n                n.call(t);\n              } catch (i) {\n                console.error(i);\n              }\n            }\n            t._innerWindow().initializationFinished();\n          });\n        });\n    }),\n    (t.prototype._render = function () {\n      var t = window;\n      if (\n        ((t[this._id] = {\n          datafeed: this._options.datafeed,\n          customFormatters:\n            this._options.custom_formatters || this._options.customFormatters,\n          brokerFactory:\n            this._options.broker_factory || this._options.brokerFactory,\n          overrides: this._options.overrides,\n          studiesOverrides: this._options.studies_overrides,\n          tradingCustomization: this._options.trading_customization,\n          disabledFeatures: this._options.disabled_features,\n          enabledFeatures: this._options.enabled_features,\n          brokerConfig:\n            this._options.broker_config || this._options.brokerConfig,\n          restConfig: this._options.restConfig,\n          favorites: this._options.favorites,\n          logo: this._options.logo,\n          numeric_formatting: this._options.numeric_formatting,\n          rss_news_feed: this._options.rss_news_feed,\n          newsProvider: this._options.news_provider,\n          loadLastChart: this._options.load_last_chart,\n          saveLoadAdapter: this._options.save_load_adapter,\n          loading_screen: this._options.loading_screen,\n          settingsAdapter: this._options.settings_adapter,\n          getCustomIndicators: this._options.custom_indicators_getter,\n        }),\n        this._options.saved_data)\n      )\n        t[this._id].chartContent = { json: this._options.saved_data };\n      else if (!this._options.load_last_chart && !this._options.symbol)\n        throw new Error(\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\n        );\n      var e =\n        (this._options.library_path || '') +\n        (encodeURIComponent(this._options.locale) +\n          '-tv-chart.cbd3ae28.html#symbol=') +\n        encodeURIComponent(this._options.symbol || '') +\n        '&interval=' +\n        encodeURIComponent(this._options.interval) +\n        (this._options.timeframe\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\n          : '') +\n        (this._options.toolbar_bg\n          ? '&toolbarbg=' +\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\n          : '') +\n        (this._options.studies_access\n          ? '&studiesAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\n          : '') +\n        '&widgetbar=' +\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\n        (this._options.drawings_access\n          ? '&drawingsAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\n          : '') +\n        '&timeFrames=' +\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\n        '&locale=' +\n        encodeURIComponent(this._options.locale) +\n        '&uid=' +\n        encodeURIComponent(this._id) +\n        '&clientId=' +\n        encodeURIComponent(String(this._options.client_id)) +\n        '&userId=' +\n        encodeURIComponent(String(this._options.user_id)) +\n        (this._options.charts_storage_url\n          ? '&chartsStorageUrl=' +\n            encodeURIComponent(this._options.charts_storage_url)\n          : '') +\n        (this._options.charts_storage_api_version\n          ? '&chartsStorageVer=' +\n            encodeURIComponent(this._options.charts_storage_api_version)\n          : '') +\n        (this._options.custom_css_url\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\n          : '') +\n        (this._options.auto_save_delay\n          ? '&autoSaveDelay=' +\n            encodeURIComponent(String(this._options.auto_save_delay))\n          : '') +\n        '&debug=' +\n        encodeURIComponent(String(this._options.debug)) +\n        (this._options.snapshot_url\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\n          : '') +\n        (this._options.timezone\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\n          : '') +\n        (this._options.study_count_limit\n          ? '&studyCountLimit=' +\n            encodeURIComponent(String(this._options.study_count_limit))\n          : '') +\n        (this._options.symbol_search_request_delay\n          ? '&ssreqdelay=' +\n            encodeURIComponent(\n              String(this._options.symbol_search_request_delay),\n            )\n          : '') +\n        (this._options.compare_symbols\n          ? '&compareSymbols=' +\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\n          : '') +\n        (this._options.theme\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\n          : '');\n      return (\n        '<iframe id=\"' +\n        this._id +\n        '\" name=\"' +\n        this._id +\n        '\"  src=\"' +\n        e +\n        '\"' +\n        (this._options.autosize || this._options.fullscreen\n          ? ''\n          : ' width=\"' +\n            this._options.width +\n            '\" height=\"' +\n            this._options.height +\n            '\"') +\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\n      );\n    }),\n    t\n  );\n})();\n(window.TradingView = window.TradingView || {}),\n  (window.TradingView.version = i);\nexport { i as version, r as widget };\n","const CHARTS_KEY = 'tradingviewCharts';\nconst STUDIES_KEY = 'tradingviewStudies';\n\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\n\nexport function getAllCharts() {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  return new Promise((resolve) => resolve(charts));\n}\n\nexport function removeChart(chartId) {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== chartId);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveChart(chartData) {\n  let { content, ...info } = chartData;\n  if (!info.id) {\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\n  }\n  // @ts-ignore\n  info.timestamp = new Date() - 0;\n  content = JSON.parse(content);\n  content['content'] = JSON.parse(content['content']);\n  // Remove \"study_Overlay\" i.e the indexes\n  try {\n    for (\n      var i = 0;\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\n      i++\n    ) {\n      if (\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\n        'study_Overlay'\n      ) {\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  content['content'] = JSON.stringify(content['content']);\n  content = JSON.stringify(content);\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== info.id);\n  charts.push(info);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\n\n  return new Promise((resolve) => resolve(info.id));\n}\n\nexport function getChartContent(chartId) {\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve(content));\n}\n\nexport function getAllStudyTemplates() {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  return new Promise((resolve) => resolve(studies));\n}\n\nexport function removeStudyTemplate({ name }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== name);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveStudyTemplate({ content, ...info }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== info.name);\n  studies.push(info);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\n  return new Promise((resolve) => resolve());\n}\n\nexport function getStudyTemplateContent({ name }) {\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve(content));\n}\n","// @ts-nocheck\nimport React, { useMemo } from 'react';\nimport { sleep } from './utils';\n\nconst URL = 'https://serum-api.bonfida.com/tv/';\n\nconst X = [\n  '1045529pOiBJz',\n  'cPLzc',\n  '1142540VecyVK',\n  'rlUik',\n  '577391szPtPO',\n  'subtle',\n  'CCCPGTDWqnEg3eMUrimj',\n  '2AxnvtD',\n  'symbol',\n  '&auth=',\n  'Qeeef',\n  '171418QDwYjT',\n  'GET',\n  'MtwRi',\n  'getTime',\n  'toString',\n  'from',\n  'digest',\n  '7954rqLEJT',\n  '2uXFGco',\n  'FyLkI',\n  'SHA-256',\n  'json',\n  '28yNhqFa',\n  '440584Yhkmes',\n  'tVDWs',\n  '1159216SoDZHv',\n  'log',\n];\nconst A = function (F, p) {\n  F = F - (0x5 * 0x515 + -0x1918 + 0x1 * 0xb5);\n  let N = X[F];\n  return N;\n};\n(function (F, p) {\n  const j = function (F, p) {\n    return A(p - 0x93, F);\n  };\n  while (!![]) {\n    try {\n      const N =\n        -parseInt(j(0x1af, 0x1b3)) * -parseInt(j(0x1a0, 0x19c)) +\n        parseInt(j(0x19e, 0x19e)) +\n        -parseInt(j(0x1a3, 0x1a0)) +\n        parseInt(j(0x1be, 0x1b2)) * -parseInt(j(0x1a6, 0x19b)) +\n        -parseInt(j(0x1a3, 0x1a7)) * -parseInt(j(0x1ab, 0x1a4)) +\n        -parseInt(j(0x1a4, 0x1a2)) +\n        parseInt(j(0x1b8, 0x1ab));\n      if (N === p) {\n        break;\n      } else {\n        F['push'](F['shift']());\n      }\n    } catch (m) {\n      F['push'](F['shift']());\n    }\n  }\n})(X, 0x7 * 0x40887 + -0x19a3 * -0x116 + -0x297d18);\nasync function apiGet(F, p) {\n  const B = function (F, p) {\n    return A(p - 0x3a, F);\n  };\n  const N = {\n    tVDWs: function (m, d) {\n      return m + d;\n    },\n    Qeeef: B(0x14c, 0x153),\n  };\n  try {\n    const m = await _lodash(p[B(0x152, 0x14f)], p['from'], p['to']);\n    let d = await fetch(N[B(0x138, 0x144)](F, B(0x15c, 0x150) + m), {\n      method: N[B(0x153, 0x151)],\n    });\n    if (!d['ok']) {\n      return [];\n    }\n    let M = await d[B(0x146, 0x141)]();\n    return M;\n  } catch (l) {\n    console[B(0x143, 0x146)](l);\n    return [];\n  }\n}\nconst widgetReady = async (F) => {\n  const f = function (F, p) {\n    return A(p - 0x3d8, F);\n  };\n  const p = new TextEncoder()['encode'](F);\n  const N = await crypto[f(0x4ee, 0x4ea)][f(0x4f1, 0x4f6)](f(0x4da, 0x4de), p);\n  const m = Array[f(0x4e9, 0x4f5)](new Uint8Array(N));\n  const d = m['map']((M) =>\n    ('00' + M[f(0x502, 0x4f4)](-0x18a9 + -0x2fe * 0x2 + -0x1 * -0x1eb5))[\n      'slice'\n    ](-(-0x1363 * 0x2 + -0x24c + -0x2 * -0x148a)),\n  )['join']('');\n  return d;\n};\nconst _lodash = async (F, p, N) => {\n  const w = function (F, p) {\n    return A(F - -0x211, p);\n  };\n  const m = {\n    DSQWA: function (H, K) {\n      return H / K;\n    },\n    rlUik: function (H, K) {\n      return H - K;\n    },\n    MtwRi: function (H, K) {\n      return H * K;\n    },\n    cPLzc: function (H, K) {\n      return H(K);\n    },\n    FyLkI: function (H, K) {\n      return H + K;\n    },\n  };\n  let d = m['DSQWA'](\n    new Date()[w(-0xf6, -0xf3)](),\n    -0x24c6 + -0x1 * 0x2533 + 0x4de1,\n  );\n  const M = w(-0xfe, -0x101);\n  d = m[w(-0x101, -0x107)](\n    d,\n    d %\n      m[w(-0xf7, -0xed)](\n        0x1 * 0x12b3 + 0x3f3 * -0x1 + -0xeb1,\n        0x35b + -0x1955 + -0x1636 * -0x1,\n      ),\n  );\n  const l = await m[w(-0x103, -0x10c)](\n    widgetReady,\n    m[w(-0xf0, -0xe5)](m[w(-0xf0, -0xe8)](M, d) + F + p, N),\n  );\n  return l;\n};\n\nexport const useTvDataFeed = () => {\n  return useMemo(() => makeDataFeed(), []);\n};\n\nconst makeDataFeed = () => {\n  let subscriptions = {};\n\n  return {\n    async onReady(callback) {\n      await sleep(0);\n      callback({\n        supported_resolutions: ['1', '60', '240', 'D'],\n        supports_group_request: false,\n        supports_marks: false,\n        supports_search: true,\n        supports_timescale_marks: false,\n      });\n    },\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\n      const result = await apiGet(\n        `${URL}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${100}`,\n      );\n      onResult(result);\n    },\n    async resolveSymbol(\n      symbolName,\n      onSymboleResolvedCallback,\n      onResolveErrorCallback,\n      extension?,\n    ) {\n      const result = await apiGet(`${URL}symbols?symbol=${symbolName}`, {});\n\n      if (!result) {\n        onResolveErrorCallback();\n        return;\n      }\n      onSymboleResolvedCallback(result);\n    },\n    async getBars(\n      symbolInfo,\n      resolution,\n      from,\n      to,\n      onHistoryCallback,\n      onErrorCallback,\n      firstDataRequest,\n    ) {\n      from = Math.floor(from);\n      to = Math.ceil(to);\n\n      let url = `${URL}history?symbol=${\n        symbolInfo.name\n      }&resolution=${convertResolution(resolution)}&from=${from}`;\n\n      if (firstDataRequest) {\n        url += `&to=${to}`;\n      }\n      try {\n        const result = await apiGet(url, {\n          from: from,\n          to: to,\n          symbol: symbolInfo.name,\n        });\n        onHistoryCallback(parseCandles(result), {\n          nodeData: result.length === 0,\n        });\n      } catch (err) {\n        onErrorCallback(err);\n      }\n    },\n    async subscribeBars(\n      symbolInfo,\n      resolution,\n      onRealtimeCallback,\n      subscriberUID,\n      onResetCacheNeededCallback,\n    ) {\n      if (subscriptions[subscriberUID]) {\n        subscriptions[subscriberUID].stop();\n        delete subscriptions[subscriberUID];\n      }\n\n      let stopped = false;\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\n\n      while (!stopped) {\n        await sleep(2000);\n        for (let i = 0; i < 10; ++i) {\n          if (document.visibilityState !== 'visible') {\n            await sleep(2000);\n          }\n        }\n        if (stopped) {\n          return;\n        }\n\n        let candle;\n        try {\n          const to = Math.ceil(new Date().getTime() / 1000);\n          const from = reduceTs(to, resolution);\n          let url = `${URL}history?symbol=${\n            symbolInfo.name\n          }&resolution=${convertResolution(resolution)}&from=${from}&to=${to}`;\n\n          candle = await apiGet(url, {\n            from: from,\n            to: to,\n            symbol: symbolInfo.name,\n          });\n          const lastCandle = {\n            time: candle.t[0] * 1000,\n            close: candle.c[0],\n            open: candle.o[0],\n            high: candle.h[0],\n            low: candle.l[0],\n            volume: candle.v[0],\n          };\n          onRealtimeCallback(lastCandle);\n          continue;\n        } catch (e) {\n          console.warn(e);\n          await sleep(10000);\n          continue;\n        }\n\n        if (!stopped) {\n          console.log('!stopped', candle);\n\n          onRealtimeCallback(candle);\n        }\n      }\n    },\n    unsubscribeBars(subscriberUID) {\n      subscriptions[subscriberUID].stop();\n      delete subscriptions[subscriberUID];\n    },\n  };\n};\n\nconst reduceTs = (ts: number, resolutionTv: string) => {\n  let resolution = convertResolution(resolutionTv);\n  switch (resolution) {\n    case 1:\n      return ts - (ts % 60);\n    case 60:\n      return ts - (ts % (60 * 60));\n    case 4 * 60:\n      return ts - (ts % (4 * 60 * 60));\n    case '1D':\n      return ts - (ts % (24 * 60 * 60));\n    default:\n      return 0;\n  }\n};\n\nconst convertResolution = (resolution: string) => {\n  switch (resolution) {\n    case '1':\n      return 1;\n    case '60':\n      return 60;\n    case '240':\n      return 4 * 60;\n    case '1D':\n      return '1D';\n    default:\n      return 1;\n  }\n};\n\ninterface rawCandles {\n  s: string;\n  c: Array<number>;\n  o: Array<number>;\n  l: Array<number>;\n  h: Array<number>;\n  t: Array<number>;\n  v: Array<number>;\n}\n\ninterface bar {\n  time: number;\n  close: number;\n  open: number;\n  low: number;\n  high: number;\n  volume: number;\n}\n\nconst parseCandles = (candles: rawCandles) => {\n  const result: Array<bar> = [];\n  for (let i = 0; i < candles.t.length; i++) {\n    result.push({\n      time: candles.t[i] * 1000,\n      close: candles.c[i],\n      open: candles.o[i],\n      high: candles.h[i],\n      low: candles.l[i],\n      volume: candles.v[i],\n    });\n  }\n  return result;\n};\n","import * as React from 'react';\nimport './index.css';\nimport {\n  widget,\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n} from '../../charting_library';\nimport { useMarket } from '../../utils/markets';\nimport * as saveLoadAdapter from './saveLoadAdapter';\nimport { flatten } from '../../utils/utils';\n\nimport { findTVMarketFromAddress } from '../../utils/tradingview';\nimport { useTvDataFeed } from '../../utils/Datafeed';\n\nexport interface ChartContainerProps {\n  symbol: ChartingLibraryWidgetOptions['symbol'];\n  interval: ChartingLibraryWidgetOptions['interval'];\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\n\n  // BEWARE: no trailing slash is expected in feed URL\n  datafeedUrl: string;\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\n  clientId: ChartingLibraryWidgetOptions['client_id'];\n  userId: ChartingLibraryWidgetOptions['user_id'];\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\n  autosize: ChartingLibraryWidgetOptions['autosize'];\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\n  containerId: ChartingLibraryWidgetOptions['container_id'];\n  theme: string;\n}\n\nexport interface ChartContainerState {}\n\nexport const TVChartContainer = () => {\n  let datafeed = useTvDataFeed();\n  const defaultProps: ChartContainerProps = {\n    symbol: 'RAY/USDT',\n    // @ts-ignore\n    interval: '60',\n    auto_save_delay: 5,\n    theme: 'Dark',\n    containerId: 'tv_chart_container',\n    libraryPath: '/charting_library/',\n    chartsStorageUrl: 'https://saveload.tradingview.com',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    studiesOverrides: {},\n  };\n\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\n  const { marketName } = useMarket();\n\n  const chartProperties = JSON.parse(\n    localStorage.getItem('chartproperties') || '{}',\n  );\n\n  React.useEffect(() => {\n    const savedProperties = flatten(chartProperties, {\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\n    });\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol: marketName as string,\n      // BEWARE: no trailing slash is expected in feed URL\n      // tslint:disable-next-line:no-any\n      // @ts-ignore\n      datafeed: datafeed,\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\n      library_path: defaultProps.libraryPath as string,\n      auto_save_delay: 5,\n\n      locale: 'en',\n      disabled_features: ['use_localstorage_for_settings'],\n      enabled_features: ['study_templates'],\n      load_last_chart: true,\n      client_id: defaultProps.clientId,\n      user_id: defaultProps.userId,\n      fullscreen: defaultProps.fullscreen,\n      autosize: defaultProps.autosize,\n      studies_overrides: defaultProps.studiesOverrides,\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\n      overrides: {\n        ...savedProperties,\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\n        // 'mainSeriesProperties.candleStyle.borderColor': '#378658',\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\n      },\n      // @ts-ignore\n      save_load_adapter: saveLoadAdapter,\n      settings_adapter: {\n        initialSettings: {\n          'trading.orderPanelSettingsBroker': JSON.stringify({\n            showRelativePriceControl: false,\n            showCurrencyRiskInQty: false,\n            showPercentRiskInQty: false,\n            showBracketsInCurrency: false,\n            showBracketsInPercent: false,\n          }),\n          // \"proterty\"\n          'trading.chart.proterty':\n            localStorage.getItem('trading.chart.proterty') ||\n            JSON.stringify({\n              hideFloatingPanel: 1,\n            }),\n          'chart.favoriteDrawings':\n            localStorage.getItem('chart.favoriteDrawings') ||\n            JSON.stringify([]),\n          'chart.favoriteDrawingsPosition':\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\n            JSON.stringify({}),\n        },\n        setValue: (key, value) => {\n          localStorage.setItem(key, value);\n        },\n        removeValue: (key) => {\n          localStorage.removeItem(key);\n        },\n      },\n    };\n\n    const tvWidget = new widget(widgetOptions);\n\n    tvWidget.onChartReady(() => {\n      tvWidgetRef.current = tvWidget;\n      tvWidget\n        // @ts-ignore\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\n    });\n  }, [marketName, tvWidgetRef.current]);\n\n  return <div style={{ height: 540 }} id={defaultProps.containerId} className={'TVChartContainer'} />;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { TVChartContainer } from '../components/TradingView'\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Raydium` : 'Raydium';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n    >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n  const [newMarKets, setNewMarkets] = useState(markets);\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5, height: 64 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={newMarKets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n                          markets,\n                          placeholder,\n                          setHandleDeprecated,\n                          customMarkets,\n                          onDeleteCustomMarket,\n                        }) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      bordered={false}\n      style={{ width: 360, border: 1 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          // .sort((a, b) =>\n          //   extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n          //     ? -1\n          //     : extractQuote(a.name) !== 'USDT' &&\n          //     extractQuote(b.name) === 'USDT'\n          //     ? 1\n          //     : 0,\n          // )\n          // .sort((a, b) =>\n          //   extractBase(a.name) < extractBase(b.name)\n          //     ? -1\n          //     : extractBase(a.name) > extractBase(b.name)\n          //     ? 1\n          //     : 0,\n          // )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col\n        flex=\"360px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <TVChartContainer />\n        <UserInfoTable />\n      </Col>\n\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"360px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button, Popover } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#FFF', width: 160, background: 'RGB(26,43,67)', height: 50, borderRadius: 4 }}\n      >\n        {/*<UserOutlined />*/}\n        {!connected ? 'CONNECT WALLET' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport Wallet from '@project-serum/sol-wallet-adapter';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet: Wallet;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const [marketList] = useAllMarkets();\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select, } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  // flex-direction: row;\n  // justify-content: flex-end;\n  // flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://raydium.io/#/swap',\n  '/pools': 'https://raydium.io/#/pool',\n  '/staking': 'https://raydium.io/#/stake',\n  '/farms': 'https://raydium.io/#/farm',\n};\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper style={{ background: '#0F1429'}}>\n        <Row wrap={false} style={{ paddingTop: 25 }}>\n          <Col flex=\"none\">\n            <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n              <img src={logo} alt=\"\" style={{ width: 145, height: 40}} />\n            </LogoWrapper>\n          </Col>\n          <Col flex=\"auto\" style={{ textAlign: 'center'}}>\n              <div\n                style={{\n                  height: 50,\n                  width: 100,\n                  textAlign: 'center',\n                  border: 'transparent',\n                  borderBottom: '1px solid RGB(194,0,251)',\n                  background: 'transparent',\n                  fontSize: 14,\n                  fontStyle: 'normal',\n                  fontWeight: 600,\n                  color: 'rgb(173,175,184)',\n                  display: 'inline-block',\n                }}\n              >\n                TRADING\n              </div>\n              <div\n                style={{\n                  height: 50,\n                  width: 100,\n                  textAlign: 'center',\n                  border: 'transparent',\n                  background: 'transparent',\n                  fontSize: 14,\n                  fontStyle: 'normal',\n                  fontWeight: 600,\n                  color: 'rgb(173,175,184)',\n                  display: 'inline-block',\n                }}\n              >\n                <a\n                  href={EXTERNAL_LINKS['/swap']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ color : 'rgb(173,175,184)',}}\n                >\n                  SWAP\n                </a>\n              </div>\n              <div\n                style={{\n                  height: 50,\n                  width: 100,\n                  textAlign: 'center',\n                  border: 'transparent',\n                  background: 'transparent',\n                  fontSize: 14,\n                  fontStyle: 'normal',\n                  fontWeight: 600,\n                  color: 'rgb(173,175,184)',\n                  display: 'inline-block',\n                }}\n              >\n                <a\n                  href={EXTERNAL_LINKS['/pools']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ color : 'rgb(173,175,184)',}}\n                >\n                  POOLS\n                </a>\n              </div>\n              <div\n                style={{\n                  height: 50,\n                  width: 100,\n                  textAlign: 'center',\n                  border: 'transparent',\n                  background: 'transparent',\n                  fontSize: 14,\n                  fontStyle: 'normal',\n                  fontWeight: 600,\n                  color: 'rgb(173,175,184)',\n                  display: 'inline-block',\n                }}\n              >\n                <a\n                  href={EXTERNAL_LINKS['/staking']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ color : 'rgb(173,175,184)',}}\n                >\n                  STAKING\n                </a>\n              </div>\n              <div\n                style={{\n                  height: 50,\n                  width: 100,\n                  textAlign: 'center',\n                  border: 'transparent',\n                  background: 'transparent',\n                  fontSize: 14,\n                  fontStyle: 'normal',\n                  fontWeight: 600,\n                  color: 'rgb(173,175,184)',\n                  display: 'inline-block',\n                }}\n              >\n                <a\n                  href={EXTERNAL_LINKS['/farms']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ color : 'rgb(173,175,184)',}}\n                >\n                  FARMS\n                </a>\n              </div>\n\n            {/*<Menu*/}\n            {/*  mode=\"horizontal\"*/}\n            {/*  onClick={handleClick}*/}\n            {/*  selectedKeys={[location.pathname]}*/}\n            {/*  style={{*/}\n            {/*    borderBottom: 'none',*/}\n            {/*    backgroundColor: 'transparent',*/}\n            {/*    textAlign: 'center',*/}\n            {/*    color: '#F1F1F2',*/}\n\n            {/*  }}*/}\n            {/*>*/}\n            {/*  <Menu.Item key={tradePageUrl} style={{ width: 100}}>*/}\n            {/*    TRADEING*/}\n            {/*  </Menu.Item>*/}\n            {/*  <Menu.Item key=\"/swap\">*/}\n            {/*    <a*/}\n            {/*      href={EXTERNAL_LINKS['/swap']}*/}\n            {/*      target=\"_blank\"*/}\n            {/*      rel=\"noopener noreferrer\"*/}\n            {/*    >*/}\n            {/*      SWAP*/}\n            {/*    </a>*/}\n            {/*  </Menu.Item>*/}\n            {/*  <Menu.Item key=\"/pools\">*/}\n            {/*    <a*/}\n            {/*      href={EXTERNAL_LINKS['/pools']}*/}\n            {/*      target=\"_blank\"*/}\n            {/*      rel=\"noopener noreferrer\"*/}\n            {/*    >*/}\n            {/*      POOLS*/}\n            {/*    </a>*/}\n            {/*  </Menu.Item>*/}\n            {/*  <Menu.Item key=\"/staking\">*/}\n            {/*    <a*/}\n            {/*      href={EXTERNAL_LINKS['/staking']}*/}\n            {/*      target=\"_blank\"*/}\n            {/*      rel=\"noopener noreferrer\"*/}\n            {/*    >*/}\n            {/*      STAKING*/}\n            {/*    </a>*/}\n            {/*  </Menu.Item>*/}\n            {/*  <Menu.Item key=\"/farms\">*/}\n            {/*    <a*/}\n            {/*      href={EXTERNAL_LINKS['/farms']}*/}\n            {/*      target=\"_blank\"*/}\n            {/*      rel=\"noopener noreferrer\"*/}\n            {/*    >*/}\n            {/*      FARMS*/}\n            {/*    </a>*/}\n            {/*  </Menu.Item>*/}\n\n              {/*{!searchFocussed && (*/}\n              {/*  <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>*/}\n              {/*    <a*/}\n              {/*      href={EXTERNAL_LINKS['/swap']}*/}\n              {/*      target=\"_blank\"*/}\n              {/*      rel=\"noopener noreferrer\"*/}\n              {/*    >*/}\n              {/*      SWAP*/}\n              {/*    </a>*/}\n              {/*  </Menu.Item>*/}\n              {/*)}*/}\n              {/*{connected && (!searchFocussed || location.pathname === '/balances') && (*/}\n              {/*  <Menu.Item key=\"/balances\" style={{ margin: '0 10px', width: 100 }}>*/}\n              {/*    BALANCES*/}\n              {/*  </Menu.Item>*/}\n              {/*)}*/}\n              {/*{connected && (!searchFocussed || location.pathname === '/orders') && (*/}\n              {/*  <Menu.Item key=\"/orders\" style={{ margin: '0 10px', width: 100 }}>*/}\n              {/*    ORDERS*/}\n              {/*  </Menu.Item>*/}\n              {/*)}*/}\n              {/*{connected && (!searchFocussed || location.pathname === '/convert') && (*/}\n              {/*  <Menu.Item key=\"/convert\" style={{ margin: '0 10px', width: 100 }}>*/}\n              {/*    CONVERT*/}\n              {/*  </Menu.Item>*/}\n              {/*)}*/}\n              {/*{(!searchFocussed || location.pathname === '/list-new-market') && (*/}\n              {/*  <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px', width: 100 }}>*/}\n              {/*    ADD MARKET*/}\n              {/*  </Menu.Item>*/}\n              {/*)}*/}\n              {/*{!searchFocussed && (*/}\n              {/*  <Menu.SubMenu*/}\n              {/*    title=\"LEARN\"*/}\n              {/*    onTitleClick={() =>*/}\n              {/*      window.open(EXTERNAL_LINKS['/learn'], '_blank')*/}\n              {/*    }*/}\n              {/*    style={{ margin: '0 0px 0 10px' }}*/}\n              {/*  >*/}\n              {/*    <Menu.Item key=\"/add-market\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/add-market']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        Adding a market*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*    <Menu.Item key=\"/wallet-support\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/wallet-support']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        Supported wallets*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*    <Menu.Item key=\"/dex-list\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/dex-list']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        DEX list*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*    <Menu.Item key=\"/developer-resources\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/developer-resources']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        Developer resources*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*    <Menu.Item key=\"/explorer\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/explorer']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        Solana block explorer*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*    <Menu.Item key=\"/srm-faq\">*/}\n              {/*      <a*/}\n              {/*        href={EXTERNAL_LINKS['/srm-faq']}*/}\n              {/*        target=\"_blank\"*/}\n              {/*        rel=\"noopener noreferrer\"*/}\n              {/*      >*/}\n              {/*        SRM FAQ*/}\n              {/*      </a>*/}\n              {/*    </Menu.Item>*/}\n              {/*  </Menu.SubMenu>*/}\n              {/*)}*/}\n            {/*</Menu>*/}\n          </Col>\n          <Col flex=\"none\">\n            <WalletConnect />\n          </Col>\n          <Col flex=\"none\">\n            {/*<div*/}\n            {/*  style={{*/}\n            {/*    display: 'flex',*/}\n            {/*    alignItems: 'center',*/}\n            {/*    paddingRight: 5,*/}\n            {/*  }}*/}\n            {/*>*/}\n            {/*  <AppSearch*/}\n            {/*    onFocus={() => setSearchFocussed(true)}*/}\n            {/*    onBlur={() => setSearchFocussed(false)}*/}\n            {/*    focussed={searchFocussed}*/}\n            {/*    width={searchFocussed ? '350px' : '35px'}*/}\n            {/*  />*/}\n            {/*</div>*/}\n            <div style={{ display: 'inline-block'}}>\n              <Row\n                align=\"middle\"\n                style={{ paddingLeft: 5, paddingRight: 5 }}\n                gutter={16}\n              >\n                {/*<Col>*/}\n                {/*  <PlusCircleOutlined*/}\n                {/*    style={{ color: '#2abdd2' }}*/}\n                {/*    onClick={() => setAddEndpointVisible(true)}*/}\n                {/*  />*/}\n                {/*</Col>*/}\n                {/*<Col>*/}\n                {/*  <Popover*/}\n                {/*    content={endpoint}*/}\n                {/*    placement=\"bottomRight\"*/}\n                {/*    title=\"URL\"*/}\n                {/*    trigger=\"hover\"*/}\n                {/*  >*/}\n                {/*    <InfoCircleOutlined style={{ color: '#2abdd2' }} />*/}\n                {/*  </Popover>*/}\n                {/*</Col>*/}\n                <Col>\n                  <Select\n                    onSelect={setEndpoint}\n                    value={endpoint}\n                    style={{ marginRight: 8, width: '150px' }}\n                  >\n                    {availableEndpoints.map(({ name, endpoint }) => (\n                      <Select.Option value={endpoint} key={endpoint}>\n                        {name}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Col>\n              </Row>\n            </div>\n            {connected && (\n              <div>\n                <Popover\n                  content={<Settings autoApprove={wallet?.autoApprove} />}\n                  placement=\"bottomRight\"\n                  title=\"Settings\"\n                  trigger=\"click\"\n                >\n                  <Button style={{ marginRight: 8 }}>\n                    <SettingOutlined />\n                    Settings\n                  </Button>\n                </Popover>\n              </div>\n            )}\n            <div style={{ display: 'inline-block'}}>\n              <Select onSelect={setProvider} value={providerUrl}>\n                {WALLET_PROVIDERS.map(({ name, url }) => (\n                  <Select.Option value={url} key={url}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n            {/*<div>*/}\n            {/*  <WalletConnect />*/}\n            {/*</div>*/}\n          </Col>\n        </Row>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBa1r from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBa1r />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress))) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <WalletProvider>\n            <PreferencesProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </PreferencesProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}